ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSD.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	CapSense_CSD_lowLevelTuningDone
  18              		.bss
  19              		.type	CapSense_CSD_lowLevelTuningDone, %object
  20              		.size	CapSense_CSD_lowLevelTuningDone, 1
  21              	CapSense_CSD_lowLevelTuningDone:
  22 0000 00       		.space	1
  23              		.comm	scanSpeedTbl,2,4
  24              		.global	CapSense_CSD_prescalersTuningDone
  25              		.type	CapSense_CSD_prescalersTuningDone, %object
  26              		.size	CapSense_CSD_prescalersTuningDone, 1
  27              	CapSense_CSD_prescalersTuningDone:
  28 0001 00       		.space	1
  29              		.global	CapSense_CSD_csdStatusVar
  30              		.type	CapSense_CSD_csdStatusVar, %object
  31              		.size	CapSense_CSD_csdStatusVar, 1
  32              	CapSense_CSD_csdStatusVar:
  33 0002 00       		.space	1
  34              		.global	CapSense_CSD_sensorIndex
  35              		.type	CapSense_CSD_sensorIndex, %object
  36              		.size	CapSense_CSD_sensorIndex, 1
  37              	CapSense_CSD_sensorIndex:
  38 0003 00       		.space	1
  39              		.global	CapSense_CSD_sensorRaw
  40              		.align	2
  41              		.type	CapSense_CSD_sensorRaw, %object
  42              		.size	CapSense_CSD_sensorRaw, 24
  43              	CapSense_CSD_sensorRaw:
  44 0004 00000000 		.space	24
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.comm	CapSense_CSD_csdTrim1,1,1
  46              		.comm	CapSense_CSD_unscannedSnsDriveMode,12,4
  47              		.comm	CapSense_CSD_sensorEnableMaskBackup,2,4
  48              		.global	CapSense_CSD_sensorEnableMask
  49              		.data
  50              		.align	2
  51              		.type	CapSense_CSD_sensorEnableMask, %object
  52              		.size	CapSense_CSD_sensorEnableMask, 2
  53              	CapSense_CSD_sensorEnableMask:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 2


  54 0000 FF       		.byte	-1
  55 0001 0F       		.byte	15
  56              		.global	CapSense_CSD_pcTable
  57 0002 0000     		.align	2
  58              		.type	CapSense_CSD_pcTable, %object
  59              		.size	CapSense_CSD_pcTable, 48
  60              	CapSense_CSD_pcTable:
  61 0004 08040440 		.word	1074005000
  62 0008 08040440 		.word	1074005000
  63 000c 08010440 		.word	1074004232
  64 0010 08000440 		.word	1074003976
  65 0014 08000440 		.word	1074003976
  66 0018 08000440 		.word	1074003976
  67 001c 08000440 		.word	1074003976
  68 0020 08000440 		.word	1074003976
  69 0024 08000440 		.word	1074003976
  70 0028 08000440 		.word	1074003976
  71 002c 08000440 		.word	1074003976
  72 0030 08040440 		.word	1074005000
  73              		.global	CapSense_CSD_portTable
  74              		.section	.rodata
  75              		.align	2
  76              		.type	CapSense_CSD_portTable, %object
  77              		.size	CapSense_CSD_portTable, 12
  78              	CapSense_CSD_portTable:
  79 0000 04       		.byte	4
  80 0001 04       		.byte	4
  81 0002 01       		.byte	1
  82 0003 00       		.byte	0
  83 0004 00       		.byte	0
  84 0005 00       		.byte	0
  85 0006 00       		.byte	0
  86 0007 00       		.byte	0
  87 0008 00       		.byte	0
  88 0009 00       		.byte	0
  89 000a 00       		.byte	0
  90 000b 04       		.byte	4
  91              		.global	CapSense_CSD_maskTable
  92              		.align	2
  93              		.type	CapSense_CSD_maskTable, %object
  94              		.size	CapSense_CSD_maskTable, 48
  95              	CapSense_CSD_maskTable:
  96 000c 02000000 		.word	2
  97 0010 01000000 		.word	1
  98 0014 01000000 		.word	1
  99 0018 80000000 		.word	128
 100 001c 40000000 		.word	64
 101 0020 20000000 		.word	32
 102 0024 10000000 		.word	16
 103 0028 08000000 		.word	8
 104 002c 04000000 		.word	4
 105 0030 02000000 		.word	2
 106 0034 01000000 		.word	1
 107 0038 08000000 		.word	8
 108              		.global	CapSense_CSD_pinShiftTbl
 109              		.align	2
 110              		.type	CapSense_CSD_pinShiftTbl, %object
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 3


 111              		.size	CapSense_CSD_pinShiftTbl, 12
 112              	CapSense_CSD_pinShiftTbl:
 113 003c 01       		.byte	1
 114 003d 00       		.byte	0
 115 003e 00       		.byte	0
 116 003f 07       		.byte	7
 117 0040 06       		.byte	6
 118 0041 05       		.byte	5
 119 0042 04       		.byte	4
 120 0043 03       		.byte	3
 121 0044 02       		.byte	2
 122 0045 01       		.byte	1
 123 0046 00       		.byte	0
 124 0047 03       		.byte	3
 125              		.comm	CapSense_CSD_modulationIDAC,12,4
 126              		.comm	CapSense_CSD_compensationIDAC,12,4
 127              		.global	CapSense_CSD_widgetResolution
 128              		.data
 129              		.align	2
 130              		.type	CapSense_CSD_widgetResolution, %object
 131              		.size	CapSense_CSD_widgetResolution, 4
 132              	CapSense_CSD_widgetResolution:
 133 0034 0000FF0F 		.word	268369920
 134              		.comm	CapSense_CSD_senseClkDividerVal,12,4
 135              		.comm	CapSense_CSD_sampleClkDividerVal,12,4
 136              		.global	CapSense_CSD_widgetNumber
 137              		.section	.rodata
 138              		.align	2
 139              		.type	CapSense_CSD_widgetNumber, %object
 140              		.size	CapSense_CSD_widgetNumber, 12
 141              	CapSense_CSD_widgetNumber:
 142 0048 00000000 		.space	12
 142      00000000 
 142      00000000 
 143              		.global	CapSense_CSD_prtSelTbl
 144              		.align	2
 145              		.type	CapSense_CSD_prtSelTbl, %object
 146              		.size	CapSense_CSD_prtSelTbl, 20
 147              	CapSense_CSD_prtSelTbl:
 148 0054 00000140 		.word	1073807360
 149 0058 04000140 		.word	1073807364
 150 005c 08000140 		.word	1073807368
 151 0060 0C000140 		.word	1073807372
 152 0064 10000140 		.word	1073807376
 153              		.global	CapSense_CSD_prtCfgTbl
 154              		.align	2
 155              		.type	CapSense_CSD_prtCfgTbl, %object
 156              		.size	CapSense_CSD_prtCfgTbl, 20
 157              	CapSense_CSD_prtCfgTbl:
 158 0068 08000440 		.word	1074003976
 159 006c 08010440 		.word	1074004232
 160 0070 08020440 		.word	1074004488
 161 0074 08030440 		.word	1074004744
 162 0078 08040440 		.word	1074005000
 163              		.global	CapSense_CSD_prtDRTbl
 164              		.align	2
 165              		.type	CapSense_CSD_prtDRTbl, %object
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 4


 166              		.size	CapSense_CSD_prtDRTbl, 20
 167              	CapSense_CSD_prtDRTbl:
 168 007c 00000440 		.word	1074003968
 169 0080 00010440 		.word	1074004224
 170 0084 00020440 		.word	1074004480
 171 0088 00030440 		.word	1074004736
 172 008c 00040440 		.word	1074004992
 173              		.section	.text.CapSense_CSD_Init,"ax",%progbits
 174              		.align	2
 175              		.global	CapSense_CSD_Init
 176              		.code	16
 177              		.thumb_func
 178              		.type	CapSense_CSD_Init, %function
 179              	CapSense_CSD_Init:
 180              	.LFB33:
 181              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSD.c"
   1:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSD.c **** * File Name: CapSense_CSD.c
   3:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This file provides the source code for scanning APIs for the CapSense CSD 
   7:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  component.
   8:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSD.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSD.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSD.c **** #include "CapSense_CSD.h"
  19:.\Generated_Source\PSoC4/CapSense_CSD.c **** #include "CapSense_CSD_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSD.c **** #include "cypins.h"
  21:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  22:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(0u != CapSense_CSD_CSHL_API_GENERATE)
  23:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#include "CapSense_CSD_CSHL.h"
  24:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (0u != CapSense_CSD_CSHL_API_GENERATE) */
  25:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* This definition is intended to prevent unexpected linker error. 
  27:.\Generated_Source\PSoC4/CapSense_CSD.c ****    For more details please see the IAR Technical Note 49981 */
  28:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if defined(__ICCARM__)
  29:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	extern __INLINE void CapSense_CSD_EnableSensor(uint32 sensor);
  30:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	extern __INLINE void CapSense_CSD_DisableSensor(uint32 sensor);
  31:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (__ICCARM__) */	
  32:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* SmartSense functions */
  34:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  35:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 CapSense_CSD_lowLevelTuningDone = 0u;
  36:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint8 scanSpeedTbl[((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u];
  37:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  38:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(CapSense_CSD_PRS_OPTIONS != CapSense_CSD__PRS_NONE)
  40:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint8 CapSense_CSD_prescalersTuningDone = 0u;
  41:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_NONE) */
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 5


  42:.\Generated_Source\PSoC4/CapSense_CSD.c ****             
  43:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Global software variables */
  44:.\Generated_Source\PSoC4/CapSense_CSD.c **** volatile uint8 CapSense_CSD_csdStatusVar = 0u;   /* CapSense CSD status, variable */
  45:.\Generated_Source\PSoC4/CapSense_CSD.c **** volatile uint8 CapSense_CSD_sensorIndex = 0u;    /* Index of scannig sensor */
  46:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  47:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Global array of Raw Counts */
  48:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  49:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  50:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Backup variables for trim registers*/
  51:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_IDAC1_POLARITY == CapSense_CSD__IDAC_SINK)
  52:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint8 CapSense_CSD_csdTrim2;   
  53:.\Generated_Source\PSoC4/CapSense_CSD.c **** #else
  54:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 CapSense_CSD_csdTrim1;	
  55:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_IDAC1_POLARITY == CapSense_CSD__IDAC_SINK) */
  56:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Global array of un-scanned sensors state */
  58:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_unscannedSnsDriveMode[CapSense_CSD_TOTAL_SENSOR_COUNT];
  59:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  60:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Backup array for CapSense_CSD_sensorEnableMask */
  61:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMaskBackup[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  62:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Configured constants and arrays by Customizer */
  64:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  65:.\Generated_Source\PSoC4/CapSense_CSD.c **** 0xFFu, 0xFu, };
  66:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  67:.\Generated_Source\PSoC4/CapSense_CSD.c **** reg32 * CapSense_CSD_pcTable[] = {
  68:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e0__LS__PC, 
  69:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e1__LS__PC, 
  70:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e2__LS__PC, 
  71:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e3__LS__PC, 
  72:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e4__LS__PC, 
  73:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e5__LS__PC, 
  74:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e6__LS__PC, 
  75:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e7__LS__PC, 
  76:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e8__LS__PC, 
  77:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e9__LS__PC, 
  78:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e10__LS__PC, 
  79:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e11__LS__PC, 
  80:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
  81:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  82:.\Generated_Source\PSoC4/CapSense_CSD.c **** const uint8 CapSense_CSD_portTable[] = {
  83:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e0__LS__PORT, 
  84:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e1__LS__PORT, 
  85:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e2__LS__PORT, 
  86:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e3__LS__PORT, 
  87:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e4__LS__PORT, 
  88:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e5__LS__PORT, 
  89:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e6__LS__PORT, 
  90:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e7__LS__PORT, 
  91:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e8__LS__PORT, 
  92:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e9__LS__PORT, 
  93:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e10__LS__PORT, 
  94:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e11__LS__PORT, 
  95:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSD.c **** const uint32 CapSense_CSD_maskTable[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e0__LS__MASK, 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 6


  99:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e1__LS__MASK, 
 100:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e2__LS__MASK, 
 101:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e3__LS__MASK, 
 102:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e4__LS__MASK, 
 103:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e5__LS__MASK, 
 104:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e6__LS__MASK, 
 105:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e7__LS__MASK, 
 106:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e8__LS__MASK, 
 107:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e9__LS__MASK, 
 108:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e10__LS__MASK, 
 109:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e11__LS__MASK, 
 110:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 111:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 112:.\Generated_Source\PSoC4/CapSense_CSD.c **** const uint8 CapSense_CSD_pinShiftTbl[] = {
 113:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e0__LS__SHIFT, 
 114:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e1__LS__SHIFT, 
 115:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e2__LS__SHIFT, 
 116:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e3__LS__SHIFT, 
 117:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e4__LS__SHIFT, 
 118:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e5__LS__SHIFT, 
 119:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e6__LS__SHIFT, 
 120:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e7__LS__SHIFT, 
 121:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e8__LS__SHIFT, 
 122:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e9__LS__SHIFT, 
 123:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e10__LS__SHIFT, 
 124:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e11__LS__SHIFT, 
 125:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 126:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 127:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_modulationIDAC[CapSense_CSD_TOTAL_SENSOR_COUNT];
 128:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_compensationIDAC[CapSense_CSD_TOTAL_SENSOR_COUNT];
 129:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 130:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE] = {
 131:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_RESOLUTION_12_BITS,
 132:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 133:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 134:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_senseClkDividerVal[CapSense_CSD_TOTAL_SCANSLOT_COUNT];
 135:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_sampleClkDividerVal[CapSense_CSD_TOTAL_SCANSLOT_COUNT];
 136:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 137:.\Generated_Source\PSoC4/CapSense_CSD.c **** const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
 138:.\Generated_Source\PSoC4/CapSense_CSD.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
 139:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 140:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 141:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 142:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 143:.\Generated_Source\PSoC4/CapSense_CSD.c **** reg32* const CapSense_CSD_prtSelTbl[] = {
 144:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL0),
 145:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL1),
 146:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL2),
 147:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL3),
 148:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CY_PSOC4_4200BL)
 149:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL4),
 150:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL5)
 151:.\Generated_Source\PSoC4/CapSense_CSD.c **** #elif(0u == CapSense_CSD_M0S8CSD_BLOCK_VER)
 152:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_HSIOM_PORT_SEL4)
 153:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (0u == CapSense_CSD_M0S8CSD_BLOCK_VER) */
 154:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 155:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 7


 156:.\Generated_Source\PSoC4/CapSense_CSD.c **** reg32* const CapSense_CSD_prtCfgTbl[] = {
 157:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT0_PC),
 158:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT1_PC),
 159:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT2_PC),
 160:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT3_PC),
 161:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CY_PSOC4_4200BL)
 162:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT4_PC),
 163:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT5_PC)
 164:.\Generated_Source\PSoC4/CapSense_CSD.c **** #elif(0u == CapSense_CSD_M0S8CSD_BLOCK_VER)
 165:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT4_PC)	
 166:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (0u == CapSense_CSD_M0S8CSD_BLOCK_VER) */	
 167:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 168:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 169:.\Generated_Source\PSoC4/CapSense_CSD.c **** reg32* const CapSense_CSD_prtDRTbl[] = {
 170:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT0_DR),
 171:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT1_DR),
 172:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT2_DR),
 173:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT3_DR),
 174:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CY_PSOC4_4200BL)
 175:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT4_DR),
 176:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT5_DR),
 177:.\Generated_Source\PSoC4/CapSense_CSD.c **** #elif(0u == CapSense_CSD_M0S8CSD_BLOCK_VER)
 178:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	((reg32 *) CYREG_PRT4_DR),
 179:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (0u == CapSense_CSD_M0S8CSD_BLOCK_VER) */	
 180:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 181:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
 182:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 183:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 184:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_Init
 185:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 186:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 187:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 188:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  API initializes default CapSense configuration provided by the customizer that defines 
 189:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  the mode of component operations and resets all the sensors to an inactive state.
 190:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 191:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 192:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 193:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 194:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 195:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 196:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 197:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 198:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_immunityIndex - defines immunity level.
 199:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 200:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 201:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 202:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
 203:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 204:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_Init(void)
 205:.\Generated_Source\PSoC4/CapSense_CSD.c **** {   
 182              		.loc 1 205 0
 183              		.cfi_startproc
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 8


 189              		.cfi_def_cfa_offset 16
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 206:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 curSensor;
 207:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 208:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(CapSense_CSD_IS_SHIELD_ENABLE)
 209:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
 210:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#if((CapSense_CSD_CSH_TANK_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF) || (0u != CapSense_CSD_CS
 211:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			uint32 newRegValue;
 212:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
 213:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			newRegValue = CapSense_CSD_CTANK_CONNECTION_REG;
 214:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	        newRegValue &= ~(CapSense_CSD_CSD_CTANK_CONNECTION_MASK);
 215:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			newRegValue |= CapSense_CSD_CSD_CTANK_TO_AMUXBUS_B;
 216:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	        CapSense_CSD_CTANK_CONNECTION_REG = newRegValue;
 217:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
 218:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			#if(CapSense_CSD_CSH_TANK_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF)
 219:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				newRegValue = CapSense_CSD_CTANK_PORT_PC_REG;
 220:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		        newRegValue &= ~(CapSense_CSD_CSD_CTANK_PC_MASK);
 221:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				newRegValue |= CapSense_CSD_CTANK_PC_STRONG_MODE;
 222:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		        CapSense_CSD_CTANK_PORT_PC_REG = newRegValue;
 223:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				
 224:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				newRegValue = CapSense_CSD_CTANK_PORT_DR_REG;
 225:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		        newRegValue &= ~(CapSense_CSD_CTANK_DR_MASK);
 226:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				newRegValue |= CapSense_CSD_CTANK_DR_CONFIG;
 227:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		        CapSense_CSD_CTANK_PORT_DR_REG = newRegValue;
 228:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			#endif /* (CapSense_CSD_CSH_TANK_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF) */
 229:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	        
 230:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#endif /* ((CapSense_CSD_CSH_TANK_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF) || (CapSense_CSD_C
 231:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
 232:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_EnableShieldElectrode((uint32)CapSense_CSD_SHIELD_PIN_NUMBER, (uint32)CapSense_CSD_S
 233:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
 234:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CapSense_CSD_IS_SHIELD_ENABLE) */
 235:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 236:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SENSOR_COUNT; curSensor++)
 192              		.loc 1 236 0
 193 0006 0023     		mov	r3, #0
 194 0008 7B60     		str	r3, [r7, #4]
 195 000a 07E0     		b	.L2
 196              	.L3:
 237:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 238:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_unscannedSnsDriveMode[curSensor] = CapSense_CSD_CONNECT_INACTIVE_SNS;
 197              		.loc 1 238 0 discriminator 2
 198 000c 0A4A     		ldr	r2, .L4
 199 000e 7B68     		ldr	r3, [r7, #4]
 200 0010 D318     		add	r3, r2, r3
 201 0012 0022     		mov	r2, #0
 202 0014 1A70     		strb	r2, [r3]
 236:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SENSOR_COUNT; curSensor++)
 203              		.loc 1 236 0 discriminator 2
 204 0016 7B68     		ldr	r3, [r7, #4]
 205 0018 0133     		add	r3, r3, #1
 206 001a 7B60     		str	r3, [r7, #4]
 207              	.L2:
 236:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SENSOR_COUNT; curSensor++)
 208              		.loc 1 236 0 is_stmt 0 discriminator 1
 209 001c 7B68     		ldr	r3, [r7, #4]
 210 001e 0B2B     		cmp	r3, #11
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 9


 211 0020 F4D9     		bls	.L3
 239:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 240:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
 241:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CsdHwBlockInit();
 212              		.loc 1 241 0 is_stmt 1
 213 0022 FFF7FEFF 		bl	CapSense_CSD_CsdHwBlockInit
 242:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SetShieldDelay(CapSense_CSD_SHIELD_DELAY );
 214              		.loc 1 242 0
 215 0026 0020     		mov	r0, #0
 216 0028 FFF7FEFF 		bl	CapSense_CSD_SetShieldDelay
 243:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 244:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Clear all sensors */
 245:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 217              		.loc 1 245 0
 218 002c FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 246:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 219              		.loc 1 246 0
 220 0030 BD46     		mov	sp, r7
 221 0032 02B0     		add	sp, sp, #8
 222              		@ sp needed
 223 0034 80BD     		pop	{r7, pc}
 224              	.L5:
 225 0036 C046     		.align	2
 226              	.L4:
 227 0038 00000000 		.word	CapSense_CSD_unscannedSnsDriveMode
 228              		.cfi_endproc
 229              	.LFE33:
 230              		.size	CapSense_CSD_Init, .-CapSense_CSD_Init
 231              		.section	.text.CapSense_CSD_CsdHwBlockInit,"ax",%progbits
 232              		.align	2
 233              		.global	CapSense_CSD_CsdHwBlockInit
 234              		.code	16
 235              		.thumb_func
 236              		.type	CapSense_CSD_CsdHwBlockInit, %function
 237              	CapSense_CSD_CsdHwBlockInit:
 238              	.LFB34:
 247:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 248:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 249:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_CsdHwBlockInit
 250:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 251:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 252:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 253:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Initialises the hardware parameters of the CSD block 
 254:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 255:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 256:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 257:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 258:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 259:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 260:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 261:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 262:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdTrim1 - Contains IDAC trim register value for Sourcing Mode.
 263:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdTrim2 - Contains IDAC trim register value for Sinking Mode.
 264:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 265:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 266:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 267:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 10


 268:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 269:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_CsdHwBlockInit(void)
 270:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 239              		.loc 1 270 0
 240              		.cfi_startproc
 241 0000 80B5     		push	{r7, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 82B0     		sub	sp, sp, #8
 246              		.cfi_def_cfa_offset 16
 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 271:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 newRegValue;
 272:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 273:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    /* Set trim registers for CSD Mode */
 274:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if (CapSense_CSD_IDAC1_POLARITY == CapSense_CSD__IDAC_SINK)
 275:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		/* iDAC1 Sinking Mode */ 
 276:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_csdTrim2 = (uint8)CapSense_CSD_CSD_TRIM2_REG;
 277:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		newRegValue = CapSense_CSD_csdTrim2;
 278:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		newRegValue &= CapSense_CSD_CSD_IDAC1_TRIM_MASK;
 279:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		newRegValue |= (uint32)((uint32)CapSense_CSD_SFLASH_CSD_TRIM2_REG & (uint32)CapSense_CSD_CSFLASH_
 280:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
 281:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#if (CapSense_CSD_IDAC_CNT == 2u)
 282:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    /* iDAC2 Sinking Mode */ 
 283:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			newRegValue &= CapSense_CSD_CSD_IDAC2_TRIM_MASK;
 284:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			newRegValue |= (uint32)((uint32)CapSense_CSD_SFLASH_CSD_TRIM2_REG & (uint32)CapSense_CSD_CSFLASH
 285:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#endif /* (CapSense_CSD_IDAC_CNT == 2u) */
 286:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_CSD_TRIM2_REG = newRegValue;
 287:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #else   
 288:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		/* iDAC1 Sourcing Mode */ 
 289:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_csdTrim1 = (uint8)CapSense_CSD_CSD_TRIM1_REG;
 249              		.loc 1 289 0
 250 0006 244B     		ldr	r3, .L7
 251 0008 1B68     		ldr	r3, [r3]
 252 000a DAB2     		uxtb	r2, r3
 253 000c 234B     		ldr	r3, .L7+4
 254 000e 1A70     		strb	r2, [r3]
 290:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		newRegValue = CapSense_CSD_csdTrim1;
 255              		.loc 1 290 0
 256 0010 224B     		ldr	r3, .L7+4
 257 0012 1B78     		ldrb	r3, [r3]
 258 0014 7B60     		str	r3, [r7, #4]
 291:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		newRegValue &= CapSense_CSD_CSD_IDAC1_TRIM_MASK;
 259              		.loc 1 291 0
 260 0016 7B68     		ldr	r3, [r7, #4]
 261 0018 0F22     		mov	r2, #15
 262 001a 9343     		bic	r3, r2
 263 001c 7B60     		str	r3, [r7, #4]
 292:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		newRegValue |= (uint32)((uint32)CapSense_CSD_SFLASH_CSD_TRIM1_REG & (uint32)CapSense_CSD_CSFLASH_
 264              		.loc 1 292 0
 265 001e 204B     		ldr	r3, .L7+8
 266 0020 1B78     		ldrb	r3, [r3]
 267 0022 DBB2     		uxtb	r3, r3
 268 0024 1A1C     		mov	r2, r3
 269 0026 0F23     		mov	r3, #15
 270 0028 1340     		and	r3, r2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 11


 271 002a 7A68     		ldr	r2, [r7, #4]
 272 002c 1343     		orr	r3, r2
 273 002e 7B60     		str	r3, [r7, #4]
 293:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#if (CapSense_CSD_IDAC_CNT == 2u)
 294:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		     /* iDAC2 Sourcing Mode */ 
 295:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			newRegValue &= CapSense_CSD_CSD_IDAC2_TRIM_MASK;
 274              		.loc 1 295 0
 275 0030 7B68     		ldr	r3, [r7, #4]
 276 0032 F022     		mov	r2, #240
 277 0034 9343     		bic	r3, r2
 278 0036 7B60     		str	r3, [r7, #4]
 296:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			newRegValue |= (uint32)((uint32)CapSense_CSD_SFLASH_CSD_TRIM1_REG & (uint32)CapSense_CSD_CSFLASH
 279              		.loc 1 296 0
 280 0038 194B     		ldr	r3, .L7+8
 281 003a 1B78     		ldrb	r3, [r3]
 282 003c DBB2     		uxtb	r3, r3
 283 003e 1A1C     		mov	r2, r3
 284 0040 F023     		mov	r3, #240
 285 0042 1340     		and	r3, r2
 286 0044 7A68     		ldr	r2, [r7, #4]
 287 0046 1343     		orr	r3, r2
 288 0048 7B60     		str	r3, [r7, #4]
 297:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#endif		
 298:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_CSD_TRIM1_REG = newRegValue;
 289              		.loc 1 298 0
 290 004a 134B     		ldr	r3, .L7
 291 004c 7A68     		ldr	r2, [r7, #4]
 292 004e 1A60     		str	r2, [r3]
 299:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_IDAC1_POLARITY == CapSense_CSD__IDAC_SINK) */
 300:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 301:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Configure CSD and IDAC */
 302:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if (CapSense_CSD_IDAC_CNT > 1u)
 303:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_CSD_IDAC_REG = CapSense_CSD_DEFAULT_CSD_IDAC_CONFIG;
 293              		.loc 1 303 0
 294 0050 144B     		ldr	r3, .L7+12
 295 0052 154A     		ldr	r2, .L7+16
 296 0054 1A60     		str	r2, [r3]
 304:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_CSD_CFG_REG = CapSense_CSD_DEFAULT_CSD_CONFIG;
 297              		.loc 1 304 0
 298 0056 154B     		ldr	r3, .L7+20
 299 0058 154A     		ldr	r2, .L7+24
 300 005a 1A60     		str	r2, [r3]
 305:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#else
 306:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_CSD_IDAC_REG &= ~(CapSense_CSD_CSD_IDAC1_MODE_MASK  | CapSense_CSD_CSD_IDAC1_DATA_MA
 307:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_CSD_IDAC_REG |= CapSense_CSD_DEFAULT_CSD_IDAC_CONFIG;
 308:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
 309:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_CSD_CFG_REG &= ~(CapSense_CSD_CSD_CONFIG_MASK);
 310:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_CSD_CFG_REG |= (CapSense_CSD_DEFAULT_CSD_CONFIG);
 311:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CapSense_CSD_IDAC_CNT > 1u) */
 312:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 313:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 314:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Connect Cmod to AMUX bus */ 
 315:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue = CapSense_CSD_CMOD_CONNECTION_REG; 
 301              		.loc 1 315 0
 302 005c 154B     		ldr	r3, .L7+28
 303 005e 1B68     		ldr	r3, [r3]
 304 0060 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 12


 316:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CSD_CMOD_CONNECTION_MASK);
 305              		.loc 1 316 0
 306 0062 7A68     		ldr	r2, [r7, #4]
 307 0064 144B     		ldr	r3, .L7+32
 308 0066 1340     		and	r3, r2
 309 0068 7B60     		str	r3, [r7, #4]
 317:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= CapSense_CSD_CSD_CMOD_TO_AMUXBUS_A;
 310              		.loc 1 317 0
 311 006a 7B68     		ldr	r3, [r7, #4]
 312 006c C022     		mov	r2, #192
 313 006e D200     		lsl	r2, r2, #3
 314 0070 1343     		orr	r3, r2
 315 0072 7B60     		str	r3, [r7, #4]
 318:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CMOD_CONNECTION_REG = newRegValue;
 316              		.loc 1 318 0
 317 0074 0F4B     		ldr	r3, .L7+28
 318 0076 7A68     		ldr	r2, [r7, #4]
 319 0078 1A60     		str	r2, [r3]
 319:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 320:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Configure Dead Band PWM if it is enabled */
 321:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(CapSense_CSD_CSD_4B_PWM_MODE != CapSense_CSD__PWM_OFF)
 322:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_CSD_4B_PWM_REG = CapSense_CSD_DEFAULT_CSD_4B_PWM_CONFIG;
 323:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CapSense_CSD_CSD_4B_PWM_MODE != CapSense_CSD__PWM_OFF) */
 324:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 325:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Setup ISR */
 326:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CyIntDisable(CapSense_CSD_ISR_NUMBER);
 320              		.loc 1 326 0
 321 007a 0F20     		mov	r0, #15
 322 007c FFF7FEFF 		bl	CyIntDisable
 327:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if !defined(CY_EXTERNAL_INTERRUPT_CONFIG)		
 328:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    (void)CyIntSetVector(CapSense_CSD_ISR_NUMBER, &CapSense_CSD_ISR);
 323              		.loc 1 328 0
 324 0080 0E4B     		ldr	r3, .L7+36
 325 0082 0F20     		mov	r0, #15
 326 0084 191C     		mov	r1, r3
 327 0086 FFF7FEFF 		bl	CyIntSetVector
 329:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    CyIntSetPriority(CapSense_CSD_ISR_NUMBER, CapSense_CSD_ISR_PRIORITY);
 328              		.loc 1 329 0
 329 008a 0F20     		mov	r0, #15
 330 008c 0321     		mov	r1, #3
 331 008e FFF7FEFF 		bl	CyIntSetPriority
 330:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CY_EXTERNAL_INTERRUPT_CONFIG) */
 331:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 332              		.loc 1 331 0
 333 0092 BD46     		mov	sp, r7
 334 0094 02B0     		add	sp, sp, #8
 335              		@ sp needed
 336 0096 80BD     		pop	{r7, pc}
 337              	.L8:
 338              		.align	2
 339              	.L7:
 340 0098 00FF0840 		.word	1074331392
 341 009c 00000000 		.word	CapSense_CSD_csdTrim1
 342 00a0 62F1FF0F 		.word	268431714
 343 00a4 08000840 		.word	1074266120
 344 00a8 00020001 		.word	16777728
 345 00ac 04000840 		.word	1074266116
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 13


 346 00b0 C008A001 		.word	27265216
 347 00b4 10000140 		.word	1073807376
 348 00b8 FFF0FFFF 		.word	-3841
 349 00bc 00000000 		.word	CapSense_CSD_ISR
 350              		.cfi_endproc
 351              	.LFE34:
 352              		.size	CapSense_CSD_CsdHwBlockInit, .-CapSense_CSD_CsdHwBlockInit
 353              		.section	.text.CapSense_CSD_Enable,"ax",%progbits
 354              		.align	2
 355              		.global	CapSense_CSD_Enable
 356              		.code	16
 357              		.thumb_func
 358              		.type	CapSense_CSD_Enable, %function
 359              	CapSense_CSD_Enable:
 360              	.LFB35:
 332:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 333:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 334:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 335:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_Enable
 336:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 337:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 338:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 339:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Enables the CSD block and related resources to an active mode.
 340:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 341:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 342:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 343:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 344:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 345:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 346:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 347:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 348:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None.
 349:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 350:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 351:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 352:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
 353:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_Enable(void)
 355:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 361              		.loc 1 355 0
 362              		.cfi_startproc
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 82B0     		sub	sp, sp, #8
 368              		.cfi_def_cfa_offset 16
 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 356:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegValue;
 357:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
 358:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Enable Clocks */
 359:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_SenseClk_Stop();
 371              		.loc 1 359 0
 372 0006 FFF7FEFF 		bl	CapSense_CSD_SenseClk_Stop
 360:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_SampleClk_Stop();
 373              		.loc 1 360 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 14


 374 000a FFF7FEFF 		bl	CapSense_CSD_SampleClk_Stop
 361:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 362:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_SampleClk_SetDividerValue((uint16)CapSense_CSD_INITIAL_CLK_DIVIDER);
 375              		.loc 1 362 0
 376 000e 0020     		mov	r0, #0
 377 0010 0021     		mov	r1, #0
 378 0012 FFF7FEFF 		bl	CapSense_CSD_SampleClk_SetFractionalDividerRegister
 363:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_SenseClk_SetDividerValue((uint16)CapSense_CSD_INITIAL_CLK_DIVIDER);
 379              		.loc 1 363 0
 380 0016 0020     		mov	r0, #0
 381 0018 0021     		mov	r1, #0
 382 001a FFF7FEFF 		bl	CapSense_CSD_SenseClk_SetFractionalDividerRegister
 364:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 365:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if (0u == CapSense_CSD_IS_M0S8PERI_BLOCK)
 366:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SenseClk_Start();
 383              		.loc 1 366 0
 384 001e FFF7FEFF 		bl	CapSense_CSD_SenseClk_Start
 367:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SampleClk_Start();
 385              		.loc 1 367 0
 386 0022 FFF7FEFF 		bl	CapSense_CSD_SampleClk_Start
 368:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#else
 369:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SampleClk_Start();
 370:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SenseClk_StartEx(CapSense_CSD_SampleClk__DIV_ID);
 371:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (0u == CapSense_CSD_IS_M0S8PERI_BLOCK) */
 372:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 373:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Enable the CSD block */
 374:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CSD_CFG_REG;
 387              		.loc 1 374 0
 388 0026 084B     		ldr	r3, .L10
 389 0028 1B68     		ldr	r3, [r3]
 390 002a 7B60     		str	r3, [r7, #4]
 375:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= (CapSense_CSD_CSD_CFG_ENABLE | CapSense_CSD_CSD_CFG_SENSE_COMP_EN 
 391              		.loc 1 375 0
 392 002c 7B68     		ldr	r3, [r7, #4]
 393 002e 074A     		ldr	r2, .L10+4
 394 0030 1343     		orr	r3, r2
 395 0032 7B60     		str	r3, [r7, #4]
 376:.\Generated_Source\PSoC4/CapSense_CSD.c ****                                                    | CapSense_CSD_CSD_CFG_SENSE_EN);    
 377:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_CFG_REG = newRegValue;
 396              		.loc 1 377 0
 397 0034 044B     		ldr	r3, .L10
 398 0036 7A68     		ldr	r2, [r7, #4]
 399 0038 1A60     		str	r2, [r3]
 378:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 379:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Enable interrupt */
 380:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_ISR_NUMBER);
 400              		.loc 1 380 0
 401 003a 0F20     		mov	r0, #15
 402 003c FFF7FEFF 		bl	CyIntEnable
 381:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 403              		.loc 1 381 0
 404 0040 BD46     		mov	sp, r7
 405 0042 02B0     		add	sp, sp, #8
 406              		@ sp needed
 407 0044 80BD     		pop	{r7, pc}
 408              	.L11:
 409 0046 C046     		.align	2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 15


 410              	.L10:
 411 0048 04000840 		.word	1074266116
 412 004c 00100880 		.word	-2146955264
 413              		.cfi_endproc
 414              	.LFE35:
 415              		.size	CapSense_CSD_Enable, .-CapSense_CSD_Enable
 416              		.section	.text.CapSense_CSD_Start,"ax",%progbits
 417              		.align	2
 418              		.global	CapSense_CSD_Start
 419              		.code	16
 420              		.thumb_func
 421              		.type	CapSense_CSD_Start, %function
 422              	CapSense_CSD_Start:
 423              	.LFB36:
 382:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 383:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 384:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 385:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_Start
 386:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 387:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 388:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 389:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This is the preferred method to begin the component operation. CapSense_Start() 
 390:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  calls the CapSense_Init() function, and then calls the CapSense_Enable() 
 391:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  function. Initializes the registers and starts the CSD method of the CapSense 
 392:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  component. Resets all the sensors to an inactive state. Enables interrupts for 
 393:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensors scanning. When the SmartSense tuning mode is selected, the tuning procedure
 394:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  is applied for all the sensors. The CapSense_Start() routine must be called before 
 395:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  any other API routines.
 396:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 397:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 398:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 399:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 400:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 401:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 402:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 403:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 404:.\Generated_Source\PSoC4/CapSense_CSD.c **** *   CapSense_CSD_initVar - used to check the initial configuration, 
 405:.\Generated_Source\PSoC4/CapSense_CSD.c **** *   modified on the first function call.
 406:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_lowLevelTuningDone - Used to notify the Tuner GUI that 
 407:.\Generated_Source\PSoC4/CapSense_CSD.c **** *   tuning of the scanning parameters is done. 
 408:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 409:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 410:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 411:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
 412:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 413:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_Start(void)
 414:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 424              		.loc 1 414 0
 425              		.cfi_startproc
 426 0000 80B5     		push	{r7, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 415:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 416:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	static uint8 CapSense_CSD_initVar = 0u;
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 16


 417:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 418:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) && (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TU
 419:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint32 curSensor;
 420:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint32 rawLevel;
 421:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint32 widget;
 422:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* ((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) && (CapSense_CSD_TUNING_METHOD != CapSen
 423:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 424:.\Generated_Source\PSoC4/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 432              		.loc 1 424 0
 433 0004 0C4B     		ldr	r3, .L14
 434 0006 1B78     		ldrb	r3, [r3]
 435 0008 002B     		cmp	r3, #0
 436 000a 04D1     		bne	.L13
 425:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 426:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_Init();
 437              		.loc 1 426 0
 438 000c FFF7FEFF 		bl	CapSense_CSD_Init
 427:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 439              		.loc 1 427 0
 440 0010 094B     		ldr	r3, .L14
 441 0012 0122     		mov	r2, #1
 442 0014 1A70     		strb	r2, [r3]
 443              	.L13:
 428:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 429:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Enable();
 444              		.loc 1 429 0
 445 0016 FFF7FEFF 		bl	CapSense_CSD_Enable
 430:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 431:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* AutoTunning start */
 432:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 433:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#if(0u != CapSense_CSD_CSHL_API_GENERATE)
 434:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	        CapSense_CSD_AutoTune();
 446              		.loc 1 434 0
 447 001a FFF7FEFF 		bl	CapSense_CSD_AutoTune
 435:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	        CapSense_CSD_lowLevelTuningDone = 1u;
 448              		.loc 1 435 0
 449 001e 074B     		ldr	r3, .L14+4
 450 0020 0122     		mov	r2, #1
 451 0022 1A70     		strb	r2, [r3]
 436:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#endif /* (0u != CapSense_CSD_CSHL_API_GENERATE) */
 437:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#else
 438:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#if(0u != CapSense_CSD_AUTOCALIBRATION_ENABLE)
 439:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
 440:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			#if(CapSense_CSD_IDAC_CNT > 1u)
 441:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				CapSense_CSD_CSD_IDAC_REG &= ~(CapSense_CSD_CSD_IDAC2_MODE_MASK);	
 442:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			#endif /* (CapSense_CSD_IDAC_CNT > 1u) */
 443:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
 444:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SCANSLOT_COUNT; curSensor++)
 445:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			{
 446:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				widget = CapSense_CSD_widgetNumber[curSensor];
 447:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				rawLevel = CapSense_CSD_widgetResolution[widget] >> CapSense_CSD_RESOLUTION_OFFSET;
 448:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				
 449:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				/* Calibration level should be equal to 85% from scanning resolution */
 450:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				rawLevel = (rawLevel * 85u) / 100u;
 451:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				
 452:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				CapSense_CSD_CalibrateSensor(curSensor, rawLevel, CapSense_CSD_modulationIDAC);
 453:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			}
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 17


 454:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 455:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			#if(0u != CapSense_CSD_TOTAL_CENTROIDS_COUNT) 
 456:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				CapSense_CSD_NormalizeWidgets(CapSense_CSD_END_OF_WIDGETS_INDEX, CapSense_CSD_modulationIDAC);
 457:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			#endif /* (0u != CapSense_CSD_TOTAL_CENTROIDS_COUNT)  */
 458:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 459:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			#if(CapSense_CSD_IDAC_CNT > 1u)
 460:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SCANSLOT_COUNT; curSensor++)
 461:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			    {
 462:.\Generated_Source\PSoC4/CapSense_CSD.c **** 					CapSense_CSD_compensationIDAC[curSensor] = CapSense_CSD_modulationIDAC[curSensor] / 2u;
 463:.\Generated_Source\PSoC4/CapSense_CSD.c **** 					CapSense_CSD_modulationIDAC[curSensor] = (CapSense_CSD_modulationIDAC[curSensor] + 1u) / 2u;
 464:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			    }
 465:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				CapSense_CSD_CSD_IDAC_REG |= CapSense_CSD_CSD_IDAC2_MODE_FIXED;
 466:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			#endif /* (CapSense_CSD_IDAC_CNT > 1u) */
 467:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
 468:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #endif /* (0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) */ 
 469:.\Generated_Source\PSoC4/CapSense_CSD.c **** 					
 470:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */	
 471:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 472:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Initialize Advanced Centroid */
 473:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
 474:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_AdvancedCentroidInit();
 475:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
 476:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 477:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Connect sense comparator input to AMUXA */
 478:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CSD_CFG_REG |= CapSense_CSD_CSD_CFG_SENSE_INSEL;
 452              		.loc 1 478 0
 453 0024 064B     		ldr	r3, .L14+8
 454 0026 064A     		ldr	r2, .L14+8
 455 0028 1268     		ldr	r2, [r2]
 456 002a 8021     		mov	r1, #128
 457 002c C903     		lsl	r1, r1, #15
 458 002e 0A43     		orr	r2, r1
 459 0030 1A60     		str	r2, [r3]
 479:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 460              		.loc 1 479 0
 461 0032 BD46     		mov	sp, r7
 462              		@ sp needed
 463 0034 80BD     		pop	{r7, pc}
 464              	.L15:
 465 0036 C046     		.align	2
 466              	.L14:
 467 0038 1C000000 		.word	CapSense_CSD_initVar.5228
 468 003c 00000000 		.word	CapSense_CSD_lowLevelTuningDone
 469 0040 04000840 		.word	1074266116
 470              		.cfi_endproc
 471              	.LFE36:
 472              		.size	CapSense_CSD_Start, .-CapSense_CSD_Start
 473              		.section	.text.CapSense_CSD_Stop,"ax",%progbits
 474              		.align	2
 475              		.global	CapSense_CSD_Stop
 476              		.code	16
 477              		.thumb_func
 478              		.type	CapSense_CSD_Stop, %function
 479              	CapSense_CSD_Stop:
 480              	.LFB37:
 480:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 481:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 18


 482:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 483:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_Stop
 484:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 485:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 486:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 487:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Stops the sensor scanning, disables component interrupts, and resets all the 
 488:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensors to an inactive state. Disables the Active mode power template bits for
 489:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  the subcomponents used within CapSense.
 490:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 491:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 492:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 493:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 494:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 495:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 496:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 497:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 498:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdTrim1 - Contains the IDAC trim register value for the Sourcing Mode.
 499:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdTrim2 - Contains the IDAC trim register value for vSinking Mode.
 500:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 501:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 502:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This function should be called after scans are completed.
 503:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 504:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 505:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_Stop(void)
 506:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 481              		.loc 1 506 0
 482              		.cfi_startproc
 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 507:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Disable interrupt */
 508:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_ISR_NUMBER);
 489              		.loc 1 508 0
 490 0004 0F20     		mov	r0, #15
 491 0006 FFF7FEFF 		bl	CyIntDisable
 509:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 510:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CSD_CFG_REG &= ~(CapSense_CSD_CSD_CFG_SENSE_COMP_EN | CapSense_CSD_CSD_CFG_SENSE_EN);
 492              		.loc 1 510 0
 493 000a 094B     		ldr	r3, .L17
 494 000c 084A     		ldr	r2, .L17
 495 000e 1168     		ldr	r1, [r2]
 496 0010 084A     		ldr	r2, .L17+4
 497 0012 0A40     		and	r2, r1
 498 0014 1A60     		str	r2, [r3]
 511:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 512:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(CapSense_CSD_IDAC_CNT == 2u)
 513:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_CSD_CFG_REG &= ~(CapSense_CSD_CSD_CFG_ENABLE);
 499              		.loc 1 513 0
 500 0016 064B     		ldr	r3, .L17
 501 0018 054A     		ldr	r2, .L17
 502 001a 1268     		ldr	r2, [r2]
 503 001c 5200     		lsl	r2, r2, #1
 504 001e 5208     		lsr	r2, r2, #1
 505 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 19


 514:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CapSense_CSD_IDAC_CNT == 2u) */
 515:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 516:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Disable the Clocks */
 517:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SenseClk_Stop();
 506              		.loc 1 517 0
 507 0022 FFF7FEFF 		bl	CapSense_CSD_SenseClk_Stop
 518:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SampleClk_Stop();
 508              		.loc 1 518 0
 509 0026 FFF7FEFF 		bl	CapSense_CSD_SampleClk_Stop
 519:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 510              		.loc 1 519 0
 511 002a BD46     		mov	sp, r7
 512              		@ sp needed
 513 002c 80BD     		pop	{r7, pc}
 514              	.L18:
 515 002e C046     		.align	2
 516              	.L17:
 517 0030 04000840 		.word	1074266116
 518 0034 FFEFF7FF 		.word	-528385
 519              		.cfi_endproc
 520              	.LFE37:
 521              		.size	CapSense_CSD_Stop, .-CapSense_CSD_Stop
 522              		.section	.text.CapSense_CSD_FindNextSensor,"ax",%progbits
 523              		.align	2
 524              		.global	CapSense_CSD_FindNextSensor
 525              		.code	16
 526              		.thumb_func
 527              		.type	CapSense_CSD_FindNextSensor, %function
 528              	CapSense_CSD_FindNextSensor:
 529              	.LFB38:
 520:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 521:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 522:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 523:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_FindNextSensor
 524:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 525:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 526:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 527:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Finds the next sensor to scan. 
 528:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 529:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 530:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  snsIndex:  Current index of sensor.
 531:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 532:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 533:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns the next sensor index to scan.
 534:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 535:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 536:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorEnableMask[] - used to store bit masks of the enabled sensors.
 537:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 538:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 539:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This function affects the  current scanning and should not
 540:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  be used outside the component.
 541:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 542:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 543:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_FindNextSensor(uint8 snsIndex)
 544:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 530              		.loc 1 544 0
 531              		.cfi_startproc
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 20


 532 0000 80B5     		push	{r7, lr}
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 84B0     		sub	sp, sp, #16
 537              		.cfi_def_cfa_offset 24
 538 0004 00AF     		add	r7, sp, #0
 539              		.cfi_def_cfa_register 7
 540 0006 021C     		mov	r2, r0
 541 0008 FB1D     		add	r3, r7, #7
 542 000a 1A70     		strb	r2, [r3]
 543              	.L22:
 545:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 enableFlag;
 546:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
 547:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Check if sensor enabled */
 548:.\Generated_Source\PSoC4/CapSense_CSD.c ****     do
 549:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 550:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Proceed with next sensor */
 551:.\Generated_Source\PSoC4/CapSense_CSD.c ****         snsIndex++;
 544              		.loc 1 551 0
 545 000c FB1D     		add	r3, r7, #7
 546 000e 1A78     		ldrb	r2, [r3]
 547 0010 FB1D     		add	r3, r7, #7
 548 0012 0132     		add	r2, r2, #1
 549 0014 1A70     		strb	r2, [r3]
 552:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if(snsIndex == CapSense_CSD_TOTAL_SENSOR_COUNT)
 550              		.loc 1 552 0
 551 0016 FB1D     		add	r3, r7, #7
 552 0018 1B78     		ldrb	r3, [r3]
 553 001a 0C2B     		cmp	r3, #12
 554 001c 00D1     		bne	.L20
 553:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 554:.\Generated_Source\PSoC4/CapSense_CSD.c ****             break;
 555              		.loc 1 554 0
 556 001e 0BE0     		b	.L21
 557              	.L20:
 555:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
 556:.\Generated_Source\PSoC4/CapSense_CSD.c ****         enableFlag = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, (uint32)snsIndex);
 558              		.loc 1 556 0
 559 0020 FB1D     		add	r3, r7, #7
 560 0022 1B78     		ldrb	r3, [r3]
 561 0024 074A     		ldr	r2, .L24
 562 0026 101C     		mov	r0, r2
 563 0028 191C     		mov	r1, r3
 564 002a FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 565 002e 031C     		mov	r3, r0
 566 0030 FB60     		str	r3, [r7, #12]
 557:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }    
 558:.\Generated_Source\PSoC4/CapSense_CSD.c ****     while(enableFlag == 0u);
 567              		.loc 1 558 0
 568 0032 FB68     		ldr	r3, [r7, #12]
 569 0034 002B     		cmp	r3, #0
 570 0036 E9D0     		beq	.L22
 571              	.L21:
 559:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
 560:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return ((uint8)snsIndex);
 572              		.loc 1 560 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 21


 573 0038 FB1D     		add	r3, r7, #7
 574 003a 1B78     		ldrb	r3, [r3]
 561:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 575              		.loc 1 561 0
 576 003c 181C     		mov	r0, r3
 577 003e BD46     		mov	sp, r7
 578 0040 04B0     		add	sp, sp, #16
 579              		@ sp needed
 580 0042 80BD     		pop	{r7, pc}
 581              	.L25:
 582              		.align	2
 583              	.L24:
 584 0044 00000000 		.word	CapSense_CSD_sensorEnableMask
 585              		.cfi_endproc
 586              	.LFE38:
 587              		.size	CapSense_CSD_FindNextSensor, .-CapSense_CSD_FindNextSensor
 588              		.section	.text.CapSense_CSD_ScanSensor,"ax",%progbits
 589              		.align	2
 590              		.global	CapSense_CSD_ScanSensor
 591              		.code	16
 592              		.thumb_func
 593              		.type	CapSense_CSD_ScanSensor, %function
 594              	CapSense_CSD_ScanSensor:
 595              	.LFB39:
 562:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 563:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 564:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 565:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanSensor
 566:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 567:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 568:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 569:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets the scan settings and starts scanning a sensor. After scanning is complete,
 570:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  the ISR copies the measured sensor raw data to the global raw sensor array. 
 571:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Use of the ISR ensures this function is non-blocking. 
 572:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Each sensor has a unique number within the sensor array. 
 573:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 574:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 575:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 576:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
 577:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 578:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 579:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 580:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 581:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 582:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdStatusVar - used to provide the status and mode of the scanning process. 
 583:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets the busy status(scan in progress) and mode of scan as single scan.
 584:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store a sensor scanning sensor number.
 585:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets to the provided sensor argument.
 586:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 587:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 588:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 589:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
 590:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 591:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_ScanSensor(uint32 sensor)
 592:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 596              		.loc 1 592 0
 597              		.cfi_startproc
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 22


 598 0000 80B5     		push	{r7, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 82B0     		sub	sp, sp, #8
 603              		.cfi_def_cfa_offset 16
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 7860     		str	r0, [r7, #4]
 593:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 594:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_csdStatusVar = 0u;
 607              		.loc 1 594 0
 608 0008 084B     		ldr	r3, .L27
 609 000a 0022     		mov	r2, #0
 610 000c 1A70     		strb	r2, [r3]
 595:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = (uint8)sensor;
 611              		.loc 1 595 0
 612 000e 7B68     		ldr	r3, [r7, #4]
 613 0010 DAB2     		uxtb	r2, r3
 614 0012 074B     		ldr	r3, .L27+4
 615 0014 1A70     		strb	r2, [r3]
 596:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
 597:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Start of sensor scan */
 598:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_csdStatusVar = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 616              		.loc 1 598 0
 617 0016 054B     		ldr	r3, .L27
 618 0018 8122     		mov	r2, #129
 619 001a 1A70     		strb	r2, [r3]
 599:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_PreScan(sensor);
 620              		.loc 1 599 0
 621 001c 7B68     		ldr	r3, [r7, #4]
 622 001e 181C     		mov	r0, r3
 623 0020 FFF7FEFF 		bl	CapSense_CSD_PreScan
 600:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 624              		.loc 1 600 0
 625 0024 BD46     		mov	sp, r7
 626 0026 02B0     		add	sp, sp, #8
 627              		@ sp needed
 628 0028 80BD     		pop	{r7, pc}
 629              	.L28:
 630 002a C046     		.align	2
 631              	.L27:
 632 002c 00000000 		.word	CapSense_CSD_csdStatusVar
 633 0030 00000000 		.word	CapSense_CSD_sensorIndex
 634              		.cfi_endproc
 635              	.LFE39:
 636              		.size	CapSense_CSD_ScanSensor, .-CapSense_CSD_ScanSensor
 637              		.section	.text.CapSense_CSD_ScanWidget,"ax",%progbits
 638              		.align	2
 639              		.global	CapSense_CSD_ScanWidget
 640              		.code	16
 641              		.thumb_func
 642              		.type	CapSense_CSD_ScanWidget, %function
 643              	CapSense_CSD_ScanWidget:
 644              	.LFB40:
 601:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 602:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 23


 603:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(0u != CapSense_CSD_CSHL_API_GENERATE)
 604:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 605:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanWidget
 606:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 607:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 608:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 609:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets the scan settings and starts scanning a widget.
 610:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 611:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 612:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  uint32 widget: Widget number.
 613:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 614:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 615:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 616:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 617:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 618:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdStatusVar - used to provide the status and mode of the scanning process. 
 619:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets the busy status(scan in progress) and clears the single scan mode.
 620:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store a sensor scanning sensor number.
 621:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
 622:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorEnableMask[] - used to store bit masks of the enabled sensors.
 623:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorEnableMaskBackup[] - used to backup bit masks of the enabled
 624:.\Generated_Source\PSoC4/CapSense_CSD.c **** *   sensors.
 625:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 626:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 627:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 628:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
 629:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 630:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_ScanWidget(uint32 widget)
 631:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 645              		.loc 1 631 0
 646              		.cfi_startproc
 647 0000 80B5     		push	{r7, lr}
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 86B0     		sub	sp, sp, #24
 652              		.cfi_def_cfa_offset 32
 653 0004 00AF     		add	r7, sp, #0
 654              		.cfi_def_cfa_register 7
 655 0006 7860     		str	r0, [r7, #4]
 632:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 sensorsPerWidget;
 633:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 lastSensor;
 634:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 snsIndex;
 635:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 636:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Get first sensor in widget */
 637:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_sensorIndex = CapSense_CSD_rawDataIndex[widget];
 656              		.loc 1 637 0
 657 0008 2E4A     		ldr	r2, .L38
 658 000a 7B68     		ldr	r3, [r7, #4]
 659 000c D318     		add	r3, r2, r3
 660 000e 1A78     		ldrb	r2, [r3]
 661 0010 2D4B     		ldr	r3, .L38+4
 662 0012 1A70     		strb	r2, [r3]
 638:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 639:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Get number of sensors in widget */
 640:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
 663              		.loc 1 640 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 24


 664 0014 2D4A     		ldr	r2, .L38+8
 665 0016 7B68     		ldr	r3, [r7, #4]
 666 0018 D318     		add	r3, r2, r3
 667 001a 1B78     		ldrb	r3, [r3]
 668 001c 7B61     		str	r3, [r7, #20]
 641:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 642:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Check if generic Sensor */
 643:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	if(sensorsPerWidget == 0u)
 669              		.loc 1 643 0
 670 001e 7B69     		ldr	r3, [r7, #20]
 671 0020 002B     		cmp	r3, #0
 672 0022 01D1     		bne	.L30
 644:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 645:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		sensorsPerWidget = 1u;
 673              		.loc 1 645 0
 674 0024 0123     		mov	r3, #1
 675 0026 7B61     		str	r3, [r7, #20]
 676              	.L30:
 646:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 647:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 648:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Get last sensor in widget */
 649:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget) - 1u;
 677              		.loc 1 649 0
 678 0028 264A     		ldr	r2, .L38
 679 002a 7B68     		ldr	r3, [r7, #4]
 680 002c D318     		add	r3, r2, r3
 681 002e 1B78     		ldrb	r3, [r3]
 682 0030 1A1C     		mov	r2, r3
 683 0032 7B69     		ldr	r3, [r7, #20]
 684 0034 D318     		add	r3, r2, r3
 685 0036 013B     		sub	r3, r3, #1
 686 0038 FB60     		str	r3, [r7, #12]
 650:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 651:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Backup sensorEnableMask array */
 652:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_MASK; snsIndex++)
 687              		.loc 1 652 0
 688 003a 0023     		mov	r3, #0
 689 003c 3B61     		str	r3, [r7, #16]
 690 003e 0AE0     		b	.L31
 691              	.L32:
 653:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 654:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		/* Backup sensorEnableMask array */
 655:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_sensorEnableMaskBackup[snsIndex] = CapSense_CSD_sensorEnableMask[snsIndex];
 692              		.loc 1 655 0 discriminator 2
 693 0040 234A     		ldr	r2, .L38+12
 694 0042 3B69     		ldr	r3, [r7, #16]
 695 0044 D318     		add	r3, r2, r3
 696 0046 1A78     		ldrb	r2, [r3]
 697 0048 2249     		ldr	r1, .L38+16
 698 004a 3B69     		ldr	r3, [r7, #16]
 699 004c CB18     		add	r3, r1, r3
 700 004e 1A70     		strb	r2, [r3]
 652:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_MASK; snsIndex++)
 701              		.loc 1 652 0 discriminator 2
 702 0050 3B69     		ldr	r3, [r7, #16]
 703 0052 0133     		add	r3, r3, #1
 704 0054 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 25


 705              	.L31:
 652:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_MASK; snsIndex++)
 706              		.loc 1 652 0 is_stmt 0 discriminator 1
 707 0056 3B69     		ldr	r3, [r7, #16]
 708 0058 012B     		cmp	r3, #1
 709 005a F1D9     		bls	.L32
 656:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 657:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 658:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Update sensorEnableMask to scan the sensors that belong to widget */
 659:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_COUNT; snsIndex++)
 710              		.loc 1 659 0 is_stmt 1
 711 005c 0023     		mov	r3, #0
 712 005e 3B61     		str	r3, [r7, #16]
 713 0060 1CE0     		b	.L33
 714              	.L36:
 660:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 661:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		/* Update sensorEnableMask array bits to scan the widget only */ 
 662:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    if((snsIndex >= CapSense_CSD_sensorIndex) && (snsIndex <= lastSensor))
 715              		.loc 1 662 0
 716 0062 194B     		ldr	r3, .L38+4
 717 0064 1B78     		ldrb	r3, [r3]
 718 0066 DBB2     		uxtb	r3, r3
 719 0068 1A1C     		mov	r2, r3
 720 006a 3B69     		ldr	r3, [r7, #16]
 721 006c 9A42     		cmp	r2, r3
 722 006e 0BD8     		bhi	.L34
 723              		.loc 1 662 0 is_stmt 0 discriminator 1
 724 0070 3A69     		ldr	r2, [r7, #16]
 725 0072 FB68     		ldr	r3, [r7, #12]
 726 0074 9A42     		cmp	r2, r3
 727 0076 07D8     		bhi	.L34
 663:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
 664:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    /* Set sensor bit to scan */
 665:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, snsIndex, 1u);
 728              		.loc 1 665 0 is_stmt 1
 729 0078 154A     		ldr	r2, .L38+12
 730 007a 3B69     		ldr	r3, [r7, #16]
 731 007c 101C     		mov	r0, r2
 732 007e 191C     		mov	r1, r3
 733 0080 0122     		mov	r2, #1
 734 0082 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 735 0086 06E0     		b	.L35
 736              	.L34:
 666:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
 667:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		else
 668:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
 669:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    /* Reset sensor bit to do not scan */
 670:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, snsIndex, 0u);
 737              		.loc 1 670 0
 738 0088 114A     		ldr	r2, .L38+12
 739 008a 3B69     		ldr	r3, [r7, #16]
 740 008c 101C     		mov	r0, r2
 741 008e 191C     		mov	r1, r3
 742 0090 0022     		mov	r2, #0
 743 0092 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 744              	.L35:
 659:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_COUNT; snsIndex++)
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 26


 745              		.loc 1 659 0
 746 0096 3B69     		ldr	r3, [r7, #16]
 747 0098 0133     		add	r3, r3, #1
 748 009a 3B61     		str	r3, [r7, #16]
 749              	.L33:
 659:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_COUNT; snsIndex++)
 750              		.loc 1 659 0 is_stmt 0 discriminator 1
 751 009c 3B69     		ldr	r3, [r7, #16]
 752 009e 0B2B     		cmp	r3, #11
 753 00a0 DFD9     		bls	.L36
 671:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
 672:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 673:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 674:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Check end of scan condition */
 675:.\Generated_Source\PSoC4/CapSense_CSD.c ****     if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
 754              		.loc 1 675 0 is_stmt 1
 755 00a2 094B     		ldr	r3, .L38+4
 756 00a4 1B78     		ldrb	r3, [r3]
 757 00a6 DBB2     		uxtb	r3, r3
 758 00a8 0B2B     		cmp	r3, #11
 759 00aa 08D8     		bhi	.L29
 676:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 677:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		/* Set widget busy bit in status/control variable*/ 
 678:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_csdStatusVar = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_WIDGET_SCAN);
 760              		.loc 1 678 0
 761 00ac 0A4B     		ldr	r3, .L38+20
 762 00ae 4122     		mov	r2, #65
 763 00b0 1A70     		strb	r2, [r3]
 679:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		/* Scan first sensor of widget*/ 
 680:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_PreScan((uint32)CapSense_CSD_sensorIndex);
 764              		.loc 1 680 0
 765 00b2 054B     		ldr	r3, .L38+4
 766 00b4 1B78     		ldrb	r3, [r3]
 767 00b6 DBB2     		uxtb	r3, r3
 768 00b8 181C     		mov	r0, r3
 769 00ba FFF7FEFF 		bl	CapSense_CSD_PreScan
 770              	.L29:
 681:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 682:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 771              		.loc 1 682 0
 772 00be BD46     		mov	sp, r7
 773 00c0 06B0     		add	sp, sp, #24
 774              		@ sp needed
 775 00c2 80BD     		pop	{r7, pc}
 776              	.L39:
 777              		.align	2
 778              	.L38:
 779 00c4 00000000 		.word	CapSense_CSD_rawDataIndex
 780 00c8 00000000 		.word	CapSense_CSD_sensorIndex
 781 00cc 00000000 		.word	CapSense_CSD_numberOfSensors
 782 00d0 00000000 		.word	CapSense_CSD_sensorEnableMask
 783 00d4 00000000 		.word	CapSense_CSD_sensorEnableMaskBackup
 784 00d8 00000000 		.word	CapSense_CSD_csdStatusVar
 785              		.cfi_endproc
 786              	.LFE40:
 787              		.size	CapSense_CSD_ScanWidget, .-CapSense_CSD_ScanWidget
 788              		.section	.text.CapSense_CSD_ScanEnabledWidgets,"ax",%progbits
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 27


 789              		.align	2
 790              		.global	CapSense_CSD_ScanEnabledWidgets
 791              		.code	16
 792              		.thumb_func
 793              		.type	CapSense_CSD_ScanEnabledWidgets, %function
 794              	CapSense_CSD_ScanEnabledWidgets:
 795              	.LFB41:
 683:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (0u != CapSense_CSD_CSHL_API_GENERATE) */
 684:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 685:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 686:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 687:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanEnableWidgets
 688:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 689:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 690:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 691:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This is the preferred method to scan all of the enabled widgets. 
 692:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The API starts scanning a sensor within the enabled widgets. 
 693:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The ISR continues scanning the sensors until all the enabled widgets are scanned. 
 694:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Use of the ISR ensures this function is non-blocking.
 695:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  All the widgets are enabled by default except proximity widgets. 
 696:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The proximity widgets must be manually enabled as their long scan time 
 697:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  is incompatible with a fast response required of other widget types.
 698:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 699:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 700:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 701:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 702:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 703:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 704:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 705:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 706:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdStatusVar - used to provide the status and mode of the scanning process. 
 707:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets the busy status(scan in progress) and clears the single scan mode.
 708:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store a sensor scanning sensor number.
 709:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
 710:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 711:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 712:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 713:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
 714:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 715:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_ScanEnabledWidgets(void)
 716:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 796              		.loc 1 716 0
 797              		.cfi_startproc
 798 0000 80B5     		push	{r7, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 717:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 718:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_csdStatusVar = 0u;
 804              		.loc 1 718 0
 805 0004 124B     		ldr	r3, .L42
 806 0006 0022     		mov	r2, #0
 807 0008 1A70     		strb	r2, [r3]
 719:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
 808              		.loc 1 719 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 28


 809 000a 124B     		ldr	r3, .L42+4
 810 000c FF22     		mov	r2, #255
 811 000e 1A70     		strb	r2, [r3]
 720:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
 721:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Find next sensor */
 722:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = (uint8)CapSense_CSD_FindNextSensor(CapSense_CSD_sensorIndex);
 812              		.loc 1 722 0
 813 0010 104B     		ldr	r3, .L42+4
 814 0012 1B78     		ldrb	r3, [r3]
 815 0014 DBB2     		uxtb	r3, r3
 816 0016 181C     		mov	r0, r3
 817 0018 FFF7FEFF 		bl	CapSense_CSD_FindNextSensor
 818 001c 031C     		mov	r3, r0
 819 001e 1A1C     		mov	r2, r3
 820 0020 0C4B     		ldr	r3, .L42+4
 821 0022 1A70     		strb	r2, [r3]
 723:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 724:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Check end of scan condition */
 725:.\Generated_Source\PSoC4/CapSense_CSD.c ****     if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
 822              		.loc 1 725 0
 823 0024 0B4B     		ldr	r3, .L42+4
 824 0026 1B78     		ldrb	r3, [r3]
 825 0028 DBB2     		uxtb	r3, r3
 826 002a 0B2B     		cmp	r3, #11
 827 002c 0DD8     		bhi	.L40
 726:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 727:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_csdStatusVar |= CapSense_CSD_SW_STS_BUSY;
 828              		.loc 1 727 0
 829 002e 084B     		ldr	r3, .L42
 830 0030 1B78     		ldrb	r3, [r3]
 831 0032 DBB2     		uxtb	r3, r3
 832 0034 0122     		mov	r2, #1
 833 0036 1343     		orr	r3, r2
 834 0038 DAB2     		uxtb	r2, r3
 835 003a 054B     		ldr	r3, .L42
 836 003c 1A70     		strb	r2, [r3]
 728:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_PreScan((uint32)CapSense_CSD_sensorIndex);
 837              		.loc 1 728 0
 838 003e 054B     		ldr	r3, .L42+4
 839 0040 1B78     		ldrb	r3, [r3]
 840 0042 DBB2     		uxtb	r3, r3
 841 0044 181C     		mov	r0, r3
 842 0046 FFF7FEFF 		bl	CapSense_CSD_PreScan
 843              	.L40:
 729:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 730:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 844              		.loc 1 730 0
 845 004a BD46     		mov	sp, r7
 846              		@ sp needed
 847 004c 80BD     		pop	{r7, pc}
 848              	.L43:
 849 004e C046     		.align	2
 850              	.L42:
 851 0050 00000000 		.word	CapSense_CSD_csdStatusVar
 852 0054 00000000 		.word	CapSense_CSD_sensorIndex
 853              		.cfi_endproc
 854              	.LFE41:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 29


 855              		.size	CapSense_CSD_ScanEnabledWidgets, .-CapSense_CSD_ScanEnabledWidgets
 856              		.section	.text.CapSense_CSD_IsBusy,"ax",%progbits
 857              		.align	2
 858              		.global	CapSense_CSD_IsBusy
 859              		.code	16
 860              		.thumb_func
 861              		.type	CapSense_CSD_IsBusy, %function
 862              	CapSense_CSD_IsBusy:
 863              	.LFB42:
 731:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 732:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 733:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 734:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_IsBusy
 735:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 736:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 737:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 738:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns the state of the CapSense component. 1 means that scanning in 
 739:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  progress and 0 means that scanning is complete.
 740:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 741:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 742:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 743:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 744:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 745:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
 746:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  completed.
 747:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 748:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 749:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdStatusVar - used to provide the status and mode of the scanning process. 
 750:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Checks the busy status.
 751:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 752:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 753:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 754:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
 755:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_IsBusy(void)
 757:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 864              		.loc 1 757 0
 865              		.cfi_startproc
 866 0000 80B5     		push	{r7, lr}
 867              		.cfi_def_cfa_offset 8
 868              		.cfi_offset 7, -8
 869              		.cfi_offset 14, -4
 870 0002 00AF     		add	r7, sp, #0
 871              		.cfi_def_cfa_register 7
 758:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return ((uint32)((0u != (CapSense_CSD_csdStatusVar & CapSense_CSD_SW_STS_BUSY)) ? 1u : 0u));
 872              		.loc 1 758 0
 873 0004 044B     		ldr	r3, .L46
 874 0006 1B78     		ldrb	r3, [r3]
 875 0008 DBB2     		uxtb	r3, r3
 876 000a 1A1C     		mov	r2, r3
 877 000c 0123     		mov	r3, #1
 878 000e 1340     		and	r3, r2
 759:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 879              		.loc 1 759 0
 880 0010 181C     		mov	r0, r3
 881 0012 BD46     		mov	sp, r7
 882              		@ sp needed
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 30


 883 0014 80BD     		pop	{r7, pc}
 884              	.L47:
 885 0016 C046     		.align	2
 886              	.L46:
 887 0018 00000000 		.word	CapSense_CSD_csdStatusVar
 888              		.cfi_endproc
 889              	.LFE42:
 890              		.size	CapSense_CSD_IsBusy, .-CapSense_CSD_IsBusy
 891              		.section	.text.CapSense_CSD_ReadSensorRaw,"ax",%progbits
 892              		.align	2
 893              		.global	CapSense_CSD_ReadSensorRaw
 894              		.code	16
 895              		.thumb_func
 896              		.type	CapSense_CSD_ReadSensorRaw, %function
 897              	CapSense_CSD_ReadSensorRaw:
 898              	.LFB43:
 760:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 761:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 762:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 763:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadSensorRaw
 764:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 765:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 766:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 767:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns sensor raw data from the global CapSense_sensorRaw[ ] array. 
 768:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Each scan sensor has a unique number within the sensor array. 
 769:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence. 
 770:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Raw data can be used to perform calculations outside of the CapSense 
 771:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  provided framework.
 772:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 773:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 774:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
 775:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 776:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 777:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns the current raw data value for a defined sensor number.
 778:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 779:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 780:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
 781:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 782:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
 783:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 784:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 785:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint16 CapSense_CSD_ReadSensorRaw(uint32 sensor)
 787:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 899              		.loc 1 787 0
 900              		.cfi_startproc
 901 0000 80B5     		push	{r7, lr}
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 7, -8
 904              		.cfi_offset 14, -4
 905 0002 82B0     		sub	sp, sp, #8
 906              		.cfi_def_cfa_offset 16
 907 0004 00AF     		add	r7, sp, #0
 908              		.cfi_def_cfa_register 7
 909 0006 7860     		str	r0, [r7, #4]
 788:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return CapSense_CSD_sensorRaw[sensor];
 910              		.loc 1 788 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 31


 911 0008 034B     		ldr	r3, .L50
 912 000a 7A68     		ldr	r2, [r7, #4]
 913 000c 5200     		lsl	r2, r2, #1
 914 000e D35A     		ldrh	r3, [r2, r3]
 789:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 915              		.loc 1 789 0
 916 0010 181C     		mov	r0, r3
 917 0012 BD46     		mov	sp, r7
 918 0014 02B0     		add	sp, sp, #8
 919              		@ sp needed
 920 0016 80BD     		pop	{r7, pc}
 921              	.L51:
 922              		.align	2
 923              	.L50:
 924 0018 00000000 		.word	CapSense_CSD_sensorRaw
 925              		.cfi_endproc
 926              	.LFE43:
 927              		.size	CapSense_CSD_ReadSensorRaw, .-CapSense_CSD_ReadSensorRaw
 928              		.section	.text.CapSense_CSD_WriteSensorRaw,"ax",%progbits
 929              		.align	2
 930              		.global	CapSense_CSD_WriteSensorRaw
 931              		.code	16
 932              		.thumb_func
 933              		.type	CapSense_CSD_WriteSensorRaw, %function
 934              	CapSense_CSD_WriteSensorRaw:
 935              	.LFB44:
 790:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 791:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 792:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_WriteSensorRaw
 794:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 796:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 797:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API writes the raw count value passed as an argument to the sensor Raw count array.
 798:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 799:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 800:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
 801:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  value: Raw count value.
 802:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 803:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 804:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
 805:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 806:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 807:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 808:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 809:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
 810:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 811:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 812:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 813:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_WriteSensorRaw(uint32 sensor, uint16 value)
 814:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 936              		.loc 1 814 0
 937              		.cfi_startproc
 938 0000 80B5     		push	{r7, lr}
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 7, -8
 941              		.cfi_offset 14, -4
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 32


 942 0002 82B0     		sub	sp, sp, #8
 943              		.cfi_def_cfa_offset 16
 944 0004 00AF     		add	r7, sp, #0
 945              		.cfi_def_cfa_register 7
 946 0006 7860     		str	r0, [r7, #4]
 947 0008 0A1C     		mov	r2, r1
 948 000a BB1C     		add	r3, r7, #2
 949 000c 1A80     		strh	r2, [r3]
 815:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_sensorRaw[sensor] = value;
 950              		.loc 1 815 0
 951 000e 044B     		ldr	r3, .L53
 952 0010 7A68     		ldr	r2, [r7, #4]
 953 0012 5200     		lsl	r2, r2, #1
 954 0014 B91C     		add	r1, r7, #2
 955 0016 0988     		ldrh	r1, [r1]
 956 0018 D152     		strh	r1, [r2, r3]
 816:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 957              		.loc 1 816 0
 958 001a BD46     		mov	sp, r7
 959 001c 02B0     		add	sp, sp, #8
 960              		@ sp needed
 961 001e 80BD     		pop	{r7, pc}
 962              	.L54:
 963              		.align	2
 964              	.L53:
 965 0020 00000000 		.word	CapSense_CSD_sensorRaw
 966              		.cfi_endproc
 967              	.LFE44:
 968              		.size	CapSense_CSD_WriteSensorRaw, .-CapSense_CSD_WriteSensorRaw
 969              		.section	.text.CapSense_CSD_SetScanResolution,"ax",%progbits
 970              		.align	2
 971              		.global	CapSense_CSD_SetScanResolution
 972              		.code	16
 973              		.thumb_func
 974              		.type	CapSense_CSD_SetScanResolution, %function
 975              	CapSense_CSD_SetScanResolution:
 976              	.LFB45:
 817:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 818:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 819:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 820:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/*******************************************************************************
 821:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Function Name: CapSense_CSD_SetScanResolution
 822:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	********************************************************************************
 823:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
 824:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Summary:
 825:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  Sets a value of the sensor scan resolution for a widget. 
 826:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  The MIN resolution can be set 8-bit. The MAX Resolution can be set 16 bit.
 827:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  This function is not available for the tuning mode "None".
 828:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
 829:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Parameters:
 830:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  widget:     Widget index.
 831:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  resolution: Represents the resolution value. The following defines which are available in the
 832:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD.h file should be used:
 833:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_6_BITS
 834:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_7_BITS
 835:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_8_BITS
 836:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_9_BITS
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 33


 837:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_10_BITS
 838:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_11_BITS
 839:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_12_BITS
 840:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_13_BITS
 841:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_14_BITS
 842:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_15_BITS
 843:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*			   CapSense_CSD_RESOLUTION_16_BITS
 844:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
 845:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Return:
 846:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
 847:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
 848:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Global Variables:
 849:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  CapSense_CSD_widgetResolution[] - used to store scan resolution of each widget.
 850:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
 851:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Side Effects: 
 852:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
 853:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
 854:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*******************************************************************************/
 855:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	void CapSense_CSD_SetScanResolution(uint32 widget, uint32 resolution)
 856:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{ 
 977              		.loc 1 856 0
 978              		.cfi_startproc
 979 0000 80B5     		push	{r7, lr}
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 82B0     		sub	sp, sp, #8
 984              		.cfi_def_cfa_offset 16
 985 0004 00AF     		add	r7, sp, #0
 986              		.cfi_def_cfa_register 7
 987 0006 7860     		str	r0, [r7, #4]
 988 0008 3960     		str	r1, [r7]
 857:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_widgetResolution[widget] = resolution;
 989              		.loc 1 857 0
 990 000a 044B     		ldr	r3, .L56
 991 000c 7A68     		ldr	r2, [r7, #4]
 992 000e 9200     		lsl	r2, r2, #2
 993 0010 3968     		ldr	r1, [r7]
 994 0012 D150     		str	r1, [r2, r3]
 858:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 995              		.loc 1 858 0
 996 0014 BD46     		mov	sp, r7
 997 0016 02B0     		add	sp, sp, #8
 998              		@ sp needed
 999 0018 80BD     		pop	{r7, pc}
 1000              	.L57:
 1001 001a C046     		.align	2
 1002              	.L56:
 1003 001c 00000000 		.word	CapSense_CSD_widgetResolution
 1004              		.cfi_endproc
 1005              	.LFE45:
 1006              		.size	CapSense_CSD_SetScanResolution, .-CapSense_CSD_SetScanResolution
 1007              		.section	.text.CapSense_CSD_GetScanResolution,"ax",%progbits
 1008              		.align	2
 1009              		.global	CapSense_CSD_GetScanResolution
 1010              		.code	16
 1011              		.thumb_func
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 34


 1012              		.type	CapSense_CSD_GetScanResolution, %function
 1013              	CapSense_CSD_GetScanResolution:
 1014              	.LFB46:
 859:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 860:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 861:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 862:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 863:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetScanResolution
 864:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 865:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 866:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 867:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns the resolution value for the appropriate sensor.
 868:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This function is not available for tuning mode "None".
 869:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 870:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 871:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  widget:     Widget index.
 872:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 873:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 874:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  resolution: Returns the resolution value for the appropriate sensor. 
 875:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              The resolution values are defined in the CapSense_CSD.h file 
 876:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              The defines are encountered below:
 877:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_6_BITS
 878:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_7_BITS
 879:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_8_BITS
 880:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_9_BITS
 881:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_10_BITS
 882:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_11_BITS
 883:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_12_BITS
 884:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_13_BITS
 885:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_14_BITS
 886:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_15_BITS
 887:.\Generated_Source\PSoC4/CapSense_CSD.c **** *			   CapSense_CSD_RESOLUTION_16_BITS
 888:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 889:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 890:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_widgetResolution[] - used to store scan resolution of every widget.
 891:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 892:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
 893:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 894:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 895:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 896:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetScanResolution(uint32 widget)
 897:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1015              		.loc 1 897 0
 1016              		.cfi_startproc
 1017 0000 80B5     		push	{r7, lr}
 1018              		.cfi_def_cfa_offset 8
 1019              		.cfi_offset 7, -8
 1020              		.cfi_offset 14, -4
 1021 0002 82B0     		sub	sp, sp, #8
 1022              		.cfi_def_cfa_offset 16
 1023 0004 00AF     		add	r7, sp, #0
 1024              		.cfi_def_cfa_register 7
 1025 0006 7860     		str	r0, [r7, #4]
 898:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	return(CapSense_CSD_widgetResolution[widget]);
 1026              		.loc 1 898 0
 1027 0008 034B     		ldr	r3, .L60
 1028 000a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 35


 1029 000c 9200     		lsl	r2, r2, #2
 1030 000e D358     		ldr	r3, [r2, r3]
 899:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1031              		.loc 1 899 0
 1032 0010 181C     		mov	r0, r3
 1033 0012 BD46     		mov	sp, r7
 1034 0014 02B0     		add	sp, sp, #8
 1035              		@ sp needed
 1036 0016 80BD     		pop	{r7, pc}
 1037              	.L61:
 1038              		.align	2
 1039              	.L60:
 1040 0018 00000000 		.word	CapSense_CSD_widgetResolution
 1041              		.cfi_endproc
 1042              	.LFE46:
 1043              		.size	CapSense_CSD_GetScanResolution, .-CapSense_CSD_GetScanResolution
 1044              		.section	.text.CapSense_CSD_ClearSensors,"ax",%progbits
 1045              		.align	2
 1046              		.global	CapSense_CSD_ClearSensors
 1047              		.code	16
 1048              		.thumb_func
 1049              		.type	CapSense_CSD_ClearSensors, %function
 1050              	CapSense_CSD_ClearSensors:
 1051              	.LFB47:
 900:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 901:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 902:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 903:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ClearSensors
 904:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 905:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 906:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 907:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Resets all the sensors to the non-sampling state by sequentially disconnecting
 908:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  all the sensors from Analog MUX Bus and putting them to an inactive state.
 909:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 910:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 911:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 912:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 913:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 914:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 915:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 916:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 917:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 918:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 919:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
 920:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 921:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 922:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 923:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_ClearSensors(void)
 924:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1052              		.loc 1 924 0
 1053              		.cfi_startproc
 1054 0000 80B5     		push	{r7, lr}
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 7, -8
 1057              		.cfi_offset 14, -4
 1058 0002 82B0     		sub	sp, sp, #8
 1059              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 36


 1060 0004 00AF     		add	r7, sp, #0
 1061              		.cfi_def_cfa_register 7
 925:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 snsIndex;
 926:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
 927:.\Generated_Source\PSoC4/CapSense_CSD.c ****     for (snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_COUNT; snsIndex++)
 1062              		.loc 1 927 0
 1063 0006 0023     		mov	r3, #0
 1064 0008 7B60     		str	r3, [r7, #4]
 1065 000a 06E0     		b	.L63
 1066              	.L64:
 928:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 929:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(snsIndex);
 1067              		.loc 1 929 0 discriminator 2
 1068 000c 7B68     		ldr	r3, [r7, #4]
 1069 000e 181C     		mov	r0, r3
 1070 0010 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
 927:.\Generated_Source\PSoC4/CapSense_CSD.c ****     for (snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_COUNT; snsIndex++)
 1071              		.loc 1 927 0 discriminator 2
 1072 0014 7B68     		ldr	r3, [r7, #4]
 1073 0016 0133     		add	r3, r3, #1
 1074 0018 7B60     		str	r3, [r7, #4]
 1075              	.L63:
 927:.\Generated_Source\PSoC4/CapSense_CSD.c ****     for (snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_COUNT; snsIndex++)
 1076              		.loc 1 927 0 is_stmt 0 discriminator 1
 1077 001a 7B68     		ldr	r3, [r7, #4]
 1078 001c 0B2B     		cmp	r3, #11
 1079 001e F5D9     		bls	.L64
 930:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 931:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1080              		.loc 1 931 0 is_stmt 1
 1081 0020 BD46     		mov	sp, r7
 1082 0022 02B0     		add	sp, sp, #8
 1083              		@ sp needed
 1084 0024 80BD     		pop	{r7, pc}
 1085              		.cfi_endproc
 1086              	.LFE47:
 1087              		.size	CapSense_CSD_ClearSensors, .-CapSense_CSD_ClearSensors
 1088 0026 C046     		.section	.text.CapSense_CSD_EnableSensor,"ax",%progbits
 1089              		.align	2
 1090              		.global	CapSense_CSD_EnableSensor
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	CapSense_CSD_EnableSensor, %function
 1094              	CapSense_CSD_EnableSensor:
 1095              	.LFB48:
 932:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 933:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 934:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
 935:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
 936:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_EnableScanSlot
 937:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
 938:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 939:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
 940:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  Configures the selected slot to measure during the next measurement 
 941:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
 942:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
 943:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 37


 944:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
 945:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  slot:  Slot number.
 946:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 947:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
 948:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
 949:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 950:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Constants:
 951:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
 952:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  belongs to for each sensor.
 953:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
 954:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  each sensor.
 955:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
 956:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  The offset and position in this array are stored in a port and mask table for 
 957:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  complex sensors.
 958:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  Bit 7 (msb) is used to define the sensor type: single or complex.
 959:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 960:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Side Effects: 
 961:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
 962:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
 963:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
 964:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_EnableScanSlot(uint32 slot)
 965:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 966:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 j;
 967:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsNumber;
 968:.\Generated_Source\PSoC4/CapSense_CSD.c ****         const uint8 *index;
 969:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Read sensor type: single or complex */
 970:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
 971:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 972:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Check if sensor is complex */
 973:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
 974:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 975:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Enable sensor (single) */
 976:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_EnableSensor(slot);
 977:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
 978:.\Generated_Source\PSoC4/CapSense_CSD.c ****         else
 979:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 980:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Enable complex sensor */
 981:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
 982:.\Generated_Source\PSoC4/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
 983:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
 984:.\Generated_Source\PSoC4/CapSense_CSD.c ****                         
 985:.\Generated_Source\PSoC4/CapSense_CSD.c ****             for (j = 0u; j < snsNumber; j++)
 986:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
 987:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_EnableSensor(index[j]);
 988:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
 989:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
 990:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 991:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
 992:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
 993:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
 994:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_DisableScanSlot
 995:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
 996:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 997:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
 998:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  Disables the selected slot. The corresponding pin/pins is/are disconnected 
 999:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1000:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 38


1001:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
1002:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  slot:  Slot number.
1003:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1004:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
1005:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
1006:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1007:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Variables:
1008:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1009:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  belongs to for each sensor.
1010:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1011:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  each sensor.
1012:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1013:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  The offset and position in this array are stored in a port and mask table for 
1014:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  complex sensors.
1015:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  7bit(msb) is used to define the sensor type: single or complex.
1016:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1017:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Side Effects: 
1018:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
1019:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1020:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
1021:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_DisableScanSlot(uint32 slot)
1022:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
1023:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 j;
1024:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsNumber;
1025:.\Generated_Source\PSoC4/CapSense_CSD.c ****         const uint8 *index;
1026:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1027:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Read sensor type: single or complex */
1028:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1029:.\Generated_Source\PSoC4/CapSense_CSD.c ****         
1030:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Check if sensor is complex */
1031:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1032:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
1033:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Disable sensor (single) */
1034:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_DisableSensor(slot);
1035:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
1036:.\Generated_Source\PSoC4/CapSense_CSD.c ****         else
1037:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
1038:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Disable complex sensor */
1039:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1040:.\Generated_Source\PSoC4/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1041:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1042:.\Generated_Source\PSoC4/CapSense_CSD.c ****                         
1043:.\Generated_Source\PSoC4/CapSense_CSD.c ****             for (j=0; j < snsNumber; j++)
1044:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
1045:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_DisableSensor(index[j]);
1046:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
1047:.\Generated_Source\PSoC4/CapSense_CSD.c ****         } 
1048:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
1049:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1050:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1051:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1052:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableSensor
1054:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1056:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1057:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Configures the selected sensor to measure during the next measurement cycle.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 39


1058:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1059:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Analog Mux Bus. This also enables the comparator function.
1060:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1061:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1062:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
1063:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1064:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1065:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1066:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1067:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1068:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1069:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  belongs to for each sensor.
1070:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_pinShiftTbl[] - used to store position of pin that 
1071:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  configured as sensor in port. 
1072:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtSelTbl[] - Contains pointers to the HSIOM 
1073:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port. 
1074:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_PrtCfgTb[] - Contains pointers to the port config 
1075:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port.
1076:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1077:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
1078:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1079:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1080:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1081:.\Generated_Source\PSoC4/CapSense_CSD.c **** __INLINE void CapSense_CSD_EnableSensor(uint32 sensor)
1082:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1096              		.loc 1 1082 0
 1097              		.cfi_startproc
 1098 0000 90B5     		push	{r4, r7, lr}
 1099              		.cfi_def_cfa_offset 12
 1100              		.cfi_offset 4, -12
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 1103 0002 87B0     		sub	sp, sp, #28
 1104              		.cfi_def_cfa_offset 40
 1105 0004 00AF     		add	r7, sp, #0
 1106              		.cfi_def_cfa_register 7
 1107 0006 7860     		str	r0, [r7, #4]
1083:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint8  pinModeShift;
1084:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8  pinHSIOMShift;
1085:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint8 interruptState;
1086:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 newRegisterValue;
1087:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 port;
1088:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1089:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	port = (uint32) CapSense_CSD_portTable[sensor];
 1108              		.loc 1 1089 0
 1109 0008 2C4A     		ldr	r2, .L66
 1110 000a 7B68     		ldr	r3, [r7, #4]
 1111 000c D318     		add	r3, r2, r3
 1112 000e 1B78     		ldrb	r3, [r3]
 1113 0010 7B61     		str	r3, [r7, #20]
1090:.\Generated_Source\PSoC4/CapSense_CSD.c ****     pinModeShift = CapSense_CSD_pinShiftTbl[sensor]  * CapSense_CSD_PC_PIN_CFG_SIZE;
 1114              		.loc 1 1090 0
 1115 0012 2B4A     		ldr	r2, .L66+4
 1116 0014 7B68     		ldr	r3, [r7, #4]
 1117 0016 D318     		add	r3, r2, r3
 1118 0018 1B78     		ldrb	r3, [r3]
 1119 001a 391C     		mov	r1, r7
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 40


 1120 001c 1331     		add	r1, r1, #19
 1121 001e 1A1C     		add	r2, r3, #0
 1122 0020 9218     		add	r2, r2, r2
 1123 0022 D318     		add	r3, r2, r3
 1124 0024 0B70     		strb	r3, [r1]
1091:.\Generated_Source\PSoC4/CapSense_CSD.c ****     pinHSIOMShift = CapSense_CSD_pinShiftTbl[sensor] * CapSense_CSD_HSIOM_PIN_CFG_SIZE;
 1125              		.loc 1 1091 0
 1126 0026 264A     		ldr	r2, .L66+4
 1127 0028 7B68     		ldr	r3, [r7, #4]
 1128 002a D318     		add	r3, r2, r3
 1129 002c 1A78     		ldrb	r2, [r3]
 1130 002e 3B1C     		mov	r3, r7
 1131 0030 1233     		add	r3, r3, #18
 1132 0032 9200     		lsl	r2, r2, #2
 1133 0034 1A70     		strb	r2, [r3]
1092:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1093:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	interruptState = CyEnterCriticalSection();
 1134              		.loc 1 1093 0
 1135 0036 3C1C     		mov	r4, r7
 1136 0038 1134     		add	r4, r4, #17
 1137 003a FFF7FEFF 		bl	CyEnterCriticalSection
 1138 003e 031C     		mov	r3, r0
 1139 0040 2370     		strb	r3, [r4]
1094:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1095:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegisterValue = *CapSense_CSD_prtSelTbl[port];
 1140              		.loc 1 1095 0
 1141 0042 204B     		ldr	r3, .L66+8
 1142 0044 7A69     		ldr	r2, [r7, #20]
 1143 0046 9200     		lsl	r2, r2, #2
 1144 0048 D358     		ldr	r3, [r2, r3]
 1145 004a 1B68     		ldr	r3, [r3]
 1146 004c FB60     		str	r3, [r7, #12]
1096:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegisterValue &= ~(CapSense_CSD_CSD_HSIOM_MASK << pinHSIOMShift);
 1147              		.loc 1 1096 0
 1148 004e 3B1C     		mov	r3, r7
 1149 0050 1233     		add	r3, r3, #18
 1150 0052 1B78     		ldrb	r3, [r3]
 1151 0054 0F22     		mov	r2, #15
 1152 0056 111C     		mov	r1, r2
 1153 0058 9940     		lsl	r1, r1, r3
 1154 005a 0B1C     		mov	r3, r1
 1155 005c DA43     		mvn	r2, r3
 1156 005e FB68     		ldr	r3, [r7, #12]
 1157 0060 1340     		and	r3, r2
 1158 0062 FB60     		str	r3, [r7, #12]
1097:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegisterValue |= (uint32)((uint32)CapSense_CSD_CSD_SENSE_PORT_MODE << pinHSIOMShift);
 1159              		.loc 1 1097 0
 1160 0064 3B1C     		mov	r3, r7
 1161 0066 1233     		add	r3, r3, #18
 1162 0068 1B78     		ldrb	r3, [r3]
 1163 006a 0422     		mov	r2, #4
 1164 006c 141C     		mov	r4, r2
 1165 006e 9C40     		lsl	r4, r4, r3
 1166 0070 231C     		mov	r3, r4
 1167 0072 FA68     		ldr	r2, [r7, #12]
 1168 0074 1343     		orr	r3, r2
 1169 0076 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 41


1098:.\Generated_Source\PSoC4/CapSense_CSD.c ****    
1099:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtCfgTbl[port] &= (uint32)~((uint32)CapSense_CSD_CSD_PIN_MODE_MASK << pinModeShi
 1170              		.loc 1 1099 0
 1171 0078 134B     		ldr	r3, .L66+12
 1172 007a 7A69     		ldr	r2, [r7, #20]
 1173 007c 9200     		lsl	r2, r2, #2
 1174 007e D358     		ldr	r3, [r2, r3]
 1175 0080 114A     		ldr	r2, .L66+12
 1176 0082 7969     		ldr	r1, [r7, #20]
 1177 0084 8900     		lsl	r1, r1, #2
 1178 0086 8A58     		ldr	r2, [r1, r2]
 1179 0088 1268     		ldr	r2, [r2]
 1180 008a 391C     		mov	r1, r7
 1181 008c 1331     		add	r1, r1, #19
 1182 008e 0978     		ldrb	r1, [r1]
 1183 0090 0720     		mov	r0, #7
 1184 0092 041C     		mov	r4, r0
 1185 0094 8C40     		lsl	r4, r4, r1
 1186 0096 211C     		mov	r1, r4
 1187 0098 C943     		mvn	r1, r1
 1188 009a 0A40     		and	r2, r1
 1189 009c 1A60     		str	r2, [r3]
1100:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtSelTbl[port] = newRegisterValue;
 1190              		.loc 1 1100 0
 1191 009e 094B     		ldr	r3, .L66+8
 1192 00a0 7A69     		ldr	r2, [r7, #20]
 1193 00a2 9200     		lsl	r2, r2, #2
 1194 00a4 D358     		ldr	r3, [r2, r3]
 1195 00a6 FA68     		ldr	r2, [r7, #12]
 1196 00a8 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1102:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CyExitCriticalSection(interruptState);
 1197              		.loc 1 1102 0
 1198 00aa 3B1C     		mov	r3, r7
 1199 00ac 1133     		add	r3, r3, #17
 1200 00ae 1B78     		ldrb	r3, [r3]
 1201 00b0 181C     		mov	r0, r3
 1202 00b2 FFF7FEFF 		bl	CyExitCriticalSection
1103:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1203              		.loc 1 1103 0
 1204 00b6 BD46     		mov	sp, r7
 1205 00b8 07B0     		add	sp, sp, #28
 1206              		@ sp needed
 1207 00ba 90BD     		pop	{r4, r7, pc}
 1208              	.L67:
 1209              		.align	2
 1210              	.L66:
 1211 00bc 00000000 		.word	CapSense_CSD_portTable
 1212 00c0 00000000 		.word	CapSense_CSD_pinShiftTbl
 1213 00c4 00000000 		.word	CapSense_CSD_prtSelTbl
 1214 00c8 00000000 		.word	CapSense_CSD_prtCfgTbl
 1215              		.cfi_endproc
 1216              	.LFE48:
 1217              		.size	CapSense_CSD_EnableSensor, .-CapSense_CSD_EnableSensor
 1218              		.section	.text.CapSense_CSD_DisableSensor,"ax",%progbits
 1219              		.align	2
 1220              		.global	CapSense_CSD_DisableSensor
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 42


 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	CapSense_CSD_DisableSensor, %function
 1224              	CapSense_CSD_DisableSensor:
 1225              	.LFB49:
1104:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1105:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1106:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1107:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_DisableSensor
1108:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1109:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1110:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1111:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1112:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1113:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1114:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1115:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number
1116:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1117:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1118:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1119:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1120:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1121:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1122:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  belongs to for each sensor.
1123:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_pinShiftTbl[] - used to store position of pin that 
1124:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  configured as a sensor in the port. 
1125:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtSelTbl[] - Contains pointers to the HSIOM 
1126:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port. 
1127:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_PrtCfgTb[] - Contains pointers to the port config 
1128:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port.
1129:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1130:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
1131:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1132:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1133:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1134:.\Generated_Source\PSoC4/CapSense_CSD.c **** __INLINE void CapSense_CSD_DisableSensor(uint32 sensor)
1135:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1226              		.loc 1 1135 0
 1227              		.cfi_startproc
 1228 0000 90B5     		push	{r4, r7, lr}
 1229              		.cfi_def_cfa_offset 12
 1230              		.cfi_offset 4, -12
 1231              		.cfi_offset 7, -8
 1232              		.cfi_offset 14, -4
 1233 0002 89B0     		sub	sp, sp, #36
 1234              		.cfi_def_cfa_offset 48
 1235 0004 00AF     		add	r7, sp, #0
 1236              		.cfi_def_cfa_register 7
 1237 0006 7860     		str	r0, [r7, #4]
1136:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 interruptState;
1137:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 newRegisterValue;
1138:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1139:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 port = (uint32) CapSense_CSD_portTable[sensor];
 1238              		.loc 1 1139 0
 1239 0008 3F4A     		ldr	r2, .L71
 1240 000a 7B68     		ldr	r3, [r7, #4]
 1241 000c D318     		add	r3, r2, r3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 43


 1242 000e 1B78     		ldrb	r3, [r3]
 1243 0010 7B61     		str	r3, [r7, #20]
1140:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8  pinHSIOMShift = CapSense_CSD_pinShiftTbl[sensor] * CapSense_CSD_HSIOM_PIN_CFG_SIZE;
 1244              		.loc 1 1140 0
 1245 0012 3E4A     		ldr	r2, .L71+4
 1246 0014 7B68     		ldr	r3, [r7, #4]
 1247 0016 D318     		add	r3, r2, r3
 1248 0018 1A78     		ldrb	r2, [r3]
 1249 001a 3B1C     		mov	r3, r7
 1250 001c 1333     		add	r3, r3, #19
 1251 001e 9200     		lsl	r2, r2, #2
 1252 0020 1A70     		strb	r2, [r3]
1141:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8  pinModeShift = CapSense_CSD_pinShiftTbl[sensor]  * CapSense_CSD_PC_PIN_CFG_SIZE;
 1253              		.loc 1 1141 0
 1254 0022 3A4A     		ldr	r2, .L71+4
 1255 0024 7B68     		ldr	r3, [r7, #4]
 1256 0026 D318     		add	r3, r2, r3
 1257 0028 1B78     		ldrb	r3, [r3]
 1258 002a 391C     		mov	r1, r7
 1259 002c 1231     		add	r1, r1, #18
 1260 002e 1A1C     		add	r2, r3, #0
 1261 0030 9218     		add	r2, r2, r2
 1262 0032 D318     		add	r3, r2, r3
 1263 0034 0B70     		strb	r3, [r1]
1142:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1143:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 inactiveConnect = CapSense_CSD_SNS_HIZANALOG_CONNECT;
 1264              		.loc 1 1143 0
 1265 0036 0023     		mov	r3, #0
 1266 0038 FB61     		str	r3, [r7, #28]
1144:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 sensorState = CapSense_CSD_unscannedSnsDriveMode[sensor];
 1267              		.loc 1 1144 0
 1268 003a 354A     		ldr	r2, .L71+8
 1269 003c 7B68     		ldr	r3, [r7, #4]
 1270 003e D318     		add	r3, r2, r3
 1271 0040 1B78     		ldrb	r3, [r3]
 1272 0042 BB61     		str	r3, [r7, #24]
1145:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1146:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtSelTbl[port] &= ~(CapSense_CSD_CSD_HSIOM_MASK << pinHSIOMShift);
 1273              		.loc 1 1146 0
 1274 0044 334B     		ldr	r3, .L71+12
 1275 0046 7A69     		ldr	r2, [r7, #20]
 1276 0048 9200     		lsl	r2, r2, #2
 1277 004a D358     		ldr	r3, [r2, r3]
 1278 004c 314A     		ldr	r2, .L71+12
 1279 004e 7969     		ldr	r1, [r7, #20]
 1280 0050 8900     		lsl	r1, r1, #2
 1281 0052 8A58     		ldr	r2, [r1, r2]
 1282 0054 1268     		ldr	r2, [r2]
 1283 0056 391C     		mov	r1, r7
 1284 0058 1331     		add	r1, r1, #19
 1285 005a 0978     		ldrb	r1, [r1]
 1286 005c 0F20     		mov	r0, #15
 1287 005e 041C     		mov	r4, r0
 1288 0060 8C40     		lsl	r4, r4, r1
 1289 0062 211C     		mov	r1, r4
 1290 0064 C943     		mvn	r1, r1
 1291 0066 0A40     		and	r2, r1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 44


 1292 0068 1A60     		str	r2, [r3]
1147:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1148:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(CapSense_CSD_IS_SHIELD_ENABLE != 0)
1149:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	if(sensorState != (uint32)CapSense_CSD__SHIELD)
1150:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
1151:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#else
1152:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    /* Connected to Ground if shield is disabled */
1153:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    if(sensorState == (uint32)CapSense_CSD__SHIELD)
 1293              		.loc 1 1153 0
 1294 006a BB69     		ldr	r3, [r7, #24]
 1295 006c 022B     		cmp	r3, #2
 1296 006e 01D1     		bne	.L69
1154:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
1155:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			sensorState = (uint32)CapSense_CSD__GROUND;
 1297              		.loc 1 1155 0
 1298 0070 0023     		mov	r3, #0
 1299 0072 BB61     		str	r3, [r7, #24]
 1300              	.L69:
1156:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
1157:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CapSense_CSD_IS_SHIELD_ENABLE) */
1158:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    if(sensorState != (uint32)CapSense_CSD__HIZ_ANALOG)
 1301              		.loc 1 1158 0
 1302 0074 BB69     		ldr	r3, [r7, #24]
 1303 0076 012B     		cmp	r3, #1
 1304 0078 01D0     		beq	.L70
1159:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{   
1160:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    /* Connected to Ground */
1161:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    inactiveConnect = (uint32)CapSense_CSD_SNS_GROUND_CONNECT;
 1305              		.loc 1 1161 0
 1306 007a 0623     		mov	r3, #6
 1307 007c FB61     		str	r3, [r7, #28]
 1308              	.L70:
1162:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
1163:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
1164:.\Generated_Source\PSoC4/CapSense_CSD.c ****         interruptState = CyEnterCriticalSection();
 1309              		.loc 1 1164 0
 1310 007e 3C1C     		mov	r4, r7
 1311 0080 1134     		add	r4, r4, #17
 1312 0082 FFF7FEFF 		bl	CyEnterCriticalSection
 1313 0086 031C     		mov	r3, r0
 1314 0088 2370     		strb	r3, [r4]
1165:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1166:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Set drive mode */
1167:.\Generated_Source\PSoC4/CapSense_CSD.c ****     	newRegisterValue = *CapSense_CSD_prtCfgTbl[port];
 1315              		.loc 1 1167 0
 1316 008a 234B     		ldr	r3, .L71+16
 1317 008c 7A69     		ldr	r2, [r7, #20]
 1318 008e 9200     		lsl	r2, r2, #2
 1319 0090 D358     		ldr	r3, [r2, r3]
 1320 0092 1B68     		ldr	r3, [r3]
 1321 0094 FB60     		str	r3, [r7, #12]
1168:.\Generated_Source\PSoC4/CapSense_CSD.c ****     	newRegisterValue &= ~(CapSense_CSD_CSD_PIN_MODE_MASK << pinModeShift);
 1322              		.loc 1 1168 0
 1323 0096 3B1C     		mov	r3, r7
 1324 0098 1233     		add	r3, r3, #18
 1325 009a 1B78     		ldrb	r3, [r3]
 1326 009c 0722     		mov	r2, #7
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 45


 1327 009e 111C     		mov	r1, r2
 1328 00a0 9940     		lsl	r1, r1, r3
 1329 00a2 0B1C     		mov	r3, r1
 1330 00a4 DA43     		mvn	r2, r3
 1331 00a6 FB68     		ldr	r3, [r7, #12]
 1332 00a8 1340     		and	r3, r2
 1333 00aa FB60     		str	r3, [r7, #12]
1169:.\Generated_Source\PSoC4/CapSense_CSD.c ****     	newRegisterValue |=  (uint32)(inactiveConnect << pinModeShift);
 1334              		.loc 1 1169 0
 1335 00ac 3B1C     		mov	r3, r7
 1336 00ae 1233     		add	r3, r3, #18
 1337 00b0 1B78     		ldrb	r3, [r3]
 1338 00b2 FA69     		ldr	r2, [r7, #28]
 1339 00b4 141C     		mov	r4, r2
 1340 00b6 9C40     		lsl	r4, r4, r3
 1341 00b8 231C     		mov	r3, r4
 1342 00ba FA68     		ldr	r2, [r7, #12]
 1343 00bc 1343     		orr	r3, r2
 1344 00be FB60     		str	r3, [r7, #12]
1170:.\Generated_Source\PSoC4/CapSense_CSD.c ****         *CapSense_CSD_prtCfgTbl[port] =  newRegisterValue;
 1345              		.loc 1 1170 0
 1346 00c0 154B     		ldr	r3, .L71+16
 1347 00c2 7A69     		ldr	r2, [r7, #20]
 1348 00c4 9200     		lsl	r2, r2, #2
 1349 00c6 D358     		ldr	r3, [r2, r3]
 1350 00c8 FA68     		ldr	r2, [r7, #12]
 1351 00ca 1A60     		str	r2, [r3]
1171:.\Generated_Source\PSoC4/CapSense_CSD.c ****         
1172:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CyExitCriticalSection(interruptState);
 1352              		.loc 1 1172 0
 1353 00cc 3B1C     		mov	r3, r7
 1354 00ce 1133     		add	r3, r3, #17
 1355 00d0 1B78     		ldrb	r3, [r3]
 1356 00d2 181C     		mov	r0, r3
 1357 00d4 FFF7FEFF 		bl	CyExitCriticalSection
1173:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1174:.\Generated_Source\PSoC4/CapSense_CSD.c ****     	*CapSense_CSD_prtDRTbl[port]  &=  (uint32)~(uint32)((uint32)1u << CapSense_CSD_pinShiftTbl[sen
 1358              		.loc 1 1174 0
 1359 00d8 104B     		ldr	r3, .L71+20
 1360 00da 7A69     		ldr	r2, [r7, #20]
 1361 00dc 9200     		lsl	r2, r2, #2
 1362 00de D358     		ldr	r3, [r2, r3]
 1363 00e0 0E4A     		ldr	r2, .L71+20
 1364 00e2 7969     		ldr	r1, [r7, #20]
 1365 00e4 8900     		lsl	r1, r1, #2
 1366 00e6 8A58     		ldr	r2, [r1, r2]
 1367 00e8 1268     		ldr	r2, [r2]
 1368 00ea 0848     		ldr	r0, .L71+4
 1369 00ec 7968     		ldr	r1, [r7, #4]
 1370 00ee 4118     		add	r1, r0, r1
 1371 00f0 0978     		ldrb	r1, [r1]
 1372 00f2 0120     		mov	r0, #1
 1373 00f4 041C     		mov	r4, r0
 1374 00f6 8C40     		lsl	r4, r4, r1
 1375 00f8 211C     		mov	r1, r4
 1376 00fa C943     		mvn	r1, r1
 1377 00fc 0A40     		and	r2, r1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 46


 1378 00fe 1A60     		str	r2, [r3]
1175:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(CapSense_CSD_IS_SHIELD_ENABLE != 0)
1176:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
1177:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	else
1178:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
1179:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		/* Connect to Shield */
1180:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		*CapSense_CSD_prtSelTbl[port] |= (CapSense_CSD_CSD_SHIELD_PORT_MODE << pinHSIOMShift);
1181:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
1182:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CapSense_CSD_IS_SHIELD_ENABLE) */
1183:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1379              		.loc 1 1183 0
 1380 0100 BD46     		mov	sp, r7
 1381 0102 09B0     		add	sp, sp, #36
 1382              		@ sp needed
 1383 0104 90BD     		pop	{r4, r7, pc}
 1384              	.L72:
 1385 0106 C046     		.align	2
 1386              	.L71:
 1387 0108 00000000 		.word	CapSense_CSD_portTable
 1388 010c 00000000 		.word	CapSense_CSD_pinShiftTbl
 1389 0110 00000000 		.word	CapSense_CSD_unscannedSnsDriveMode
 1390 0114 00000000 		.word	CapSense_CSD_prtSelTbl
 1391 0118 00000000 		.word	CapSense_CSD_prtCfgTbl
 1392 011c 00000000 		.word	CapSense_CSD_prtDRTbl
 1393              		.cfi_endproc
 1394              	.LFE49:
 1395              		.size	CapSense_CSD_DisableSensor, .-CapSense_CSD_DisableSensor
 1396              		.section	.text.CapSense_CSD_SetDriveModeAllPins,"ax",%progbits
 1397              		.align	2
 1398              		.global	CapSense_CSD_SetDriveModeAllPins
 1399              		.code	16
 1400              		.thumb_func
 1401              		.type	CapSense_CSD_SetDriveModeAllPins, %function
 1402              	CapSense_CSD_SetDriveModeAllPins:
 1403              	.LFB50:
1184:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1185:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1186:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1187:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetDriveModeAllPins
1188:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1189:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1190:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1191:.\Generated_Source\PSoC4/CapSense_CSD.c **** * This API sets the drive mode of port pins used by the CapSense
1192:.\Generated_Source\PSoC4/CapSense_CSD.c **** * component (sensors, guard, shield, shield tank and Cmod) to drive the 
1193:.\Generated_Source\PSoC4/CapSense_CSD.c **** * mode specified by the argument.
1194:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1195:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1196:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  driveMode:  Drive mode definition.
1197:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1198:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1199:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1200:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1201:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1202:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1203:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  belongs to for each sensor.
1204:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_pinShiftTbl[] - used to store position of pin that 
1205:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  configured as a sensor in the port. 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 47


1206:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1207:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
1208:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API shall be called only after CapSense component is stopped.
1209:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1210:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1211:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_SetDriveModeAllPins(uint32 driveMode)
1212:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1404              		.loc 1 1212 0
 1405              		.cfi_startproc
 1406 0000 80B5     		push	{r7, lr}
 1407              		.cfi_def_cfa_offset 8
 1408              		.cfi_offset 7, -8
 1409              		.cfi_offset 14, -4
 1410 0002 86B0     		sub	sp, sp, #24
 1411              		.cfi_def_cfa_offset 32
 1412 0004 00AF     		add	r7, sp, #0
 1413              		.cfi_def_cfa_register 7
 1414 0006 7860     		str	r0, [r7, #4]
1213:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint8 curSensor;
1214:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1215:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint8 snsNumber;
1216:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint8 snsType;
1217:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1218:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 prtNumberTmp;
1219:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 pinNumberTmp;
1220:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1221:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SENSOR_COUNT; curSensor++)
 1415              		.loc 1 1221 0
 1416 0008 3B1C     		mov	r3, r7
 1417 000a 1733     		add	r3, r3, #23
 1418 000c 0022     		mov	r2, #0
 1419 000e 1A70     		strb	r2, [r3]
 1420 0010 1AE0     		b	.L74
 1421              	.L75:
1222:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{	
1223:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1224:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			/* Read sensor type: single or complex */
1225:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			snsType = CapSense_CSD_portTable[curSensor];
1226:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
1227:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			/* Check if sensor is complex */
1228:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1229:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			{
1230:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				/* The sensor is not complex */
1231:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				snsNumber = curSensor;
1232:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			}
1233:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			else
1234:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			{
1235:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				/* Get dedicated sensor ID of the complex sensor */
1236:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1237:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				snsNumber = CapSense_CSD_indexTable[snsType];
1238:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			}
1239:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1240:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			prtNumberTmp = CapSense_CSD_portTable[snsNumber];
1241:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			pinNumberTmp = CapSense_CSD_pinShiftTbl[snsNumber];
1242:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#else
1243:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			prtNumberTmp = CapSense_CSD_portTable[curSensor];
 1422              		.loc 1 1243 0 discriminator 2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 48


 1423 0012 3B1C     		mov	r3, r7
 1424 0014 1733     		add	r3, r3, #23
 1425 0016 1B78     		ldrb	r3, [r3]
 1426 0018 124A     		ldr	r2, .L76
 1427 001a D35C     		ldrb	r3, [r2, r3]
 1428 001c 3B61     		str	r3, [r7, #16]
1244:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			pinNumberTmp = CapSense_CSD_pinShiftTbl[curSensor];
 1429              		.loc 1 1244 0 discriminator 2
 1430 001e 3B1C     		mov	r3, r7
 1431 0020 1733     		add	r3, r3, #23
 1432 0022 1B78     		ldrb	r3, [r3]
 1433 0024 104A     		ldr	r2, .L76+4
 1434 0026 D35C     		ldrb	r3, [r2, r3]
 1435 0028 FB60     		str	r3, [r7, #12]
1245:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1246:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1247:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SetPinDriveMode(driveMode, pinNumberTmp, prtNumberTmp);
 1436              		.loc 1 1247 0 discriminator 2
 1437 002a 7968     		ldr	r1, [r7, #4]
 1438 002c FA68     		ldr	r2, [r7, #12]
 1439 002e 3B69     		ldr	r3, [r7, #16]
 1440 0030 081C     		mov	r0, r1
 1441 0032 111C     		mov	r1, r2
 1442 0034 1A1C     		mov	r2, r3
 1443 0036 FFF7FEFF 		bl	CapSense_CSD_SetPinDriveMode
1221:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SENSOR_COUNT; curSensor++)
 1444              		.loc 1 1221 0 discriminator 2
 1445 003a 3B1C     		mov	r3, r7
 1446 003c 1733     		add	r3, r3, #23
 1447 003e 1A78     		ldrb	r2, [r3]
 1448 0040 3B1C     		mov	r3, r7
 1449 0042 1733     		add	r3, r3, #23
 1450 0044 0132     		add	r2, r2, #1
 1451 0046 1A70     		strb	r2, [r3]
 1452              	.L74:
1221:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SENSOR_COUNT; curSensor++)
 1453              		.loc 1 1221 0 is_stmt 0 discriminator 1
 1454 0048 3B1C     		mov	r3, r7
 1455 004a 1733     		add	r3, r3, #23
 1456 004c 1B78     		ldrb	r3, [r3]
 1457 004e 0B2B     		cmp	r3, #11
 1458 0050 DFD9     		bls	.L75
1248:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
1249:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1250:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_SetPinDriveMode(driveMode, (uint32)CapSense_CSD_CMOD_PIN_NUMBER, (uint32)CapSense_CSD
 1459              		.loc 1 1250 0 is_stmt 1
 1460 0052 7B68     		ldr	r3, [r7, #4]
 1461 0054 181C     		mov	r0, r3
 1462 0056 0221     		mov	r1, #2
 1463 0058 0422     		mov	r2, #4
 1464 005a FFF7FEFF 		bl	CapSense_CSD_SetPinDriveMode
1251:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1252:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(0u != CapSense_CSD_CSH_TANK_ENABLE)
1253:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SetPinDriveMode(driveMode, (uint32)CapSense_CSD_CTANK_PIN_NUMBER, (uint32)CapSense_C
1254:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (0u != CapSense_CSD_CSH_TANK_ENABLE) */	
1255:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1256:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(0u != CapSense_CSD_IS_SHIELD_ENABLE)
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 49


1257:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SetPinDriveMode(driveMode, (uint32)CapSense_CSD_SHIELD_PIN_NUMBER, (uint32)CapSense_
1258:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (0u != CapSense_CSD_IS_SHIELD_ENABLE) */	
1259:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1465              		.loc 1 1259 0
 1466 005e BD46     		mov	sp, r7
 1467 0060 06B0     		add	sp, sp, #24
 1468              		@ sp needed
 1469 0062 80BD     		pop	{r7, pc}
 1470              	.L77:
 1471              		.align	2
 1472              	.L76:
 1473 0064 00000000 		.word	CapSense_CSD_portTable
 1474 0068 00000000 		.word	CapSense_CSD_pinShiftTbl
 1475              		.cfi_endproc
 1476              	.LFE50:
 1477              		.size	CapSense_CSD_SetDriveModeAllPins, .-CapSense_CSD_SetDriveModeAllPins
 1478              		.section	.text.CapSense_CSD_RestoreDriveModeAllPins,"ax",%progbits
 1479              		.align	2
 1480              		.global	CapSense_CSD_RestoreDriveModeAllPins
 1481              		.code	16
 1482              		.thumb_func
 1483              		.type	CapSense_CSD_RestoreDriveModeAllPins, %function
 1484              	CapSense_CSD_RestoreDriveModeAllPins:
 1485              	.LFB51:
1260:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1261:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1262:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1263:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_RestoreDriveModeAllPins
1264:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1265:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1266:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1267:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API restores the drive for all the CapSense port pins to the original
1268:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  state.
1269:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1270:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1271:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1272:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1273:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1274:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1275:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1276:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1277:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtSelTbl[] - Contains pointers to the HSIOM 
1278:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port. 
1279:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1280:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
1281:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API is called only after the CapSense component is stopped.
1282:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1283:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_RestoreDriveModeAllPins(void)
1285:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1486              		.loc 1 1285 0
 1487              		.cfi_startproc
 1488 0000 80B5     		push	{r7, lr}
 1489              		.cfi_def_cfa_offset 8
 1490              		.cfi_offset 7, -8
 1491              		.cfi_offset 14, -4
 1492 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 50


 1493              		.cfi_def_cfa_offset 16
 1494 0004 00AF     		add	r7, sp, #0
 1495              		.cfi_def_cfa_register 7
1286:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 newRegisterValue;
1287:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1288:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_SetDriveModeAllPins(CY_SYS_PINS_DM_ALG_HIZ);
 1496              		.loc 1 1288 0
 1497 0006 0020     		mov	r0, #0
 1498 0008 FFF7FEFF 		bl	CapSense_CSD_SetDriveModeAllPins
1289:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1290:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegisterValue = CapSense_CSD_CMOD_CONNECTION_REG; 
 1499              		.loc 1 1290 0
 1500 000c 084B     		ldr	r3, .L79
 1501 000e 1B68     		ldr	r3, [r3]
 1502 0010 7B60     		str	r3, [r7, #4]
1291:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue &= ~(CapSense_CSD_CSD_CMOD_CONNECTION_MASK);
 1503              		.loc 1 1291 0
 1504 0012 7A68     		ldr	r2, [r7, #4]
 1505 0014 074B     		ldr	r3, .L79+4
 1506 0016 1340     		and	r3, r2
 1507 0018 7B60     		str	r3, [r7, #4]
1292:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue |= CapSense_CSD_CSD_CMOD_TO_AMUXBUS_A;
 1508              		.loc 1 1292 0
 1509 001a 7B68     		ldr	r3, [r7, #4]
 1510 001c C022     		mov	r2, #192
 1511 001e D200     		lsl	r2, r2, #3
 1512 0020 1343     		orr	r3, r2
 1513 0022 7B60     		str	r3, [r7, #4]
1293:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CMOD_CONNECTION_REG = newRegisterValue;
 1514              		.loc 1 1293 0
 1515 0024 024B     		ldr	r3, .L79
 1516 0026 7A68     		ldr	r2, [r7, #4]
 1517 0028 1A60     		str	r2, [r3]
1294:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1295:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(0u != CapSense_CSD_CSH_TANK_ENABLE)
1296:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		newRegisterValue = CapSense_CSD_CTANK_CONNECTION_REG;
1297:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue &= ~(CapSense_CSD_CSD_CTANK_CONNECTION_MASK);
1298:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		newRegisterValue |= CapSense_CSD_CSD_CTANK_TO_AMUXBUS_B;
1299:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CTANK_CONNECTION_REG = newRegisterValue;
1300:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif/* (0u != CapSense_CSD_CSH_TANK_ENABLE) */
1301:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1302:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(0u != CapSense_CSD_IS_SHIELD_ENABLE)
1303:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		newRegisterValue = *CapSense_CSD_prtSelTbl[CapSense_CSD_SHIELD_PORT_NUMBER];
1304:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue &= ~(CapSense_CSD_CSD_HSIOM_MASK << ((uint32)CapSense_CSD_SHIELD_PIN_NUMBE
1305:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue |= (CapSense_CSD_CSD_SHIELD_PORT_MODE << ((uint32)CapSense_CSD_SHIELD_PIN_
1306:.\Generated_Source\PSoC4/CapSense_CSD.c ****         *CapSense_CSD_prtSelTbl[CapSense_CSD_SHIELD_PORT_NUMBER] = newRegisterValue;
1307:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (0u != CapSense_CSD_IS_SHIELD_ENABLE) */	
1308:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1518              		.loc 1 1308 0
 1519 002a BD46     		mov	sp, r7
 1520 002c 02B0     		add	sp, sp, #8
 1521              		@ sp needed
 1522 002e 80BD     		pop	{r7, pc}
 1523              	.L80:
 1524              		.align	2
 1525              	.L79:
 1526 0030 10000140 		.word	1073807376
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 51


 1527 0034 FFF0FFFF 		.word	-3841
 1528              		.cfi_endproc
 1529              	.LFE51:
 1530              		.size	CapSense_CSD_RestoreDriveModeAllPins, .-CapSense_CSD_RestoreDriveModeAllPins
 1531              		.section	.text.CapSense_CSD_SetPinDriveMode,"ax",%progbits
 1532              		.align	2
 1533              		.global	CapSense_CSD_SetPinDriveMode
 1534              		.code	16
 1535              		.thumb_func
 1536              		.type	CapSense_CSD_SetPinDriveMode, %function
 1537              	CapSense_CSD_SetPinDriveMode:
 1538              	.LFB52:
1309:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1310:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1311:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1312:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetPinDriveMode
1313:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1314:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1315:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1316:.\Generated_Source\PSoC4/CapSense_CSD.c **** * This API sets the drive mode for the appropriate port/pin.
1317:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1318:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1319:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  driveMode:  Drive mode definition.
1320:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  portNumber: contains port number (0, 1, 2).
1321:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  pinNumber: contains pin number (0, 1, 2, ... , 7).
1322:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1323:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1324:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1325:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1326:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1327:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtSelTbl[] - Contains pointers to the HSIOM 
1328:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port. 
1329:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtCfgTb[] - Contains pointers to the port config 
1330:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port.
1331:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1332:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
1333:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API is called only after CapSense component is stopped.
1334:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1335:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1336:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_SetPinDriveMode(uint32 driveMode, uint32 pinNumber, uint32 portNumber)
1337:.\Generated_Source\PSoC4/CapSense_CSD.c **** {	
 1539              		.loc 1 1337 0
 1540              		.cfi_startproc
 1541 0000 80B5     		push	{r7, lr}
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 7, -8
 1544              		.cfi_offset 14, -4
 1545 0002 86B0     		sub	sp, sp, #24
 1546              		.cfi_def_cfa_offset 32
 1547 0004 00AF     		add	r7, sp, #0
 1548              		.cfi_def_cfa_register 7
 1549 0006 F860     		str	r0, [r7, #12]
 1550 0008 B960     		str	r1, [r7, #8]
 1551 000a 7A60     		str	r2, [r7, #4]
1338:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32  pinModeShift;
1339:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 newRegisterValue;
1340:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 52


1341:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	pinModeShift  = pinNumber * CapSense_CSD_PC_PIN_CFG_SIZE;
 1552              		.loc 1 1341 0
 1553 000c BA68     		ldr	r2, [r7, #8]
 1554 000e 131C     		mov	r3, r2
 1555 0010 5B00     		lsl	r3, r3, #1
 1556 0012 9B18     		add	r3, r3, r2
 1557 0014 7B61     		str	r3, [r7, #20]
1342:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1343:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegisterValue = *CapSense_CSD_prtCfgTbl[portNumber];
 1558              		.loc 1 1343 0
 1559 0016 104B     		ldr	r3, .L82
 1560 0018 7A68     		ldr	r2, [r7, #4]
 1561 001a 9200     		lsl	r2, r2, #2
 1562 001c D358     		ldr	r3, [r2, r3]
 1563 001e 1B68     		ldr	r3, [r3]
 1564 0020 3B61     		str	r3, [r7, #16]
1344:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegisterValue &= ~(CapSense_CSD_CSD_PIN_MODE_MASK << pinModeShift);
 1565              		.loc 1 1344 0
 1566 0022 7B69     		ldr	r3, [r7, #20]
 1567 0024 0722     		mov	r2, #7
 1568 0026 111C     		mov	r1, r2
 1569 0028 9940     		lsl	r1, r1, r3
 1570 002a 0B1C     		mov	r3, r1
 1571 002c DA43     		mvn	r2, r3
 1572 002e 3B69     		ldr	r3, [r7, #16]
 1573 0030 1340     		and	r3, r2
 1574 0032 3B61     		str	r3, [r7, #16]
1345:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegisterValue |=  (uint32)((uint32)driveMode << pinModeShift);
 1575              		.loc 1 1345 0
 1576 0034 7B69     		ldr	r3, [r7, #20]
 1577 0036 FA68     		ldr	r2, [r7, #12]
 1578 0038 111C     		mov	r1, r2
 1579 003a 9940     		lsl	r1, r1, r3
 1580 003c 0B1C     		mov	r3, r1
 1581 003e 3A69     		ldr	r2, [r7, #16]
 1582 0040 1343     		orr	r3, r2
 1583 0042 3B61     		str	r3, [r7, #16]
1346:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtCfgTbl[portNumber] =  newRegisterValue;
 1584              		.loc 1 1346 0
 1585 0044 044B     		ldr	r3, .L82
 1586 0046 7A68     		ldr	r2, [r7, #4]
 1587 0048 9200     		lsl	r2, r2, #2
 1588 004a D358     		ldr	r3, [r2, r3]
 1589 004c 3A69     		ldr	r2, [r7, #16]
 1590 004e 1A60     		str	r2, [r3]
1347:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1591              		.loc 1 1347 0
 1592 0050 BD46     		mov	sp, r7
 1593 0052 06B0     		add	sp, sp, #24
 1594              		@ sp needed
 1595 0054 80BD     		pop	{r7, pc}
 1596              	.L83:
 1597 0056 C046     		.align	2
 1598              	.L82:
 1599 0058 00000000 		.word	CapSense_CSD_prtCfgTbl
 1600              		.cfi_endproc
 1601              	.LFE52:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 53


 1602              		.size	CapSense_CSD_SetPinDriveMode, .-CapSense_CSD_SetPinDriveMode
 1603              		.section	.text.CapSense_CSD_PreScan,"ax",%progbits
 1604              		.align	2
 1605              		.global	CapSense_CSD_PreScan
 1606              		.code	16
 1607              		.thumb_func
 1608              		.type	CapSense_CSD_PreScan, %function
 1609              	CapSense_CSD_PreScan:
 1610              	.LFB53:
1348:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1349:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1350:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1351:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_PreScan
1352:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1353:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1354:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1355:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets required settings, enables a sensor, removes Vref from AMUX and starts the 
1356:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  scanning process of the sensor.
1357:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1358:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1359:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
1360:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1361:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1362:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1363:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1364:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1365:.\Generated_Source\PSoC4/CapSense_CSD.c **** * CapSense_CSD_widgetNumber[] - This array contains numbers of widgets for each sensor.
1366:.\Generated_Source\PSoC4/CapSense_CSD.c **** * CapSense_CSD_widgetResolution[] - Contains the widget resolution.
1367:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1368:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
1369:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1370:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1371:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_PreScan(uint32 sensor)
1373:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1611              		.loc 1 1373 0
 1612              		.cfi_startproc
 1613 0000 90B5     		push	{r4, r7, lr}
 1614              		.cfi_def_cfa_offset 12
 1615              		.cfi_offset 4, -12
 1616              		.cfi_offset 7, -8
 1617              		.cfi_offset 14, -4
 1618 0002 87B0     		sub	sp, sp, #28
 1619              		.cfi_def_cfa_offset 40
 1620 0004 00AF     		add	r7, sp, #0
 1621              		.cfi_def_cfa_register 7
 1622 0006 7860     		str	r0, [r7, #4]
1374:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 widget;
1375:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 interruptState;
1376:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 newRegValue;
1377:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 counterResolution;
1378:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1379:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_AUTO)
1380:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint8 senseClkDivMath;
1381:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint8 sampleClkDivMath;
1382:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_AUTO) */	
1383:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 54


1384:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1385:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		 (0 != CapSense_CSD_IS_OVERSAMPLING_EN))
1386:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint32 oversamplingFactor;
1387:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1388:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	           (0 != CapSense_CSD_IS_OVERSAMPLING_EN)) */
1389:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1390:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Define widget sensor belongs to */
1391:.\Generated_Source\PSoC4/CapSense_CSD.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 1623              		.loc 1 1391 0
 1624 0008 3B1C     		mov	r3, r7
 1625 000a 1733     		add	r3, r3, #23
 1626 000c 3C49     		ldr	r1, .L86
 1627 000e 7A68     		ldr	r2, [r7, #4]
 1628 0010 8A18     		add	r2, r1, r2
 1629 0012 1278     		ldrb	r2, [r2]
 1630 0014 1A70     		strb	r2, [r3]
1392:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1393:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Recalculate Counter Resolution to MSB 16 bits */
1394:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	counterResolution = CapSense_CSD_widgetResolution[widget];
 1631              		.loc 1 1394 0
 1632 0016 3B1C     		mov	r3, r7
 1633 0018 1733     		add	r3, r3, #23
 1634 001a 1A78     		ldrb	r2, [r3]
 1635 001c 394B     		ldr	r3, .L86+4
 1636 001e 9200     		lsl	r2, r2, #2
 1637 0020 D358     		ldr	r3, [r2, r3]
 1638 0022 3B61     		str	r3, [r7, #16]
1395:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1396:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1397:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		 (0 != CapSense_CSD_IS_OVERSAMPLING_EN))
1398:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    oversamplingFactor = CapSense_CSD_GetBitValue(scanSpeedTbl, sensor);
1399:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1400:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		if(counterResolution < CapSense_CSD_RESOLUTION_16_BITS)
1401:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
1402:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			counterResolution <<= oversamplingFactor;
1403:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			counterResolution |= (uint32)(CapSense_CSD_RESOLUTION_8_BITS);
1404:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
1405:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1406:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	           (0 != CapSense_CSD_IS_OVERSAMPLING_EN)) */
1407:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1408:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if (0u != CapSense_CSD_IS_M0S8PERI_BLOCK)
1409:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SenseClk_Stop();
1410:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SampleClk_Stop();
1411:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (0u != CapSense_CSD_IS_M0S8PERI_BLOCK) */
1412:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1413:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1414:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SampleClk_SetDividerValue((uint16)CapSense_CSD_sampleClkDividerVal[sensor]);
 1639              		.loc 1 1414 0
 1640 0024 384A     		ldr	r2, .L86+8
 1641 0026 7B68     		ldr	r3, [r7, #4]
 1642 0028 D318     		add	r3, r2, r3
 1643 002a 1B78     		ldrb	r3, [r3]
 1644 002c 013B     		sub	r3, r3, #1
 1645 002e 9BB2     		uxth	r3, r3
 1646 0030 181C     		mov	r0, r3
 1647 0032 0021     		mov	r1, #0
 1648 0034 FFF7FEFF 		bl	CapSense_CSD_SampleClk_SetFractionalDividerRegister
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 55


1415:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SenseClk_SetDividerValue((uint16)CapSense_CSD_senseClkDividerVal[sensor]);
 1649              		.loc 1 1415 0
 1650 0038 344A     		ldr	r2, .L86+12
 1651 003a 7B68     		ldr	r3, [r7, #4]
 1652 003c D318     		add	r3, r2, r3
 1653 003e 1B78     		ldrb	r3, [r3]
 1654 0040 013B     		sub	r3, r3, #1
 1655 0042 9BB2     		uxth	r3, r3
 1656 0044 181C     		mov	r0, r3
 1657 0046 0021     		mov	r1, #0
 1658 0048 FFF7FEFF 		bl	CapSense_CSD_SenseClk_SetFractionalDividerRegister
1416:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#else
1417:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SampleClk_SetDividerValue((uint16)CapSense_CSD_sampleClkDividerVal);
1418:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SenseClk_SetDividerValue((uint16)CapSense_CSD_senseClkDividerVal);
1419:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1420:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1421:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if (0u != CapSense_CSD_IS_M0S8PERI_BLOCK)
1422:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SampleClk_Start();
1423:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_SenseClk_StartEx(CapSense_CSD_SampleClk__DIV_ID);
1424:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
1425:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#if(CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_NONE)
1426:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CyIntDisable(CapSense_CSD_ISR_NUMBER);
1427:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CapSense_CSD_CSD_CNT_REG = CapSense_CSD_ONE_CYCLE;
1428:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			while(0u != (CapSense_CSD_CSD_CNT_REG & CapSense_CSD_RESOLUTION_16_BITS))
1429:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			{
1430:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			/* Wait until scanning is complete */ 
1431:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			}
1432:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CapSense_CSD_CSD_INTR_REG = 1u;
1433:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CyIntClearPending(CapSense_CSD_ISR_NUMBER);
1434:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CyIntEnable(CapSense_CSD_ISR_NUMBER); 
1435:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#endif /* CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_NONE */
1436:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (0u != CapSense_CSD_IS_M0S8PERI_BLOCK) */
1437:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1438:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(CapSense_CSD_PRS_OPTIONS != CapSense_CSD__PRS_NONE)
1439:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1440:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
1441:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		if(CapSense_CSD_prescalersTuningDone != 0u)
 1659              		.loc 1 1441 0
 1660 004c 304B     		ldr	r3, .L86+16
 1661 004e 1B78     		ldrb	r3, [r3]
 1662 0050 002B     		cmp	r3, #0
 1663 0052 0FD0     		beq	.L85
1442:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
1443:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
1444:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
1445:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CyIntDisable(CapSense_CSD_ISR_NUMBER);
 1664              		.loc 1 1445 0
 1665 0054 0F20     		mov	r0, #15
 1666 0056 FFF7FEFF 		bl	CyIntDisable
1446:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
1447:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			newRegValue = CapSense_CSD_CSD_CFG_REG;
 1667              		.loc 1 1447 0
 1668 005a 2E4B     		ldr	r3, .L86+20
 1669 005c 1B68     		ldr	r3, [r3]
 1670 005e FB60     		str	r3, [r7, #12]
1448:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			newRegValue |= CapSense_CSD_CSD_CFG_PRS_SELECT;
 1671              		.loc 1 1448 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 56


 1672 0060 FB68     		ldr	r3, [r7, #12]
 1673 0062 4022     		mov	r2, #64
 1674 0064 1343     		orr	r3, r2
 1675 0066 FB60     		str	r3, [r7, #12]
1449:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
1450:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			#if(CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_AUTO)
1451:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				
1452:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				newRegValue &= ~(CapSense_CSD_PRS_MODE_MASK);
1453:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				
1454:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				#if (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1455:.\Generated_Source\PSoC4/CapSense_CSD.c **** 					senseClkDivMath = CapSense_CSD_senseClkDividerVal[sensor];
1456:.\Generated_Source\PSoC4/CapSense_CSD.c **** 					sampleClkDivMath = CapSense_CSD_sampleClkDividerVal[sensor];
1457:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				#else
1458:.\Generated_Source\PSoC4/CapSense_CSD.c **** 					senseClkDivMath = CapSense_CSD_senseClkDividerVal;
1459:.\Generated_Source\PSoC4/CapSense_CSD.c **** 					sampleClkDivMath = CapSense_CSD_sampleClkDividerVal;
1460:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				#endif /* ( CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1461:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				
1462:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				#if(0u == CapSense_CSD_IS_M0S8PERI_BLOCK)
1463:.\Generated_Source\PSoC4/CapSense_CSD.c **** 					senseClkDivMath *= sampleClkDivMath;
1464:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				#endif /* (0u == CapSense_CSD_IS_M0S8PERI_BLOCK) */	
1465:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				
1466:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				if((senseClkDivMath * CapSense_CSD_RESOLUTION_12_BITS) <
1467:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				   (sampleClkDivMath * CapSense_CSD_widgetResolution[widget]))
1468:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				{
1469:.\Generated_Source\PSoC4/CapSense_CSD.c **** 					newRegValue |= CapSense_CSD_CSD_PRS_12_BIT;
1470:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				}
1471:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			#endif /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_AUTO) */
1472:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
1473:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CapSense_CSD_CSD_CFG_REG = newRegValue;
 1676              		.loc 1 1473 0
 1677 0068 2A4B     		ldr	r3, .L86+20
 1678 006a FA68     		ldr	r2, [r7, #12]
 1679 006c 1A60     		str	r2, [r3]
1474:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
1475:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CyIntEnable(CapSense_CSD_ISR_NUMBER);
 1680              		.loc 1 1475 0
 1681 006e 0F20     		mov	r0, #15
 1682 0070 FFF7FEFF 		bl	CyIntEnable
 1683              	.L85:
1476:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
1477:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)	
1478:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
1479:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (CapSense_CSD_PRS_OPTIONS != CapSense_CSD__PRS_NONE) */
1480:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1481:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_NONE) */
1482:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1483:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Set Idac Value */
1484:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CyIntDisable(CapSense_CSD_ISR_NUMBER);
 1684              		.loc 1 1484 0
 1685 0074 0F20     		mov	r0, #15
 1686 0076 FFF7FEFF 		bl	CyIntDisable
1485:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CSD_IDAC_REG;
 1687              		.loc 1 1485 0
 1688 007a 274B     		ldr	r3, .L86+24
 1689 007c 1B68     		ldr	r3, [r3]
 1690 007e FB60     		str	r3, [r7, #12]
1486:.\Generated_Source\PSoC4/CapSense_CSD.c ****  
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 57


1487:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_IDAC_CNT == 1u)    
1488:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue &= ~(CapSense_CSD_CSD_IDAC1_DATA_MASK);
1489:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue |= CapSense_CSD_modulationIDAC[sensor];
1490:.\Generated_Source\PSoC4/CapSense_CSD.c **** #else
1491:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue &= ~(CapSense_CSD_CSD_IDAC1_DATA_MASK | CapSense_CSD_CSD_IDAC2_DATA_MASK);
 1691              		.loc 1 1491 0
 1692 0080 FA68     		ldr	r2, [r7, #12]
 1693 0082 264B     		ldr	r3, .L86+28
 1694 0084 1340     		and	r3, r2
 1695 0086 FB60     		str	r3, [r7, #12]
1492:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue |= (CapSense_CSD_modulationIDAC[sensor] | 
 1696              		.loc 1 1492 0
 1697 0088 254A     		ldr	r2, .L86+32
 1698 008a 7B68     		ldr	r3, [r7, #4]
 1699 008c D318     		add	r3, r2, r3
 1700 008e 1B78     		ldrb	r3, [r3]
 1701 0090 1A1C     		mov	r2, r3
1493:.\Generated_Source\PSoC4/CapSense_CSD.c **** 							(uint32)((uint32)CapSense_CSD_compensationIDAC[sensor] <<
 1702              		.loc 1 1493 0
 1703 0092 2449     		ldr	r1, .L86+36
 1704 0094 7B68     		ldr	r3, [r7, #4]
 1705 0096 CB18     		add	r3, r1, r3
 1706 0098 1B78     		ldrb	r3, [r3]
 1707 009a 1B04     		lsl	r3, r3, #16
1492:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue |= (CapSense_CSD_modulationIDAC[sensor] | 
 1708              		.loc 1 1492 0
 1709 009c 1343     		orr	r3, r2
 1710 009e FA68     		ldr	r2, [r7, #12]
 1711 00a0 1343     		orr	r3, r2
 1712 00a2 FB60     		str	r3, [r7, #12]
1494:.\Generated_Source\PSoC4/CapSense_CSD.c **** 							CapSense_CSD_CSD_IDAC2_DATA_OFFSET));                               
1495:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_IDAC_CNT == 1u) */
1496:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1497:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CSD_IDAC_REG = newRegValue;
 1713              		.loc 1 1497 0
 1714 00a4 1C4B     		ldr	r3, .L86+24
 1715 00a6 FA68     		ldr	r2, [r7, #12]
 1716 00a8 1A60     		str	r2, [r3]
1498:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1499:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(CapSense_CSD_CMOD_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF)
1500:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue = CapSense_CSD_CMOD_CONNECTION_REG;
1501:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue &= ~(CapSense_CSD_CSD_CMOD_CONNECTION_MASK);
1502:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue |= CapSense_CSD_CSD_CMOD_TO_AMUXBUS_A;
1503:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CMOD_CONNECTION_REG = newRegValue;
1504:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1505:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue = CapSense_CSD_CMOD_PORT_PC_REG;
1506:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue &= ~(CapSense_CSD_CSD_CMOD_PC_MASK);
1507:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue |= CapSense_CSD_CMOD_PC_HIGH_Z_MODE;
1508:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CMOD_PORT_PC_REG = newRegValue;
1509:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_CMOD_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF) */
1510:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1511:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Disconnect Vref Buffer from AMUX */
1512:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue = CapSense_CSD_CSD_CFG_REG;
 1717              		.loc 1 1512 0
 1718 00aa 1A4B     		ldr	r3, .L86+20
 1719 00ac 1B68     		ldr	r3, [r3]
 1720 00ae FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 58


1513:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue &= ~(CapSense_CSD_PRECHARGE_CONFIG_MASK);
 1721              		.loc 1 1513 0
 1722 00b0 FA68     		ldr	r2, [r7, #12]
 1723 00b2 1D4B     		ldr	r3, .L86+40
 1724 00b4 1340     		and	r3, r2
 1725 00b6 FB60     		str	r3, [r7, #12]
1514:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue |= CapSense_CSD_CTANK_PRECHARGE_CONFIG;
 1726              		.loc 1 1514 0
 1727 00b8 FB68     		ldr	r3, [r7, #12]
 1728 00ba 1C4A     		ldr	r2, .L86+44
 1729 00bc 1343     		orr	r3, r2
 1730 00be FB60     		str	r3, [r7, #12]
1515:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1516:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CyIntEnable(CapSense_CSD_ISR_NUMBER);
 1731              		.loc 1 1516 0
 1732 00c0 0F20     		mov	r0, #15
 1733 00c2 FFF7FEFF 		bl	CyIntEnable
1517:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1518:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Enable Sensor */
1519:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_EnableScanSlot(sensor);
 1734              		.loc 1 1519 0
 1735 00c6 7B68     		ldr	r3, [r7, #4]
 1736 00c8 181C     		mov	r0, r3
 1737 00ca FFF7FEFF 		bl	CapSense_CSD_EnableSensor
1520:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
1521:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	interruptState = CyEnterCriticalSection();
 1738              		.loc 1 1521 0
 1739 00ce 3C1C     		mov	r4, r7
 1740 00d0 0B34     		add	r4, r4, #11
 1741 00d2 FFF7FEFF 		bl	CyEnterCriticalSection
 1742 00d6 031C     		mov	r3, r0
 1743 00d8 2370     		strb	r3, [r4]
1522:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CSD_CFG_REG = newRegValue;
 1744              		.loc 1 1522 0
 1745 00da 0E4B     		ldr	r3, .L86+20
 1746 00dc FA68     		ldr	r2, [r7, #12]
 1747 00de 1A60     		str	r2, [r3]
1523:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1524:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* `#START CapSense_CSD_PreSettlingDelay_Debug` */
1525:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1526:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* `#END` */
1527:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1528:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CyDelayCycles(CapSense_CSD_GLITCH_ELIMINATION_CYCLES);
 1748              		.loc 1 1528 0
 1749 00e0 0020     		mov	r0, #0
 1750 00e2 FFF7FEFF 		bl	CyDelayCycles
1529:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1530:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* `#START CapSense_CSD_PreScan_Debug` */
1531:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1532:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* `#END` */
1533:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1534:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_CNT_REG = counterResolution;
 1751              		.loc 1 1534 0
 1752 00e6 124B     		ldr	r3, .L86+48
 1753 00e8 3A69     		ldr	r2, [r7, #16]
 1754 00ea 1A60     		str	r2, [r3]
1535:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 59


 1755              		.loc 1 1535 0
 1756 00ec 3B1C     		mov	r3, r7
 1757 00ee 0B33     		add	r3, r3, #11
 1758 00f0 1B78     		ldrb	r3, [r3]
 1759 00f2 181C     		mov	r0, r3
 1760 00f4 FFF7FEFF 		bl	CyExitCriticalSection
1536:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1761              		.loc 1 1536 0
 1762 00f8 BD46     		mov	sp, r7
 1763 00fa 07B0     		add	sp, sp, #28
 1764              		@ sp needed
 1765 00fc 90BD     		pop	{r4, r7, pc}
 1766              	.L87:
 1767 00fe C046     		.align	2
 1768              	.L86:
 1769 0100 00000000 		.word	CapSense_CSD_widgetNumber
 1770 0104 00000000 		.word	CapSense_CSD_widgetResolution
 1771 0108 00000000 		.word	CapSense_CSD_sampleClkDividerVal
 1772 010c 00000000 		.word	CapSense_CSD_senseClkDividerVal
 1773 0110 00000000 		.word	CapSense_CSD_prescalersTuningDone
 1774 0114 04000840 		.word	1074266116
 1775 0118 08000840 		.word	1074266120
 1776 011c 00FF80FF 		.word	-8323328
 1777 0120 00000000 		.word	CapSense_CSD_modulationIDAC
 1778 0124 00000000 		.word	CapSense_CSD_compensationIDAC
 1779 0128 FF1FDFFF 		.word	-2154497
 1780 012c 20002000 		.word	2097184
 1781 0130 0C000840 		.word	1074266124
 1782              		.cfi_endproc
 1783              	.LFE53:
 1784              		.size	CapSense_CSD_PreScan, .-CapSense_CSD_PreScan
 1785              		.section	.text.CapSense_CSD_PostScan,"ax",%progbits
 1786              		.align	2
 1787              		.global	CapSense_CSD_PostScan
 1788              		.code	16
 1789              		.thumb_func
 1790              		.type	CapSense_CSD_PostScan, %function
 1791              	CapSense_CSD_PostScan:
 1792              	.LFB54:
1537:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1538:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1539:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1540:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_PostScan
1541:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1542:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1543:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1544:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Stores the results of measurement in the CapSense_CSD_sensorRaw[] array,
1545:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sets the scanning sensor in the non-sampling state, turns off Idac(Current Source IDAC),
1546:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  disconnects the IDAC(Sink mode), and applies Vref on AMUX.
1547:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1548:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1549:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
1550:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1551:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1552:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1553:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1554:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 60


1555:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1556:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1557:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
1558:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1559:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1560:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1561:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_PostScan(uint32 sensor)
1562:.\Generated_Source\PSoC4/CapSense_CSD.c **** {	
 1793              		.loc 1 1562 0
 1794              		.cfi_startproc
 1795 0000 80B5     		push	{r7, lr}
 1796              		.cfi_def_cfa_offset 8
 1797              		.cfi_offset 7, -8
 1798              		.cfi_offset 14, -4
 1799 0002 84B0     		sub	sp, sp, #16
 1800              		.cfi_def_cfa_offset 24
 1801 0004 00AF     		add	r7, sp, #0
 1802              		.cfi_def_cfa_register 7
 1803 0006 7860     		str	r0, [r7, #4]
1563:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 newRegValue;
1564:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1565:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	 (0 != CapSense_CSD_IS_OVERSAMPLING_EN))
1566:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 oversamplingFactor;
1567:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 widget;
1568:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1569:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		   (0 != CapSense_CSD_IS_OVERSAMPLING_EN)) */	
1570:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1571:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* `#START CapSense_CSD_PostScan_Debug` */
1572:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1573:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* `#END` */
1574:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1575:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1576:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Read SlotResult from Raw Counter */
1577:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_sensorRaw[sensor]  = (uint16)CapSense_CSD_CSD_CNT_REG;
 1804              		.loc 1 1577 0
 1805 0008 144B     		ldr	r3, .L89
 1806 000a 1B68     		ldr	r3, [r3]
 1807 000c 99B2     		uxth	r1, r3
 1808 000e 144B     		ldr	r3, .L89+4
 1809 0010 7A68     		ldr	r2, [r7, #4]
 1810 0012 5200     		lsl	r2, r2, #1
 1811 0014 D152     		strh	r1, [r2, r3]
1578:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1579:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1580:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	 (0 != CapSense_CSD_IS_OVERSAMPLING_EN))
1581:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	widget = CapSense_CSD_widgetNumber[sensor];
1582:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	if(CapSense_CSD_widgetResolution[widget] < CapSense_CSD_RESOLUTION_16_BITS)
1583:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
1584:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		oversamplingFactor = CapSense_CSD_GetBitValue(scanSpeedTbl, sensor);
1585:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_sensorRaw[sensor] >>= oversamplingFactor;
1586:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
1587:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1588:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		   (0 != CapSense_CSD_IS_OVERSAMPLING_EN)) */
1589:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1590:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Disable Sensor */
1591:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_DisableScanSlot(sensor);
 1812              		.loc 1 1591 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 61


 1813 0016 7B68     		ldr	r3, [r7, #4]
 1814 0018 181C     		mov	r0, r3
 1815 001a FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1592:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1593:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CyIntDisable(CapSense_CSD_ISR_NUMBER);
 1816              		.loc 1 1593 0
 1817 001e 0F20     		mov	r0, #15
 1818 0020 FFF7FEFF 		bl	CyIntDisable
1594:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1595:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(CapSense_CSD_CMOD_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF)
1596:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue = CapSense_CSD_CMOD_CONNECTION_REG;
1597:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue &= ~(CapSense_CSD_CSD_CMOD_CONNECTION_MASK);
1598:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue |= CapSense_CSD_CSD_CMOD_TO_AMUXBUS_B;
1599:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CMOD_CONNECTION_REG = newRegValue;
1600:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1601:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue = CapSense_CSD_CMOD_PORT_PC_REG;
1602:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue &= ~(CapSense_CSD_CSD_CMOD_PC_MASK);
1603:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue |= CapSense_CSD_CMOD_PC_STRONG_MODE;
1604:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CMOD_PORT_PC_REG = newRegValue;
1605:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
1606:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue = CapSense_CSD_CMOD_PORT_DR_REG;
1607:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CMOD_DR_MASK);
1608:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue |= CapSense_CSD_CMOD_DR_CONFIG;
1609:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CMOD_PORT_DR_REG = newRegValue;    
1610:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_CMOD_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF) */
1611:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1612:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Connect Vref Buffer to AMUX bus  */
1613:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue = CapSense_CSD_CSD_CFG_REG;
 1819              		.loc 1 1613 0
 1820 0024 0F4B     		ldr	r3, .L89+8
 1821 0026 1B68     		ldr	r3, [r3]
 1822 0028 FB60     		str	r3, [r7, #12]
1614:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue &= ~(CapSense_CSD_PRECHARGE_CONFIG_MASK);
 1823              		.loc 1 1614 0
 1824 002a FA68     		ldr	r2, [r7, #12]
 1825 002c 0E4B     		ldr	r3, .L89+12
 1826 002e 1340     		and	r3, r2
 1827 0030 FB60     		str	r3, [r7, #12]
1615:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue |= CapSense_CSD_CMOD_PRECHARGE_CONFIG;
 1828              		.loc 1 1615 0
 1829 0032 FB68     		ldr	r3, [r7, #12]
 1830 0034 A022     		mov	r2, #160
 1831 0036 1202     		lsl	r2, r2, #8
 1832 0038 1343     		orr	r3, r2
 1833 003a FB60     		str	r3, [r7, #12]
1616:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CSD_CFG_REG = newRegValue;
 1834              		.loc 1 1616 0
 1835 003c 094B     		ldr	r3, .L89+8
 1836 003e FA68     		ldr	r2, [r7, #12]
 1837 0040 1A60     		str	r2, [r3]
1617:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1618:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* Set Idac Value = 0 */
1619:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_IDAC_CNT == 1u)   
1620:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CSD_IDAC_REG &= ~(CapSense_CSD_CSD_IDAC1_DATA_MASK);
1621:.\Generated_Source\PSoC4/CapSense_CSD.c **** #else
1622:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CapSense_CSD_CSD_IDAC_REG &= ~(CapSense_CSD_CSD_IDAC1_DATA_MASK | CapSense_CSD_CSD_IDAC2_DATA_MASK
 1838              		.loc 1 1622 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 62


 1839 0042 0A4B     		ldr	r3, .L89+16
 1840 0044 094A     		ldr	r2, .L89+16
 1841 0046 1168     		ldr	r1, [r2]
 1842 0048 094A     		ldr	r2, .L89+20
 1843 004a 0A40     		and	r2, r1
 1844 004c 1A60     		str	r2, [r3]
1623:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_IDAC_CNT == 1u) */
1624:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1625:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	CyIntEnable(CapSense_CSD_ISR_NUMBER);
 1845              		.loc 1 1625 0
 1846 004e 0F20     		mov	r0, #15
 1847 0050 FFF7FEFF 		bl	CyIntEnable
1626:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1848              		.loc 1 1626 0
 1849 0054 BD46     		mov	sp, r7
 1850 0056 04B0     		add	sp, sp, #16
 1851              		@ sp needed
 1852 0058 80BD     		pop	{r7, pc}
 1853              	.L90:
 1854 005a C046     		.align	2
 1855              	.L89:
 1856 005c 0C000840 		.word	1074266124
 1857 0060 00000000 		.word	CapSense_CSD_sensorRaw
 1858 0064 04000840 		.word	1074266116
 1859 0068 FF1FDFFF 		.word	-2154497
 1860 006c 08000840 		.word	1074266120
 1861 0070 00FF80FF 		.word	-8323328
 1862              		.cfi_endproc
 1863              	.LFE54:
 1864              		.size	CapSense_CSD_PostScan, .-CapSense_CSD_PostScan
 1865              		.section	.text.CapSense_CSD_EnableShieldElectrode,"ax",%progbits
 1866              		.align	2
 1867              		.global	CapSense_CSD_EnableShieldElectrode
 1868              		.code	16
 1869              		.thumb_func
 1870              		.type	CapSense_CSD_EnableShieldElectrode, %function
 1871              	CapSense_CSD_EnableShieldElectrode:
 1872              	.LFB55:
1627:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1628:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1629:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1630:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableShieldElectrode
1631:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1632:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1633:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1634:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API enables or disables the shield electrode on a specified port pin.
1635:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1636:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1637:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  portNumber: contains the shield electrode port number (0, 1, 2).
1638:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  pinNumber: contains the shield electrode pin number (0, 1, 2, ... , 7).
1639:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1640:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1641:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1642:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1643:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1644:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtCfgTbl[] - Contains pointers to the port config registers for each port.
1645:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtSelTbl[] - Contains pointers to the HSIOM registers for each port.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 63


1646:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1647:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
1648:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1649:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1650:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1651:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_EnableShieldElectrode(uint32 pinNumber, uint32 portNumber)
1652:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1873              		.loc 1 1652 0
 1874              		.cfi_startproc
 1875 0000 90B5     		push	{r4, r7, lr}
 1876              		.cfi_def_cfa_offset 12
 1877              		.cfi_offset 4, -12
 1878              		.cfi_offset 7, -8
 1879              		.cfi_offset 14, -4
 1880 0002 85B0     		sub	sp, sp, #20
 1881              		.cfi_def_cfa_offset 32
 1882 0004 00AF     		add	r7, sp, #0
 1883              		.cfi_def_cfa_register 7
 1884 0006 7860     		str	r0, [r7, #4]
 1885 0008 3960     		str	r1, [r7]
1653:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 newRegValue;
1654:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1655:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*CapSense_CSD_prtCfgTbl[portNumber] &= ~(CapSense_CSD_CSD_PIN_MODE_MASK << (pinNumber * CapSense_C
 1886              		.loc 1 1655 0
 1887 000a 1B4B     		ldr	r3, .L92
 1888 000c 3A68     		ldr	r2, [r7]
 1889 000e 9200     		lsl	r2, r2, #2
 1890 0010 D258     		ldr	r2, [r2, r3]
 1891 0012 194B     		ldr	r3, .L92
 1892 0014 3968     		ldr	r1, [r7]
 1893 0016 8900     		lsl	r1, r1, #2
 1894 0018 CB58     		ldr	r3, [r1, r3]
 1895 001a 1868     		ldr	r0, [r3]
 1896 001c 7968     		ldr	r1, [r7, #4]
 1897 001e 0B1C     		mov	r3, r1
 1898 0020 5B00     		lsl	r3, r3, #1
 1899 0022 5B18     		add	r3, r3, r1
 1900 0024 0721     		mov	r1, #7
 1901 0026 0C1C     		mov	r4, r1
 1902 0028 9C40     		lsl	r4, r4, r3
 1903 002a 231C     		mov	r3, r4
 1904 002c DB43     		mvn	r3, r3
 1905 002e 0340     		and	r3, r0
 1906 0030 1360     		str	r3, [r2]
1656:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	newRegValue = *CapSense_CSD_prtSelTbl[portNumber];
 1907              		.loc 1 1656 0
 1908 0032 124B     		ldr	r3, .L92+4
 1909 0034 3A68     		ldr	r2, [r7]
 1910 0036 9200     		lsl	r2, r2, #2
 1911 0038 D358     		ldr	r3, [r2, r3]
 1912 003a 1B68     		ldr	r3, [r3]
 1913 003c FB60     		str	r3, [r7, #12]
1657:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CSD_HSIOM_MASK << (pinNumber * CapSense_CSD_HSIOM_PIN_CFG_SIZE));
 1914              		.loc 1 1657 0
 1915 003e 7B68     		ldr	r3, [r7, #4]
 1916 0040 9B00     		lsl	r3, r3, #2
 1917 0042 0F22     		mov	r2, #15
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 64


 1918 0044 111C     		mov	r1, r2
 1919 0046 9940     		lsl	r1, r1, r3
 1920 0048 0B1C     		mov	r3, r1
 1921 004a DA43     		mvn	r2, r3
 1922 004c FB68     		ldr	r3, [r7, #12]
 1923 004e 1340     		and	r3, r2
 1924 0050 FB60     		str	r3, [r7, #12]
1658:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= (CapSense_CSD_CSD_SHIELD_PORT_MODE << (pinNumber * CapSense_CSD_HSIOM_PIN_CFG_SI
 1925              		.loc 1 1658 0
 1926 0052 7B68     		ldr	r3, [r7, #4]
 1927 0054 9B00     		lsl	r3, r3, #2
 1928 0056 0522     		mov	r2, #5
 1929 0058 141C     		mov	r4, r2
 1930 005a 9C40     		lsl	r4, r4, r3
 1931 005c 231C     		mov	r3, r4
 1932 005e FA68     		ldr	r2, [r7, #12]
 1933 0060 1343     		orr	r3, r2
 1934 0062 FB60     		str	r3, [r7, #12]
1659:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtSelTbl[portNumber] = newRegValue;
 1935              		.loc 1 1659 0
 1936 0064 054B     		ldr	r3, .L92+4
 1937 0066 3A68     		ldr	r2, [r7]
 1938 0068 9200     		lsl	r2, r2, #2
 1939 006a D358     		ldr	r3, [r2, r3]
 1940 006c FA68     		ldr	r2, [r7, #12]
 1941 006e 1A60     		str	r2, [r3]
1660:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1942              		.loc 1 1660 0
 1943 0070 BD46     		mov	sp, r7
 1944 0072 05B0     		add	sp, sp, #20
 1945              		@ sp needed
 1946 0074 90BD     		pop	{r4, r7, pc}
 1947              	.L93:
 1948 0076 C046     		.align	2
 1949              	.L92:
 1950 0078 00000000 		.word	CapSense_CSD_prtCfgTbl
 1951 007c 00000000 		.word	CapSense_CSD_prtSelTbl
 1952              		.cfi_endproc
 1953              	.LFE55:
 1954              		.size	CapSense_CSD_EnableShieldElectrode, .-CapSense_CSD_EnableShieldElectrode
 1955              		.section	.text.CapSense_CSD_SetShieldDelay,"ax",%progbits
 1956              		.align	2
 1957              		.global	CapSense_CSD_SetShieldDelay
 1958              		.code	16
 1959              		.thumb_func
 1960              		.type	CapSense_CSD_SetShieldDelay, %function
 1961              	CapSense_CSD_SetShieldDelay:
 1962              	.LFB56:
1661:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1662:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1663:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1664:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetShieldDelay
1665:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1666:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1667:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1668:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API sets a shield delay.
1669:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 65


1670:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1671:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  delay:  shield delay value:
1672:.\Generated_Source\PSoC4/CapSense_CSD.c **** *                               0 - no delay
1673:.\Generated_Source\PSoC4/CapSense_CSD.c **** *                               1 - 1 cycle delay
1674:.\Generated_Source\PSoC4/CapSense_CSD.c **** *                               2 - 2 cycles delay
1675:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1676:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1677:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1678:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1679:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1680:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1681:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1682:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
1683:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1684:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1685:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1686:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_SetShieldDelay(uint32 delay)
1687:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1963              		.loc 1 1687 0
 1964              		.cfi_startproc
 1965 0000 80B5     		push	{r7, lr}
 1966              		.cfi_def_cfa_offset 8
 1967              		.cfi_offset 7, -8
 1968              		.cfi_offset 14, -4
 1969 0002 84B0     		sub	sp, sp, #16
 1970              		.cfi_def_cfa_offset 24
 1971 0004 00AF     		add	r7, sp, #0
 1972              		.cfi_def_cfa_register 7
 1973 0006 7860     		str	r0, [r7, #4]
1688:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegValue;
1689:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
1690:.\Generated_Source\PSoC4/CapSense_CSD.c ****     delay &= 0x03u;
 1974              		.loc 1 1690 0
 1975 0008 7A68     		ldr	r2, [r7, #4]
 1976 000a 0323     		mov	r3, #3
 1977 000c 1340     		and	r3, r2
 1978 000e 7B60     		str	r3, [r7, #4]
1691:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
1692:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CSD_CFG_REG;
 1979              		.loc 1 1692 0
 1980 0010 064B     		ldr	r3, .L95
 1981 0012 1B68     		ldr	r3, [r3]
 1982 0014 FB60     		str	r3, [r7, #12]
1693:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= (uint32)(~(uint32)CapSense_CSD_SHIELD_DELAY);    
1694:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= (delay << CapSense_CSD_CSD_CFG_SHIELD_DELAY_POS);    
 1983              		.loc 1 1694 0
 1984 0016 7B68     		ldr	r3, [r7, #4]
 1985 0018 5B02     		lsl	r3, r3, #9
 1986 001a FA68     		ldr	r2, [r7, #12]
 1987 001c 1343     		orr	r3, r2
 1988 001e FB60     		str	r3, [r7, #12]
1695:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_CFG_REG = newRegValue;
 1989              		.loc 1 1695 0
 1990 0020 024B     		ldr	r3, .L95
 1991 0022 FA68     		ldr	r2, [r7, #12]
 1992 0024 1A60     		str	r2, [r3]
1696:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 66


 1993              		.loc 1 1696 0
 1994 0026 BD46     		mov	sp, r7
 1995 0028 04B0     		add	sp, sp, #16
 1996              		@ sp needed
 1997 002a 80BD     		pop	{r7, pc}
 1998              	.L96:
 1999              		.align	2
 2000              	.L95:
 2001 002c 04000840 		.word	1074266116
 2002              		.cfi_endproc
 2003              	.LFE56:
 2004              		.size	CapSense_CSD_SetShieldDelay, .-CapSense_CSD_SetShieldDelay
 2005              		.section	.text.CapSense_CSD_ReadCurrentScanningSensor,"ax",%progbits
 2006              		.align	2
 2007              		.global	CapSense_CSD_ReadCurrentScanningSensor
 2008              		.code	16
 2009              		.thumb_func
 2010              		.type	CapSense_CSD_ReadCurrentScanningSensor, %function
 2011              	CapSense_CSD_ReadCurrentScanningSensor:
 2012              	.LFB57:
1697:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1698:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1699:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1700:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadCurrentScanningSensor
1701:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1702:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1703:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1704:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns scanning sensor number when sensor scan is in progress. 
1705:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  When sensor scan is completed the API returns 
1706:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  $INSTANCE_NAME`_NOT_SENSOR (0xFFFFFFFF) (when no sensor is scanned).
1707:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1708:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1709:.\Generated_Source\PSoC4/CapSense_CSD.c **** *	None.
1710:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1711:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1712:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns Sensor number if sensor is being scanned and 
1713:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  $INSTANCE_NAME`_NOT_SENSOR (0xFFFFFFFF) if scanning is complete.
1714:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1715:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1716:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - the sensor number is being scanned.
1717:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1718:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects: 
1719:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1720:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1721:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1722:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_ReadCurrentScanningSensor(void)
1723:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2013              		.loc 1 1723 0
 2014              		.cfi_startproc
 2015 0000 80B5     		push	{r7, lr}
 2016              		.cfi_def_cfa_offset 8
 2017              		.cfi_offset 7, -8
 2018              		.cfi_offset 14, -4
 2019 0002 00AF     		add	r7, sp, #0
 2020              		.cfi_def_cfa_register 7
1724:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return ((uint32)(( 0u != (CapSense_CSD_csdStatusVar & CapSense_CSD_SW_STS_BUSY)) ? 
 2021              		.loc 1 1724 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 67


 2022 0004 074B     		ldr	r3, .L101
 2023 0006 1B78     		ldrb	r3, [r3]
 2024 0008 DBB2     		uxtb	r3, r3
 2025 000a 1A1C     		mov	r2, r3
 2026 000c 0123     		mov	r3, #1
 2027 000e 1340     		and	r3, r2
 2028 0010 03D0     		beq	.L98
 2029              		.loc 1 1724 0 is_stmt 0 discriminator 1
 2030 0012 054B     		ldr	r3, .L101+4
 2031 0014 1B78     		ldrb	r3, [r3]
 2032 0016 DBB2     		uxtb	r3, r3
 2033 0018 01E0     		b	.L99
 2034              	.L98:
 2035              		.loc 1 1724 0 discriminator 2
 2036 001a 0123     		mov	r3, #1
 2037 001c 5B42     		neg	r3, r3
 2038              	.L99:
1725:.\Generated_Source\PSoC4/CapSense_CSD.c ****                      CapSense_CSD_sensorIndex : CapSense_CSD_NOT_SENSOR));
1726:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2039              		.loc 1 1726 0 is_stmt 1 discriminator 3
 2040 001e 181C     		mov	r0, r3
 2041 0020 BD46     		mov	sp, r7
 2042              		@ sp needed
 2043 0022 80BD     		pop	{r7, pc}
 2044              	.L102:
 2045              		.align	2
 2046              	.L101:
 2047 0024 00000000 		.word	CapSense_CSD_csdStatusVar
 2048 0028 00000000 		.word	CapSense_CSD_sensorIndex
 2049              		.cfi_endproc
 2050              	.LFE57:
 2051              		.size	CapSense_CSD_ReadCurrentScanningSensor, .-CapSense_CSD_ReadCurrentScanningSensor
 2052              		.section	.text.CapSense_CSD_GetBitValue,"ax",%progbits
 2053              		.align	2
 2054              		.global	CapSense_CSD_GetBitValue
 2055              		.code	16
 2056              		.thumb_func
 2057              		.type	CapSense_CSD_GetBitValue, %function
 2058              	CapSense_CSD_GetBitValue:
 2059              	.LFB58:
1727:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1728:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1729:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1730:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetBitValue
1731:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1732:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1733:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1734:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The API returns a bit status of the bit in the table array which contains the masks.
1735:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
1736:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1737:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  table[] - array with bit masks.
1738:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  position - position of bit in the table[] array.
1739:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1740:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1741:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  0 - bit is not set; 1 - bit is set.
1742:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1743:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 68


1744:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1745:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1746:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1747:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1748:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1749:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1750:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetBitValue(const uint8 table[], uint32 position)
1751:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2060              		.loc 1 1751 0
 2061              		.cfi_startproc
 2062 0000 80B5     		push	{r7, lr}
 2063              		.cfi_def_cfa_offset 8
 2064              		.cfi_offset 7, -8
 2065              		.cfi_offset 14, -4
 2066 0002 84B0     		sub	sp, sp, #16
 2067              		.cfi_def_cfa_offset 24
 2068 0004 00AF     		add	r7, sp, #0
 2069              		.cfi_def_cfa_register 7
 2070 0006 7860     		str	r0, [r7, #4]
 2071 0008 3960     		str	r1, [r7]
1752:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 offset;
1753:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint8 enMask;
1754:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1755:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* position is divided by 8 to calculate the element of the 
1756:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	   table[] array that contains the enable bit 
1757:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	   for an appropriate sensor.
1758:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*/
1759:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	offset = (position >> 3u);
 2072              		.loc 1 1759 0
 2073 000a 3B68     		ldr	r3, [r7]
 2074 000c DB08     		lsr	r3, r3, #3
 2075 000e FB60     		str	r3, [r7, #12]
1760:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1761:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* The enMask calculation for the appropriate sensor. Operation (position & 0x07u) 
1762:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	   intends to calculate the enable bit offset for the 8-bit element of the 
1763:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	   table[] array.
1764:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*/
1765:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	enMask = 0x01u << (position & 0x07u);
 2076              		.loc 1 1765 0
 2077 0010 3A68     		ldr	r2, [r7]
 2078 0012 0723     		mov	r3, #7
 2079 0014 1340     		and	r3, r2
 2080 0016 0122     		mov	r2, #1
 2081 0018 9A40     		lsl	r2, r2, r3
 2082 001a 3B1C     		mov	r3, r7
 2083 001c 0B33     		add	r3, r3, #11
 2084 001e 1A70     		strb	r2, [r3]
1766:.\Generated_Source\PSoC4/CapSense_CSD.c ****     
1767:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return ((0u !=(table[offset] & enMask)) ? 1Lu : 0Lu);
 2085              		.loc 1 1767 0
 2086 0020 7A68     		ldr	r2, [r7, #4]
 2087 0022 FB68     		ldr	r3, [r7, #12]
 2088 0024 D318     		add	r3, r2, r3
 2089 0026 1B78     		ldrb	r3, [r3]
 2090 0028 3A1C     		mov	r2, r7
 2091 002a 0B32     		add	r2, r2, #11
 2092 002c 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 69


 2093 002e 1340     		and	r3, r2
 2094 0030 DBB2     		uxtb	r3, r3
 2095 0032 002B     		cmp	r3, #0
 2096 0034 01D0     		beq	.L104
 2097              		.loc 1 1767 0 is_stmt 0 discriminator 1
 2098 0036 0123     		mov	r3, #1
 2099 0038 00E0     		b	.L105
 2100              	.L104:
 2101              		.loc 1 1767 0 discriminator 2
 2102 003a 0023     		mov	r3, #0
 2103              	.L105:
1768:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2104              		.loc 1 1768 0 is_stmt 1 discriminator 3
 2105 003c 181C     		mov	r0, r3
 2106 003e BD46     		mov	sp, r7
 2107 0040 04B0     		add	sp, sp, #16
 2108              		@ sp needed
 2109 0042 80BD     		pop	{r7, pc}
 2110              		.cfi_endproc
 2111              	.LFE58:
 2112              		.size	CapSense_CSD_GetBitValue, .-CapSense_CSD_GetBitValue
 2113              		.section	.text.CapSense_CSD_SetBitValue,"ax",%progbits
 2114              		.align	2
 2115              		.global	CapSense_CSD_SetBitValue
 2116              		.code	16
 2117              		.thumb_func
 2118              		.type	CapSense_CSD_SetBitValue, %function
 2119              	CapSense_CSD_SetBitValue:
 2120              	.LFB59:
1769:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1770:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1771:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1772:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetBitValue
1773:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1774:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1775:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1776:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The API sets a bit status of the bit in the table array which contains masks.
1777:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
1778:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1779:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  table[] - array with bit masks.
1780:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  position - position of bit in the table[] array.
1781:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  value: 0 - bit is not set; 1 - bit is set.
1782:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1783:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1784:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1785:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1786:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1787:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1788:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1789:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1790:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1791:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1792:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1793:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_SetBitValue(uint8 table[], uint32 position, uint32 value)
1794:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2121              		.loc 1 1794 0
 2122              		.cfi_startproc
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 70


 2123 0000 80B5     		push	{r7, lr}
 2124              		.cfi_def_cfa_offset 8
 2125              		.cfi_offset 7, -8
 2126              		.cfi_offset 14, -4
 2127 0002 86B0     		sub	sp, sp, #24
 2128              		.cfi_def_cfa_offset 32
 2129 0004 00AF     		add	r7, sp, #0
 2130              		.cfi_def_cfa_register 7
 2131 0006 F860     		str	r0, [r7, #12]
 2132 0008 B960     		str	r1, [r7, #8]
 2133 000a 7A60     		str	r2, [r7, #4]
1795:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 offset;
1796:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint8 enMask;
1797:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1798:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* position is divided by 8 to calculate the element of the 
1799:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	   table[] array that contains the enable bit 
1800:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	   for an appropriate sensor.
1801:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*/
1802:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	offset = (position >> 3u);
 2134              		.loc 1 1802 0
 2135 000c BB68     		ldr	r3, [r7, #8]
 2136 000e DB08     		lsr	r3, r3, #3
 2137 0010 7B61     		str	r3, [r7, #20]
1803:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1804:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/* The enMask calculation for the appropriate sensor. Operation (position & 0x07u) 
1805:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	   intends to calculate the enable bit offset for the 8-bit element of the 
1806:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	   table[] array.
1807:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*/
1808:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	enMask = 0x01u << (position & 0x07u);
 2138              		.loc 1 1808 0
 2139 0012 BA68     		ldr	r2, [r7, #8]
 2140 0014 0723     		mov	r3, #7
 2141 0016 1340     		and	r3, r2
 2142 0018 0122     		mov	r2, #1
 2143 001a 9A40     		lsl	r2, r2, r3
 2144 001c 3B1C     		mov	r3, r7
 2145 001e 1333     		add	r3, r3, #19
 2146 0020 1A70     		strb	r2, [r3]
1809:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	
1810:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	if(0u != value)
 2147              		.loc 1 1810 0
 2148 0022 7B68     		ldr	r3, [r7, #4]
 2149 0024 002B     		cmp	r3, #0
 2150 0026 0DD0     		beq	.L108
1811:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
1812:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		table[offset] |= enMask;
 2151              		.loc 1 1812 0
 2152 0028 FA68     		ldr	r2, [r7, #12]
 2153 002a 7B69     		ldr	r3, [r7, #20]
 2154 002c D318     		add	r3, r2, r3
 2155 002e F968     		ldr	r1, [r7, #12]
 2156 0030 7A69     		ldr	r2, [r7, #20]
 2157 0032 8A18     		add	r2, r1, r2
 2158 0034 1178     		ldrb	r1, [r2]
 2159 0036 3A1C     		mov	r2, r7
 2160 0038 1332     		add	r2, r2, #19
 2161 003a 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 71


 2162 003c 0A43     		orr	r2, r1
 2163 003e D2B2     		uxtb	r2, r2
 2164 0040 1A70     		strb	r2, [r3]
 2165 0042 0EE0     		b	.L107
 2166              	.L108:
1813:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
1814:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	else
1815:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
1816:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		table[offset] &= (uint8)~(enMask);
 2167              		.loc 1 1816 0
 2168 0044 FA68     		ldr	r2, [r7, #12]
 2169 0046 7B69     		ldr	r3, [r7, #20]
 2170 0048 D318     		add	r3, r2, r3
 2171 004a F968     		ldr	r1, [r7, #12]
 2172 004c 7A69     		ldr	r2, [r7, #20]
 2173 004e 8A18     		add	r2, r1, r2
 2174 0050 1278     		ldrb	r2, [r2]
 2175 0052 391C     		mov	r1, r7
 2176 0054 1331     		add	r1, r1, #19
 2177 0056 0978     		ldrb	r1, [r1]
 2178 0058 C943     		mvn	r1, r1
 2179 005a C9B2     		uxtb	r1, r1
 2180 005c 0A40     		and	r2, r1
 2181 005e D2B2     		uxtb	r2, r2
 2182 0060 1A70     		strb	r2, [r3]
 2183              	.L107:
1817:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
1818:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2184              		.loc 1 1818 0
 2185 0062 BD46     		mov	sp, r7
 2186 0064 06B0     		add	sp, sp, #24
 2187              		@ sp needed
 2188 0066 80BD     		pop	{r7, pc}
 2189              		.cfi_endproc
 2190              	.LFE59:
 2191              		.size	CapSense_CSD_SetBitValue, .-CapSense_CSD_SetBitValue
 2192              		.section	.text.CapSense_CSD_GetSenseClkDivider,"ax",%progbits
 2193              		.align	2
 2194              		.global	CapSense_CSD_GetSenseClkDivider
 2195              		.code	16
 2196              		.thumb_func
 2197              		.type	CapSense_CSD_GetSenseClkDivider, %function
 2198              	CapSense_CSD_GetSenseClkDivider:
 2199              	.LFB60:
1819:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1820:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1821:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1822:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1823:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetSenseClkDivider
1824:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1825:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1826:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1827:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns a value of the sense clock divider for the  sensor.
1828:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1829:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1830:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor: sensor index. The index value can be 
1831:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 72


1832:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1833:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1834:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns the sense clock divider of the sensor. 
1835:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1836:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1837:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_senseClkDividerVal[] - stores the sense clock divider values.
1838:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
1839:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1840:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1841:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1842:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1843:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetSenseClkDivider(uint32 sensor)
1844:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2200              		.loc 1 1844 0
 2201              		.cfi_startproc
 2202 0000 80B5     		push	{r7, lr}
 2203              		.cfi_def_cfa_offset 8
 2204              		.cfi_offset 7, -8
 2205              		.cfi_offset 14, -4
 2206 0002 82B0     		sub	sp, sp, #8
 2207              		.cfi_def_cfa_offset 16
 2208 0004 00AF     		add	r7, sp, #0
 2209              		.cfi_def_cfa_register 7
 2210 0006 7860     		str	r0, [r7, #4]
1845:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1846:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		return((uint32)CapSense_CSD_senseClkDividerVal[sensor]);
 2211              		.loc 1 1846 0
 2212 0008 034A     		ldr	r2, .L112
 2213 000a 7B68     		ldr	r3, [r7, #4]
 2214 000c D318     		add	r3, r2, r3
 2215 000e 1B78     		ldrb	r3, [r3]
1847:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#else
1848:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		return((uint32)CapSense_CSD_senseClkDividerVal);
1849:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1850:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2216              		.loc 1 1850 0
 2217 0010 181C     		mov	r0, r3
 2218 0012 BD46     		mov	sp, r7
 2219 0014 02B0     		add	sp, sp, #8
 2220              		@ sp needed
 2221 0016 80BD     		pop	{r7, pc}
 2222              	.L113:
 2223              		.align	2
 2224              	.L112:
 2225 0018 00000000 		.word	CapSense_CSD_senseClkDividerVal
 2226              		.cfi_endproc
 2227              	.LFE60:
 2228              		.size	CapSense_CSD_GetSenseClkDivider, .-CapSense_CSD_GetSenseClkDivider
 2229              		.section	.text.CapSense_CSD_SetSenseClkDivider,"ax",%progbits
 2230              		.align	2
 2231              		.global	CapSense_CSD_SetSenseClkDivider
 2232              		.code	16
 2233              		.thumb_func
 2234              		.type	CapSense_CSD_SetSenseClkDivider, %function
 2235              	CapSense_CSD_SetSenseClkDivider:
 2236              	.LFB61:
1851:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 73


1852:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
1853:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/*******************************************************************************
1854:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Function Name: CapSense_CSD_SetSenseClkDivider
1855:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	********************************************************************************
1856:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1857:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Summary:
1858:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  This API sets a value of the sense clock divider for the  sensor. 
1859:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1860:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Parameters:
1861:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  sensor:  Sensor index.
1862:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  senseClk: represents the sense clock value.
1863:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1864:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Return:
1865:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None.
1866:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1867:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Global Variables:
1868:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  CapSense_CSD_senseClkDividerVal[] - stores the sense clock divider values.
1869:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* 
1870:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Side Effects:
1871:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
1872:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1873:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*******************************************************************************/
1874:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	void CapSense_CSD_SetSenseClkDivider(uint32 sensor, uint32 senseClk)
1875:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 2237              		.loc 1 1875 0
 2238              		.cfi_startproc
 2239 0000 80B5     		push	{r7, lr}
 2240              		.cfi_def_cfa_offset 8
 2241              		.cfi_offset 7, -8
 2242              		.cfi_offset 14, -4
 2243 0002 82B0     		sub	sp, sp, #8
 2244              		.cfi_def_cfa_offset 16
 2245 0004 00AF     		add	r7, sp, #0
 2246              		.cfi_def_cfa_register 7
 2247 0006 7860     		str	r0, [r7, #4]
 2248 0008 3960     		str	r1, [r7]
1876:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#if(0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1877:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CapSense_CSD_senseClkDividerVal[sensor] = (uint8)senseClk;
 2249              		.loc 1 1877 0
 2250 000a 3B68     		ldr	r3, [r7]
 2251 000c DAB2     		uxtb	r2, r3
 2252 000e 0349     		ldr	r1, .L115
 2253 0010 7B68     		ldr	r3, [r7, #4]
 2254 0012 CB18     		add	r3, r1, r3
 2255 0014 1A70     		strb	r2, [r3]
1878:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#else
1879:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CapSense_CSD_senseClkDividerVal = (uint8)senseClk;
1880:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#endif /* (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1881:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 2256              		.loc 1 1881 0
 2257 0016 BD46     		mov	sp, r7
 2258 0018 02B0     		add	sp, sp, #8
 2259              		@ sp needed
 2260 001a 80BD     		pop	{r7, pc}
 2261              	.L116:
 2262              		.align	2
 2263              	.L115:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 74


 2264 001c 00000000 		.word	CapSense_CSD_senseClkDividerVal
 2265              		.cfi_endproc
 2266              	.LFE61:
 2267              		.size	CapSense_CSD_SetSenseClkDivider, .-CapSense_CSD_SetSenseClkDivider
 2268              		.section	.text.CapSense_CSD_GetModulatorClkDivider,"ax",%progbits
 2269              		.align	2
 2270              		.global	CapSense_CSD_GetModulatorClkDivider
 2271              		.code	16
 2272              		.thumb_func
 2273              		.type	CapSense_CSD_GetModulatorClkDivider, %function
 2274              	CapSense_CSD_GetModulatorClkDivider:
 2275              	.LFB62:
1882:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1883:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1884:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1885:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1886:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetModulatorClkDivider
1887:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1888:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1889:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1890:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns a value of the modulator sample clock divider for the  sensor.
1891:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1892:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1893:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor: sensor index. The value of index can be 
1894:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
1895:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1896:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1897:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns the modulator sample clock divider for the  sensor.
1898:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1899:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1900:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sampleClkDividerVal[] - stores the modulator sample divider values.
1901:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
1902:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1903:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1904:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1905:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1906:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetModulatorClkDivider(uint32 sensor)
1907:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2276              		.loc 1 1907 0
 2277              		.cfi_startproc
 2278 0000 80B5     		push	{r7, lr}
 2279              		.cfi_def_cfa_offset 8
 2280              		.cfi_offset 7, -8
 2281              		.cfi_offset 14, -4
 2282 0002 82B0     		sub	sp, sp, #8
 2283              		.cfi_def_cfa_offset 16
 2284 0004 00AF     		add	r7, sp, #0
 2285              		.cfi_def_cfa_register 7
 2286 0006 7860     		str	r0, [r7, #4]
1908:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#if(0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1909:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		return((uint32)CapSense_CSD_sampleClkDividerVal[sensor]);
 2287              		.loc 1 1909 0
 2288 0008 034A     		ldr	r2, .L119
 2289 000a 7B68     		ldr	r3, [r7, #4]
 2290 000c D318     		add	r3, r2, r3
 2291 000e 1B78     		ldrb	r3, [r3]
1910:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#else
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 75


1911:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		return((uint32)CapSense_CSD_sampleClkDividerVal);
1912:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	#endif /* (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1913:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2292              		.loc 1 1913 0
 2293 0010 181C     		mov	r0, r3
 2294 0012 BD46     		mov	sp, r7
 2295 0014 02B0     		add	sp, sp, #8
 2296              		@ sp needed
 2297 0016 80BD     		pop	{r7, pc}
 2298              	.L120:
 2299              		.align	2
 2300              	.L119:
 2301 0018 00000000 		.word	CapSense_CSD_sampleClkDividerVal
 2302              		.cfi_endproc
 2303              	.LFE62:
 2304              		.size	CapSense_CSD_GetModulatorClkDivider, .-CapSense_CSD_GetModulatorClkDivider
 2305              		.section	.text.CapSense_CSD_SetModulatorClkDivider,"ax",%progbits
 2306              		.align	2
 2307              		.global	CapSense_CSD_SetModulatorClkDivider
 2308              		.code	16
 2309              		.thumb_func
 2310              		.type	CapSense_CSD_SetModulatorClkDivider, %function
 2311              	CapSense_CSD_SetModulatorClkDivider:
 2312              	.LFB63:
1914:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1915:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
1916:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/*******************************************************************************
1917:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Function Name: CapSense_CSD_SetModulatorClkDivider
1918:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	********************************************************************************
1919:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1920:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Summary:
1921:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  This API sets a value of the modulator sample clock divider for the  sensor.
1922:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1923:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Parameters:
1924:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  sensor:  Sensor index.
1925:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  modulatorClk: represents the modulator sample clock value.
1926:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1927:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Return:
1928:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None.
1929:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1930:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Global Variables:
1931:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  CapSense_CSD_sampleClkDividerVal[] - stores the modulator sample divider values.
1932:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* 
1933:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Side Effects:
1934:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
1935:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1936:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*******************************************************************************/
1937:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	void CapSense_CSD_SetModulatorClkDivider(uint32 sensor, uint32 modulatorClk)
1938:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 2313              		.loc 1 1938 0
 2314              		.cfi_startproc
 2315 0000 80B5     		push	{r7, lr}
 2316              		.cfi_def_cfa_offset 8
 2317              		.cfi_offset 7, -8
 2318              		.cfi_offset 14, -4
 2319 0002 82B0     		sub	sp, sp, #8
 2320              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 76


 2321 0004 00AF     		add	r7, sp, #0
 2322              		.cfi_def_cfa_register 7
 2323 0006 7860     		str	r0, [r7, #4]
 2324 0008 3960     		str	r1, [r7]
1939:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#if(0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1940:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CapSense_CSD_sampleClkDividerVal[sensor] = (uint8)modulatorClk;
 2325              		.loc 1 1940 0
 2326 000a 3B68     		ldr	r3, [r7]
 2327 000c DAB2     		uxtb	r2, r3
 2328 000e 0349     		ldr	r1, .L122
 2329 0010 7B68     		ldr	r3, [r7, #4]
 2330 0012 CB18     		add	r3, r1, r3
 2331 0014 1A70     		strb	r2, [r3]
1941:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#else
1942:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CapSense_CSD_sampleClkDividerVal = (uint8)modulatorClk;
1943:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		#endif /* (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1944:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 2332              		.loc 1 1944 0
 2333 0016 BD46     		mov	sp, r7
 2334 0018 02B0     		add	sp, sp, #8
 2335              		@ sp needed
 2336 001a 80BD     		pop	{r7, pc}
 2337              	.L123:
 2338              		.align	2
 2339              	.L122:
 2340 001c 00000000 		.word	CapSense_CSD_sampleClkDividerVal
 2341              		.cfi_endproc
 2342              	.LFE63:
 2343              		.size	CapSense_CSD_SetModulatorClkDivider, .-CapSense_CSD_SetModulatorClkDivider
 2344              		.section	.text.CapSense_CSD_GetModulationIDAC,"ax",%progbits
 2345              		.align	2
 2346              		.global	CapSense_CSD_GetModulationIDAC
 2347              		.code	16
 2348              		.thumb_func
 2349              		.type	CapSense_CSD_GetModulationIDAC, %function
 2350              	CapSense_CSD_GetModulationIDAC:
 2351              	.LFB64:
1945:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1946:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1947:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1948:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetModulationIDAC
1949:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1950:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1951:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1952:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns a value of the modulation IDAC for the  sensor.
1953:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1954:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1955:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor: sensor index. The index value can be 
1956:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
1957:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1958:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1959:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns the modulation IDAC of the sensor. 
1960:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1961:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1962:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_modulationIDAC[] - stores modulation IDAC values.
1963:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
1964:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 77


1965:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1966:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1967:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1968:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetModulationIDAC(uint32 sensor)
1969:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2352              		.loc 1 1969 0
 2353              		.cfi_startproc
 2354 0000 80B5     		push	{r7, lr}
 2355              		.cfi_def_cfa_offset 8
 2356              		.cfi_offset 7, -8
 2357              		.cfi_offset 14, -4
 2358 0002 82B0     		sub	sp, sp, #8
 2359              		.cfi_def_cfa_offset 16
 2360 0004 00AF     		add	r7, sp, #0
 2361              		.cfi_def_cfa_register 7
 2362 0006 7860     		str	r0, [r7, #4]
1970:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		return((uint32)CapSense_CSD_modulationIDAC[sensor]);
 2363              		.loc 1 1970 0
 2364 0008 034A     		ldr	r2, .L126
 2365 000a 7B68     		ldr	r3, [r7, #4]
 2366 000c D318     		add	r3, r2, r3
 2367 000e 1B78     		ldrb	r3, [r3]
1971:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2368              		.loc 1 1971 0
 2369 0010 181C     		mov	r0, r3
 2370 0012 BD46     		mov	sp, r7
 2371 0014 02B0     		add	sp, sp, #8
 2372              		@ sp needed
 2373 0016 80BD     		pop	{r7, pc}
 2374              	.L127:
 2375              		.align	2
 2376              	.L126:
 2377 0018 00000000 		.word	CapSense_CSD_modulationIDAC
 2378              		.cfi_endproc
 2379              	.LFE64:
 2380              		.size	CapSense_CSD_GetModulationIDAC, .-CapSense_CSD_GetModulationIDAC
 2381              		.section	.text.CapSense_CSD_SetModulationIDAC,"ax",%progbits
 2382              		.align	2
 2383              		.global	CapSense_CSD_SetModulationIDAC
 2384              		.code	16
 2385              		.thumb_func
 2386              		.type	CapSense_CSD_SetModulationIDAC, %function
 2387              	CapSense_CSD_SetModulationIDAC:
 2388              	.LFB65:
1972:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1973:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
1974:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/*******************************************************************************
1975:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Function Name: CapSense_CSD_SetModulationIDAC
1976:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	********************************************************************************
1977:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1978:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Summary:
1979:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  This API sets a value of the modulation IDAC for the  sensor.
1980:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1981:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Parameters:
1982:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  sensor:  Sensor index.
1983:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  compIdacValue: represents the modulation IDAC data register value.
1984:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 78


1985:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Return:
1986:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None.
1987:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1988:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Global Variables:
1989:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  CapSense_CSD_modulationIDAC[] - array with modulation IDAC values
1990:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* 
1991:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Side Effects:
1992:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
1993:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
1994:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*******************************************************************************/
1995:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	void CapSense_CSD_SetModulationIDAC(uint32 sensor, uint32 modIdacValue)
1996:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 2389              		.loc 1 1996 0
 2390              		.cfi_startproc
 2391 0000 80B5     		push	{r7, lr}
 2392              		.cfi_def_cfa_offset 8
 2393              		.cfi_offset 7, -8
 2394              		.cfi_offset 14, -4
 2395 0002 82B0     		sub	sp, sp, #8
 2396              		.cfi_def_cfa_offset 16
 2397 0004 00AF     		add	r7, sp, #0
 2398              		.cfi_def_cfa_register 7
 2399 0006 7860     		str	r0, [r7, #4]
 2400 0008 3960     		str	r1, [r7]
1997:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_modulationIDAC[sensor] = (uint8)modIdacValue;
 2401              		.loc 1 1997 0
 2402 000a 3B68     		ldr	r3, [r7]
 2403 000c DAB2     		uxtb	r2, r3
 2404 000e 0349     		ldr	r1, .L129
 2405 0010 7B68     		ldr	r3, [r7, #4]
 2406 0012 CB18     		add	r3, r1, r3
 2407 0014 1A70     		strb	r2, [r3]
1998:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 2408              		.loc 1 1998 0
 2409 0016 BD46     		mov	sp, r7
 2410 0018 02B0     		add	sp, sp, #8
 2411              		@ sp needed
 2412 001a 80BD     		pop	{r7, pc}
 2413              	.L130:
 2414              		.align	2
 2415              	.L129:
 2416 001c 00000000 		.word	CapSense_CSD_modulationIDAC
 2417              		.cfi_endproc
 2418              	.LFE65:
 2419              		.size	CapSense_CSD_SetModulationIDAC, .-CapSense_CSD_SetModulationIDAC
 2420              		.section	.text.CapSense_CSD_GetCompensationIDAC,"ax",%progbits
 2421              		.align	2
 2422              		.global	CapSense_CSD_GetCompensationIDAC
 2423              		.code	16
 2424              		.thumb_func
 2425              		.type	CapSense_CSD_GetCompensationIDAC, %function
 2426              	CapSense_CSD_GetCompensationIDAC:
 2427              	.LFB66:
1999:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
2000:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2001:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2002:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(CapSense_CSD_IDAC_CNT > 1u)
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 79


2003:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/*******************************************************************************
2004:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Function Name: CapSense_CSD_GetCompensationIDAC
2005:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	********************************************************************************
2006:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2007:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Summary:
2008:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  This API returns a value of the compensation IDAC for the  sensor.
2009:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2010:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Parameters:
2011:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  sensor: sensor index. The index value can be 
2012:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2013:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2014:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Return:
2015:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  This API returns the compensation IDAC of the sensor. 
2016:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2017:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Global Variables:
2018:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  CapSense_CSD_compensationIDAC[] - stores the compensation IDAC values.
2019:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* 
2020:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Side Effects:
2021:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
2022:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2023:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*******************************************************************************/
2024:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 CapSense_CSD_GetCompensationIDAC(uint32 sensor)
2025:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 2428              		.loc 1 2025 0
 2429              		.cfi_startproc
 2430 0000 80B5     		push	{r7, lr}
 2431              		.cfi_def_cfa_offset 8
 2432              		.cfi_offset 7, -8
 2433              		.cfi_offset 14, -4
 2434 0002 82B0     		sub	sp, sp, #8
 2435              		.cfi_def_cfa_offset 16
 2436 0004 00AF     		add	r7, sp, #0
 2437              		.cfi_def_cfa_register 7
 2438 0006 7860     		str	r0, [r7, #4]
2026:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		return((uint32)CapSense_CSD_compensationIDAC[sensor]);
 2439              		.loc 1 2026 0
 2440 0008 034A     		ldr	r2, .L133
 2441 000a 7B68     		ldr	r3, [r7, #4]
 2442 000c D318     		add	r3, r2, r3
 2443 000e 1B78     		ldrb	r3, [r3]
2027:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 2444              		.loc 1 2027 0
 2445 0010 181C     		mov	r0, r3
 2446 0012 BD46     		mov	sp, r7
 2447 0014 02B0     		add	sp, sp, #8
 2448              		@ sp needed
 2449 0016 80BD     		pop	{r7, pc}
 2450              	.L134:
 2451              		.align	2
 2452              	.L133:
 2453 0018 00000000 		.word	CapSense_CSD_compensationIDAC
 2454              		.cfi_endproc
 2455              	.LFE66:
 2456              		.size	CapSense_CSD_GetCompensationIDAC, .-CapSense_CSD_GetCompensationIDAC
 2457              		.section	.text.CapSense_CSD_SetCompensationIDAC,"ax",%progbits
 2458              		.align	2
 2459              		.global	CapSense_CSD_SetCompensationIDAC
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 80


 2460              		.code	16
 2461              		.thumb_func
 2462              		.type	CapSense_CSD_SetCompensationIDAC, %function
 2463              	CapSense_CSD_SetCompensationIDAC:
 2464              	.LFB67:
2028:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_IDAC_CNT > 1u) */
2029:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2030:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2031:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if((CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) && (CapSense_CSD_IDAC_CNT > 1u))
2032:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/*******************************************************************************
2033:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Function Name: CapSense_CSD_SetCompensationIDAC
2034:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	********************************************************************************
2035:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2036:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Summary:
2037:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  This API sets a value of compensation IDAC for the  sensor.
2038:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2039:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Parameters:
2040:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  sensor:  Sensor index.
2041:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  compIdacValue: represents the compensation IDAC data register value.
2042:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2043:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Return:
2044:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None.
2045:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2046:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Global Variables:
2047:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  CapSense_CSD_compensationIDAC[] - an array with compensation IDAC values
2048:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* 
2049:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Side Effects:
2050:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
2051:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2052:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*******************************************************************************/
2053:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	void CapSense_CSD_SetCompensationIDAC(uint32 sensor, uint32 compIdacValue)
2054:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 2465              		.loc 1 2054 0
 2466              		.cfi_startproc
 2467 0000 80B5     		push	{r7, lr}
 2468              		.cfi_def_cfa_offset 8
 2469              		.cfi_offset 7, -8
 2470              		.cfi_offset 14, -4
 2471 0002 82B0     		sub	sp, sp, #8
 2472              		.cfi_def_cfa_offset 16
 2473 0004 00AF     		add	r7, sp, #0
 2474              		.cfi_def_cfa_register 7
 2475 0006 7860     		str	r0, [r7, #4]
 2476 0008 3960     		str	r1, [r7]
2055:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		CapSense_CSD_compensationIDAC[sensor] = (uint8)compIdacValue;
 2477              		.loc 1 2055 0
 2478 000a 3B68     		ldr	r3, [r7]
 2479 000c DAB2     		uxtb	r2, r3
 2480 000e 0349     		ldr	r1, .L136
 2481 0010 7B68     		ldr	r3, [r7, #4]
 2482 0012 CB18     		add	r3, r1, r3
 2483 0014 1A70     		strb	r2, [r3]
2056:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 2484              		.loc 1 2056 0
 2485 0016 BD46     		mov	sp, r7
 2486 0018 02B0     		add	sp, sp, #8
 2487              		@ sp needed
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 81


 2488 001a 80BD     		pop	{r7, pc}
 2489              	.L137:
 2490              		.align	2
 2491              	.L136:
 2492 001c 00000000 		.word	CapSense_CSD_compensationIDAC
 2493              		.cfi_endproc
 2494              	.LFE67:
 2495              		.size	CapSense_CSD_SetCompensationIDAC, .-CapSense_CSD_SetCompensationIDAC
 2496              		.section	.text.CapSense_CSD_GetIDACRange,"ax",%progbits
 2497              		.align	2
 2498              		.global	CapSense_CSD_GetIDACRange
 2499              		.code	16
 2500              		.thumb_func
 2501              		.type	CapSense_CSD_GetIDACRange, %function
 2502              	CapSense_CSD_GetIDACRange:
 2503              	.LFB68:
2057:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* ((CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) && (CapSense_CSD_IDAC_CNT > 1u
2058:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2059:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
2060:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetIDACRange
2061:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
2062:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2063:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
2064:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns a value that indicates the IDAC range used by the 
2065:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  component to scan sensors. The IDAC range is common for all the sensors.
2066:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2067:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
2068:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2069:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2070:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
2071:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API Returns a value that indicates the IDAC range:
2072:.\Generated_Source\PSoC4/CapSense_CSD.c **** *      0 - IDAC range set to 4x
2073:.\Generated_Source\PSoC4/CapSense_CSD.c **** *      1 - IDAC range set to 8x
2074:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2075:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
2076:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2077:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
2078:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
2079:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2080:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2081:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
2082:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetIDACRange(void)
2083:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2504              		.loc 1 2083 0
 2505              		.cfi_startproc
 2506 0000 80B5     		push	{r7, lr}
 2507              		.cfi_def_cfa_offset 8
 2508              		.cfi_offset 7, -8
 2509              		.cfi_offset 14, -4
 2510 0002 00AF     		add	r7, sp, #0
 2511              		.cfi_def_cfa_register 7
2084:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	return((0u != (CapSense_CSD_CSD_IDAC_REG & CapSense_CSD_CSD_IDAC1_RANGE_8X)) ? 1uL : 0uL);
 2512              		.loc 1 2084 0
 2513 0004 054B     		ldr	r3, .L142
 2514 0006 1A68     		ldr	r2, [r3]
 2515 0008 8023     		mov	r3, #128
 2516 000a DB00     		lsl	r3, r3, #3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 82


 2517 000c 1340     		and	r3, r2
 2518 000e 01D0     		beq	.L139
 2519              		.loc 1 2084 0 is_stmt 0 discriminator 1
 2520 0010 0123     		mov	r3, #1
 2521 0012 00E0     		b	.L140
 2522              	.L139:
 2523              		.loc 1 2084 0 discriminator 2
 2524 0014 0023     		mov	r3, #0
 2525              	.L140:
2085:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2526              		.loc 1 2085 0 is_stmt 1 discriminator 3
 2527 0016 181C     		mov	r0, r3
 2528 0018 BD46     		mov	sp, r7
 2529              		@ sp needed
 2530 001a 80BD     		pop	{r7, pc}
 2531              	.L143:
 2532              		.align	2
 2533              	.L142:
 2534 001c 08000840 		.word	1074266120
 2535              		.cfi_endproc
 2536              	.LFE68:
 2537              		.size	CapSense_CSD_GetIDACRange, .-CapSense_CSD_GetIDACRange
 2538              		.section	.text.CapSense_CSD_SetIDACRange,"ax",%progbits
 2539              		.align	2
 2540              		.global	CapSense_CSD_SetIDACRange
 2541              		.code	16
 2542              		.thumb_func
 2543              		.type	CapSense_CSD_SetIDACRange, %function
 2544              	CapSense_CSD_SetIDACRange:
 2545              	.LFB69:
2086:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2087:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
2088:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/*******************************************************************************
2089:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Function Name: CapSense_CSD_SetIDACRange
2090:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	********************************************************************************
2091:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2092:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Summary:
2093:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  This API sets the IDAC range to the 4x (1.2uA/bit) or 8x (2.4uA/bit) mode.
2094:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  The IDAC range is common for all the sensors and common for the modulation and 
2095:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  compensation IDACs.
2096:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2097:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Parameters:
2098:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  iDacRange:  represents value for IDAC range 
2099:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  0 -  IDAC range set to 4x (1.2uA/bit)
2100:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  1 or >1 - IDAC range set to 8x (2.4uA/bit)
2101:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2102:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Return:
2103:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None.
2104:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2105:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Global Variables:
2106:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
2107:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* 
2108:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Side Effects:
2109:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
2110:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2111:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*******************************************************************************/
2112:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	void CapSense_CSD_SetIDACRange(uint32 iDacRange)
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 83


2113:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 2546              		.loc 1 2113 0
 2547              		.cfi_startproc
 2548 0000 80B5     		push	{r7, lr}
 2549              		.cfi_def_cfa_offset 8
 2550              		.cfi_offset 7, -8
 2551              		.cfi_offset 14, -4
 2552 0002 82B0     		sub	sp, sp, #8
 2553              		.cfi_def_cfa_offset 16
 2554 0004 00AF     		add	r7, sp, #0
 2555              		.cfi_def_cfa_register 7
 2556 0006 7860     		str	r0, [r7, #4]
2114:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    if(iDacRange != 0u)
 2557              		.loc 1 2114 0
 2558 0008 7B68     		ldr	r3, [r7, #4]
 2559 000a 002B     		cmp	r3, #0
 2560 000c 06D0     		beq	.L145
2115:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
2116:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    /*  IDAC range = 8x (2.4uA/bit) */ 
2117:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    CapSense_CSD_CSD_IDAC_REG |= (CapSense_CSD_CSD_IDAC1_RANGE_8X |\
 2561              		.loc 1 2117 0
 2562 000e 084B     		ldr	r3, .L147
 2563 0010 074A     		ldr	r2, .L147
 2564 0012 1268     		ldr	r2, [r2]
 2565 0014 0749     		ldr	r1, .L147+4
 2566 0016 0A43     		orr	r2, r1
 2567 0018 1A60     		str	r2, [r3]
 2568 001a 05E0     		b	.L144
 2569              	.L145:
2118:.\Generated_Source\PSoC4/CapSense_CSD.c **** 											  CapSense_CSD_CSD_IDAC2_RANGE_8X);
2119:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
2120:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		else
2121:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
2122:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    /*  IDAC range = 4x (1.2uA/bit) */ 
2123:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    /*  IDAC range = 8x (2.4uA/bit) */ 
2124:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    CapSense_CSD_CSD_IDAC_REG &= ~(CapSense_CSD_CSD_IDAC1_RANGE_8X |\
 2570              		.loc 1 2124 0
 2571 001c 044B     		ldr	r3, .L147
 2572 001e 044A     		ldr	r2, .L147
 2573 0020 1168     		ldr	r1, [r2]
 2574 0022 054A     		ldr	r2, .L147+8
 2575 0024 0A40     		and	r2, r1
 2576 0026 1A60     		str	r2, [r3]
 2577              	.L144:
2125:.\Generated_Source\PSoC4/CapSense_CSD.c **** 											   CapSense_CSD_CSD_IDAC2_RANGE_8X);
2126:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
2127:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 2578              		.loc 1 2127 0
 2579 0028 BD46     		mov	sp, r7
 2580 002a 02B0     		add	sp, sp, #8
 2581              		@ sp needed
 2582 002c 80BD     		pop	{r7, pc}
 2583              	.L148:
 2584 002e C046     		.align	2
 2585              	.L147:
 2586 0030 08000840 		.word	1074266120
 2587 0034 00040004 		.word	67109888
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 84


 2588 0038 FFFBFFFB 		.word	-67109889
 2589              		.cfi_endproc
 2590              	.LFE69:
 2591              		.size	CapSense_CSD_SetIDACRange, .-CapSense_CSD_SetIDACRange
 2592              		.section	.text.CapSense_CSD_GetSensorRaw,"ax",%progbits
 2593              		.align	2
 2594              		.global	CapSense_CSD_GetSensorRaw
 2595              		.code	16
 2596              		.thumb_func
 2597              		.type	CapSense_CSD_GetSensorRaw, %function
 2598              	CapSense_CSD_GetSensorRaw:
 2599              	.LFB70:
2128:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
2129:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2130:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2131:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) || (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUN
2132:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/*******************************************************************************
2133:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Function Name: CapSense_CSD_GetSensorRaw
2134:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	********************************************************************************
2135:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2136:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Summary:
2137:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  The API updates and gets uprated raw data from the sensor.
2138:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2139:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Parameters:
2140:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  sensor - Sensor number.
2141:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2142:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Return:
2143:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  Returns the current raw data value for a defined sensor number.
2144:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2145:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Global Variables:
2146:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
2147:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2148:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Side Effects:
2149:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
2150:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2151:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*******************************************************************************/
2152:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint16  CapSense_CSD_GetSensorRaw(uint32 sensor)
2153:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
 2600              		.loc 1 2153 0
 2601              		.cfi_startproc
 2602 0000 80B5     		push	{r7, lr}
 2603              		.cfi_def_cfa_offset 8
 2604              		.cfi_offset 7, -8
 2605              		.cfi_offset 14, -4
 2606 0002 84B0     		sub	sp, sp, #16
 2607              		.cfi_def_cfa_offset 24
 2608 0004 00AF     		add	r7, sp, #0
 2609              		.cfi_def_cfa_register 7
 2610 0006 7860     		str	r0, [r7, #4]
2154:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint32 curSample;
2155:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint32 avgVal = 0u;
 2611              		.loc 1 2155 0
 2612 0008 0023     		mov	r3, #0
 2613 000a BB60     		str	r3, [r7, #8]
2156:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
2157:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		for(curSample = 0u; curSample < CapSense_CSD_AVG_SAMPLES_NUM; curSample++)
 2614              		.loc 1 2157 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 85


 2615 000c 0023     		mov	r3, #0
 2616 000e FB60     		str	r3, [r7, #12]
 2617 0010 14E0     		b	.L150
 2618              	.L152:
2158:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
2159:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    
2160:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			CapSense_CSD_ScanSensor((uint32)sensor);
 2619              		.loc 1 2160 0
 2620 0012 7B68     		ldr	r3, [r7, #4]
 2621 0014 181C     		mov	r0, r3
 2622 0016 FFF7FEFF 		bl	CapSense_CSD_ScanSensor
2161:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    while(CapSense_CSD_IsBusy() == 1u)
 2623              		.loc 1 2161 0
 2624 001a C046     		mov	r8, r8
 2625              	.L151:
 2626              		.loc 1 2161 0 is_stmt 0 discriminator 1
 2627 001c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 2628 0020 031C     		mov	r3, r0
 2629 0022 012B     		cmp	r3, #1
 2630 0024 FAD0     		beq	.L151
2162:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			{
2163:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				/* Wait while sensor is busy */
2164:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			}
2165:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			avgVal += CapSense_CSD_ReadSensorRaw((uint32)sensor);
 2631              		.loc 1 2165 0 is_stmt 1
 2632 0026 7B68     		ldr	r3, [r7, #4]
 2633 0028 181C     		mov	r0, r3
 2634 002a FFF7FEFF 		bl	CapSense_CSD_ReadSensorRaw
 2635 002e 031C     		mov	r3, r0
 2636 0030 BA68     		ldr	r2, [r7, #8]
 2637 0032 D318     		add	r3, r2, r3
 2638 0034 BB60     		str	r3, [r7, #8]
2157:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		for(curSample = 0u; curSample < CapSense_CSD_AVG_SAMPLES_NUM; curSample++)
 2639              		.loc 1 2157 0
 2640 0036 FB68     		ldr	r3, [r7, #12]
 2641 0038 0133     		add	r3, r3, #1
 2642 003a FB60     		str	r3, [r7, #12]
 2643              	.L150:
2157:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		for(curSample = 0u; curSample < CapSense_CSD_AVG_SAMPLES_NUM; curSample++)
 2644              		.loc 1 2157 0 is_stmt 0 discriminator 1
 2645 003c FB68     		ldr	r3, [r7, #12]
 2646 003e 002B     		cmp	r3, #0
 2647 0040 E7D0     		beq	.L152
2166:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
2167:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    
2168:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	    return((uint16)(avgVal / CapSense_CSD_AVG_SAMPLES_NUM));
 2648              		.loc 1 2168 0 is_stmt 1
 2649 0042 BB68     		ldr	r3, [r7, #8]
 2650 0044 9BB2     		uxth	r3, r3
2169:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
 2651              		.loc 1 2169 0
 2652 0046 181C     		mov	r0, r3
 2653 0048 BD46     		mov	sp, r7
 2654 004a 04B0     		add	sp, sp, #16
 2655              		@ sp needed
 2656 004c 80BD     		pop	{r7, pc}
 2657              		.cfi_endproc
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 86


 2658              	.LFE70:
 2659              		.size	CapSense_CSD_GetSensorRaw, .-CapSense_CSD_GetSensorRaw
 2660 004e C046     		.section	.text.CapSense_CSD_SetUnscannedSensorState,"ax",%progbits
 2661              		.align	2
 2662              		.global	CapSense_CSD_SetUnscannedSensorState
 2663              		.code	16
 2664              		.thumb_func
 2665              		.type	CapSense_CSD_SetUnscannedSensorState, %function
 2666              	CapSense_CSD_SetUnscannedSensorState:
 2667              	.LFB71:
2170:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* ((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) && (CapSense_CSD_TUNING_METHOD == CapSense_C
2171:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2172:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2173:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) && (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUN
2174:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	/*******************************************************************************
2175:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Function Name: CapSense_CSD_CalibrateSensor
2176:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	********************************************************************************
2177:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2178:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Summary:
2179:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  Computes the one sensor IDAC value, which provides the raw signal on
2180:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  a specified level, with a specified prescaler, speed, and resolution.
2181:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2182:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Parameters:
2183:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  sensor - Sensor Number.
2184:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2185:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  rawLevel -  Raw data level which should be reached during the calibration
2186:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*              procedure.
2187:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2188:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  idacLevelsTbl - Pointer to the modulatorIdac data register configuration table.            
2189:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2190:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	* Return:       
2191:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*  None
2192:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*
2193:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	*******************************************************************************/
2194:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	void CapSense_CSD_CalibrateSensor(uint32 sensor, uint32 rawLevel, uint8 idacLevelsTbl[])
2195:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
2196:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint8 mask;
2197:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		uint16 rawData;
2198:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
2199:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		rawData = 0u;
2200:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
2201:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		mask = 0x80u;
2202:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		/* Init IDAC for null Channel */
2203:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		idacLevelsTbl[sensor] = 0x00u;
2204:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
2205:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		do
2206:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
2207:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		    /* Set bit for null Channel */
2208:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			idacLevelsTbl[sensor] |= mask;
2209:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2210:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	        /* Scan null Channel and get Rawdata */
2211:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			rawData = CapSense_CSD_GetSensorRaw(sensor);
2212:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
2213:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			/* Decrease IDAC until Rawdata reaches rawLevel */ 
2214:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			if(rawData < rawLevel)
2215:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			{
2216:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			    /* Reset bit for null Channel  */ 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 87


2217:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				idacLevelsTbl[sensor] &= (uint8)~mask;
2218:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			}
2219:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			
2220:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			mask >>= 1u;
2221:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
2222:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		while(mask > 0u);
2223:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
2224:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
2225:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* ((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) && (CapSense_CSD_TUNING_METHOD != CapSense_C
2226:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2227:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2228:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
2229:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetUnscannedSensorState
2230:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
2231:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2232:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
2233:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API sets a state for un-scanned sensors. 
2234:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  It is possible to set the state to Ground, High-Z, or the shield electrode. 
2235:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The un-scanned sensor can be connected to a shield electrode only if the shield is 
2236:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  enabled. If the shield is disabled and this API is called with the parameter which
2237:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  indicates the shield state, the un-scanned sensor will be connected to Ground.
2238:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2239:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
2240:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor - Sensor Number.
2241:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensorState: This parameter indicates un-scanned sensor state:
2242:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2243:.\Generated_Source\PSoC4/CapSense_CSD.c **** *     CapSense_CSD__GROUND 0
2244:.\Generated_Source\PSoC4/CapSense_CSD.c **** *     CapSense_CSD__HIZ_ANALOG 1
2245:.\Generated_Source\PSoC4/CapSense_CSD.c **** *     CapSense_CSD__SHIELD 2
2246:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2247:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
2248:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None.
2249:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2250:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
2251:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_unscannedSnsDriveMode[] - used to store the state for
2252:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  un-scanned sensors.
2253:.\Generated_Source\PSoC4/CapSense_CSD.c **** * 
2254:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
2255:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2256:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2257:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
2258:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_SetUnscannedSensorState(uint32 sensor, uint32 sensorState)
2259:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2668              		.loc 1 2259 0
 2669              		.cfi_startproc
 2670 0000 80B5     		push	{r7, lr}
 2671              		.cfi_def_cfa_offset 8
 2672              		.cfi_offset 7, -8
 2673              		.cfi_offset 14, -4
 2674 0002 82B0     		sub	sp, sp, #8
 2675              		.cfi_def_cfa_offset 16
 2676 0004 00AF     		add	r7, sp, #0
 2677              		.cfi_def_cfa_register 7
 2678 0006 7860     		str	r0, [r7, #4]
 2679 0008 3960     		str	r1, [r7]
2260:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_unscannedSnsDriveMode[sensor] = (uint8)sensorState;	
 2680              		.loc 1 2260 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 88


 2681 000a 3B68     		ldr	r3, [r7]
 2682 000c DAB2     		uxtb	r2, r3
 2683 000e 0349     		ldr	r1, .L155
 2684 0010 7B68     		ldr	r3, [r7, #4]
 2685 0012 CB18     		add	r3, r1, r3
 2686 0014 1A70     		strb	r2, [r3]
2261:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2687              		.loc 1 2261 0
 2688 0016 BD46     		mov	sp, r7
 2689 0018 02B0     		add	sp, sp, #8
 2690              		@ sp needed
 2691 001a 80BD     		pop	{r7, pc}
 2692              	.L156:
 2693              		.align	2
 2694              	.L155:
 2695 001c 00000000 		.word	CapSense_CSD_unscannedSnsDriveMode
 2696              		.cfi_endproc
 2697              	.LFE71:
 2698              		.size	CapSense_CSD_SetUnscannedSensorState, .-CapSense_CSD_SetUnscannedSensorState
 2699              		.section	.text.CapSense_CSD_NormalizeWidgets,"ax",%progbits
 2700              		.align	2
 2701              		.global	CapSense_CSD_NormalizeWidgets
 2702              		.code	16
 2703              		.thumb_func
 2704              		.type	CapSense_CSD_NormalizeWidgets, %function
 2705              	CapSense_CSD_NormalizeWidgets:
 2706              	.LFB72:
2262:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2263:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(0u != CapSense_CSD_TOTAL_CENTROIDS_COUNT) 
2264:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
2265:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_NormalizeWidgets
2266:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
2267:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2268:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
2269:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API aligns all the parameters of the widget to the maximum parameter.
2270:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2271:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
2272:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  uint32 widgetsNum: Number of widgets.
2273:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  uint8 *dataPrt: pointer to array with widget parameters.	
2274:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2275:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
2276:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2277:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2278:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
2279:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_numberOfSensors[] - Number of sensors in the widget.
2280:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_rawDataIndex[currentWidget] - Contains the  1st sensor
2281:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  position in the widget.
2282:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2283:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
2284:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2285:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2286:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
2287:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_NormalizeWidgets(uint32 widgetsNum, uint8 *dataPtr)
2288:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2707              		.loc 1 2288 0
 2708              		.cfi_startproc
 2709 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 89


 2710              		.cfi_def_cfa_offset 8
 2711              		.cfi_offset 7, -8
 2712              		.cfi_offset 14, -4
 2713 0002 88B0     		sub	sp, sp, #32
 2714              		.cfi_def_cfa_offset 40
 2715 0004 00AF     		add	r7, sp, #0
 2716              		.cfi_def_cfa_register 7
 2717 0006 7860     		str	r0, [r7, #4]
 2718 0008 3960     		str	r1, [r7]
2289:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 currentWidget;
2290:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 currentSensor;
2291:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 lastSensor;
2292:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 sensorsPerWidget;
2293:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	uint32 maxPerWidget;
2294:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2295:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(currentWidget = 0u; currentWidget < widgetsNum; currentWidget++)
 2719              		.loc 1 2295 0
 2720 000a 0023     		mov	r3, #0
 2721 000c FB61     		str	r3, [r7, #28]
 2722 000e 3AE0     		b	.L158
 2723              	.L164:
2296:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	{
2297:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		maxPerWidget = 0u;
 2724              		.loc 1 2297 0
 2725 0010 0023     		mov	r3, #0
 2726 0012 7B61     		str	r3, [r7, #20]
2298:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
2299:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		sensorsPerWidget = CapSense_CSD_numberOfSensors[currentWidget];
 2727              		.loc 1 2299 0
 2728 0014 1F4A     		ldr	r2, .L165
 2729 0016 FB69     		ldr	r3, [r7, #28]
 2730 0018 D318     		add	r3, r2, r3
 2731 001a 1B78     		ldrb	r3, [r3]
 2732 001c 3B61     		str	r3, [r7, #16]
2300:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		currentSensor = CapSense_CSD_rawDataIndex[currentWidget];
 2733              		.loc 1 2300 0
 2734 001e 1E4A     		ldr	r2, .L165+4
 2735 0020 FB69     		ldr	r3, [r7, #28]
 2736 0022 D318     		add	r3, r2, r3
 2737 0024 1B78     		ldrb	r3, [r3]
 2738 0026 BB61     		str	r3, [r7, #24]
2301:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		lastSensor = currentSensor + sensorsPerWidget;
 2739              		.loc 1 2301 0
 2740 0028 BA69     		ldr	r2, [r7, #24]
 2741 002a 3B69     		ldr	r3, [r7, #16]
 2742 002c D318     		add	r3, r2, r3
 2743 002e FB60     		str	r3, [r7, #12]
2302:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
2303:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		while(currentSensor < lastSensor)
 2744              		.loc 1 2303 0
 2745 0030 0FE0     		b	.L159
 2746              	.L161:
2304:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
2305:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			if(maxPerWidget < dataPtr[currentSensor])
 2747              		.loc 1 2305 0
 2748 0032 3A68     		ldr	r2, [r7]
 2749 0034 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 90


 2750 0036 D318     		add	r3, r2, r3
 2751 0038 1B78     		ldrb	r3, [r3]
 2752 003a 1A1C     		mov	r2, r3
 2753 003c 7B69     		ldr	r3, [r7, #20]
 2754 003e 9A42     		cmp	r2, r3
 2755 0040 04D9     		bls	.L160
2306:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			{
2307:.\Generated_Source\PSoC4/CapSense_CSD.c **** 				maxPerWidget = dataPtr[currentSensor];
 2756              		.loc 1 2307 0
 2757 0042 3A68     		ldr	r2, [r7]
 2758 0044 BB69     		ldr	r3, [r7, #24]
 2759 0046 D318     		add	r3, r2, r3
 2760 0048 1B78     		ldrb	r3, [r3]
 2761 004a 7B61     		str	r3, [r7, #20]
 2762              	.L160:
2308:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			}
2309:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			currentSensor++;
 2763              		.loc 1 2309 0
 2764 004c BB69     		ldr	r3, [r7, #24]
 2765 004e 0133     		add	r3, r3, #1
 2766 0050 BB61     		str	r3, [r7, #24]
 2767              	.L159:
2303:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		while(currentSensor < lastSensor)
 2768              		.loc 1 2303 0 discriminator 1
 2769 0052 BA69     		ldr	r2, [r7, #24]
 2770 0054 FB68     		ldr	r3, [r7, #12]
 2771 0056 9A42     		cmp	r2, r3
 2772 0058 EBD3     		bcc	.L161
2310:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
2311:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
2312:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		currentSensor = CapSense_CSD_rawDataIndex[currentWidget];
 2773              		.loc 1 2312 0
 2774 005a 0F4A     		ldr	r2, .L165+4
 2775 005c FB69     		ldr	r3, [r7, #28]
 2776 005e D318     		add	r3, r2, r3
 2777 0060 1B78     		ldrb	r3, [r3]
 2778 0062 BB61     		str	r3, [r7, #24]
2313:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		
2314:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		while(currentSensor < lastSensor)
 2779              		.loc 1 2314 0
 2780 0064 08E0     		b	.L162
 2781              	.L163:
2315:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		{
2316:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			dataPtr[currentSensor] = (uint8)maxPerWidget;
 2782              		.loc 1 2316 0
 2783 0066 3A68     		ldr	r2, [r7]
 2784 0068 BB69     		ldr	r3, [r7, #24]
 2785 006a D318     		add	r3, r2, r3
 2786 006c 7A69     		ldr	r2, [r7, #20]
 2787 006e D2B2     		uxtb	r2, r2
 2788 0070 1A70     		strb	r2, [r3]
2317:.\Generated_Source\PSoC4/CapSense_CSD.c **** 			currentSensor++;
 2789              		.loc 1 2317 0
 2790 0072 BB69     		ldr	r3, [r7, #24]
 2791 0074 0133     		add	r3, r3, #1
 2792 0076 BB61     		str	r3, [r7, #24]
 2793              	.L162:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 91


2314:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		while(currentSensor < lastSensor)
 2794              		.loc 1 2314 0 discriminator 1
 2795 0078 BA69     		ldr	r2, [r7, #24]
 2796 007a FB68     		ldr	r3, [r7, #12]
 2797 007c 9A42     		cmp	r2, r3
 2798 007e F2D3     		bcc	.L163
2295:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(currentWidget = 0u; currentWidget < widgetsNum; currentWidget++)
 2799              		.loc 1 2295 0
 2800 0080 FB69     		ldr	r3, [r7, #28]
 2801 0082 0133     		add	r3, r3, #1
 2802 0084 FB61     		str	r3, [r7, #28]
 2803              	.L158:
2295:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	for(currentWidget = 0u; currentWidget < widgetsNum; currentWidget++)
 2804              		.loc 1 2295 0 is_stmt 0 discriminator 1
 2805 0086 FA69     		ldr	r2, [r7, #28]
 2806 0088 7B68     		ldr	r3, [r7, #4]
 2807 008a 9A42     		cmp	r2, r3
 2808 008c C0D3     		bcc	.L164
2318:.\Generated_Source\PSoC4/CapSense_CSD.c **** 		}
2319:.\Generated_Source\PSoC4/CapSense_CSD.c **** 	}
2320:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2809              		.loc 1 2320 0 is_stmt 1
 2810 008e BD46     		mov	sp, r7
 2811 0090 08B0     		add	sp, sp, #32
 2812              		@ sp needed
 2813 0092 80BD     		pop	{r7, pc}
 2814              	.L166:
 2815              		.align	2
 2816              	.L165:
 2817 0094 00000000 		.word	CapSense_CSD_numberOfSensors
 2818 0098 00000000 		.word	CapSense_CSD_rawDataIndex
 2819              		.cfi_endproc
 2820              	.LFE72:
 2821              		.size	CapSense_CSD_NormalizeWidgets, .-CapSense_CSD_NormalizeWidgets
 2822              		.bss
 2823              	CapSense_CSD_initVar.5228:
 2824 001c 00       		.space	1
 2825 001d 000000   		.text
 2826              	.Letext0:
 2827              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2828              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_CSD_CSHL.h"
 2829              		.section	.debug_info,"",%progbits
 2830              	.Ldebug_info0:
 2831 0000 070C0000 		.4byte	0xc07
 2832 0004 0400     		.2byte	0x4
 2833 0006 00000000 		.4byte	.Ldebug_abbrev0
 2834 000a 04       		.byte	0x4
 2835 000b 01       		.uleb128 0x1
 2836 000c D9040000 		.4byte	.LASF124
 2837 0010 01       		.byte	0x1
 2838 0011 40060000 		.4byte	.LASF125
 2839 0015 C9070000 		.4byte	.LASF126
 2840 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2841 001d 00000000 		.4byte	0
 2842 0021 00000000 		.4byte	.Ldebug_line0
 2843 0025 02       		.uleb128 0x2
 2844 0026 01       		.byte	0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 92


 2845 0027 06       		.byte	0x6
 2846 0028 7D090000 		.4byte	.LASF0
 2847 002c 02       		.uleb128 0x2
 2848 002d 01       		.byte	0x1
 2849 002e 08       		.byte	0x8
 2850 002f A2080000 		.4byte	.LASF1
 2851 0033 02       		.uleb128 0x2
 2852 0034 02       		.byte	0x2
 2853 0035 05       		.byte	0x5
 2854 0036 E1050000 		.4byte	.LASF2
 2855 003a 02       		.uleb128 0x2
 2856 003b 02       		.byte	0x2
 2857 003c 07       		.byte	0x7
 2858 003d 91090000 		.4byte	.LASF3
 2859 0041 02       		.uleb128 0x2
 2860 0042 04       		.byte	0x4
 2861 0043 05       		.byte	0x5
 2862 0044 09060000 		.4byte	.LASF4
 2863 0048 02       		.uleb128 0x2
 2864 0049 04       		.byte	0x4
 2865 004a 07       		.byte	0x7
 2866 004b B7070000 		.4byte	.LASF5
 2867 004f 02       		.uleb128 0x2
 2868 0050 08       		.byte	0x8
 2869 0051 05       		.byte	0x5
 2870 0052 0B040000 		.4byte	.LASF6
 2871 0056 02       		.uleb128 0x2
 2872 0057 08       		.byte	0x8
 2873 0058 07       		.byte	0x7
 2874 0059 32020000 		.4byte	.LASF7
 2875 005d 03       		.uleb128 0x3
 2876 005e 04       		.byte	0x4
 2877 005f 05       		.byte	0x5
 2878 0060 696E7400 		.ascii	"int\000"
 2879 0064 02       		.uleb128 0x2
 2880 0065 04       		.byte	0x4
 2881 0066 07       		.byte	0x7
 2882 0067 A3000000 		.4byte	.LASF8
 2883 006b 04       		.uleb128 0x4
 2884 006c 0A0A0000 		.4byte	.LASF9
 2885 0070 02       		.byte	0x2
 2886 0071 A1       		.byte	0xa1
 2887 0072 2C000000 		.4byte	0x2c
 2888 0076 04       		.uleb128 0x4
 2889 0077 EC030000 		.4byte	.LASF10
 2890 007b 02       		.byte	0x2
 2891 007c A2       		.byte	0xa2
 2892 007d 3A000000 		.4byte	0x3a
 2893 0081 04       		.uleb128 0x4
 2894 0082 95040000 		.4byte	.LASF11
 2895 0086 02       		.byte	0x2
 2896 0087 A3       		.byte	0xa3
 2897 0088 48000000 		.4byte	0x48
 2898 008c 02       		.uleb128 0x2
 2899 008d 04       		.byte	0x4
 2900 008e 04       		.byte	0x4
 2901 008f 1A020000 		.4byte	.LASF12
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 93


 2902 0093 02       		.uleb128 0x2
 2903 0094 08       		.byte	0x8
 2904 0095 04       		.byte	0x4
 2905 0096 100A0000 		.4byte	.LASF13
 2906 009a 02       		.uleb128 0x2
 2907 009b 01       		.byte	0x1
 2908 009c 08       		.byte	0x8
 2909 009d BA030000 		.4byte	.LASF14
 2910 00a1 05       		.uleb128 0x5
 2911 00a2 2E010000 		.4byte	.LASF15
 2912 00a6 02       		.byte	0x2
 2913 00a7 4B01     		.2byte	0x14b
 2914 00a9 AD000000 		.4byte	0xad
 2915 00ad 06       		.uleb128 0x6
 2916 00ae 6B000000 		.4byte	0x6b
 2917 00b2 05       		.uleb128 0x5
 2918 00b3 81050000 		.4byte	.LASF16
 2919 00b7 02       		.byte	0x2
 2920 00b8 4D01     		.2byte	0x14d
 2921 00ba BE000000 		.4byte	0xbe
 2922 00be 06       		.uleb128 0x6
 2923 00bf 81000000 		.4byte	0x81
 2924 00c3 02       		.uleb128 0x2
 2925 00c4 04       		.byte	0x4
 2926 00c5 07       		.byte	0x7
 2927 00c6 AE070000 		.4byte	.LASF17
 2928 00ca 07       		.uleb128 0x7
 2929 00cb 04       		.byte	0x4
 2930 00cc 6B000000 		.4byte	0x6b
 2931 00d0 07       		.uleb128 0x7
 2932 00d1 04       		.byte	0x4
 2933 00d2 D6000000 		.4byte	0xd6
 2934 00d6 08       		.uleb128 0x8
 2935 00d7 6B000000 		.4byte	0x6b
 2936 00db 09       		.uleb128 0x9
 2937 00dc 12060000 		.4byte	.LASF18
 2938 00e0 01       		.byte	0x1
 2939 00e1 CC       		.byte	0xcc
 2940 00e2 00000000 		.4byte	.LFB33
 2941 00e6 3C000000 		.4byte	.LFE33-.LFB33
 2942 00ea 01       		.uleb128 0x1
 2943 00eb 9C       		.byte	0x9c
 2944 00ec FF000000 		.4byte	0xff
 2945 00f0 0A       		.uleb128 0xa
 2946 00f1 2E0A0000 		.4byte	.LASF20
 2947 00f5 01       		.byte	0x1
 2948 00f6 CE       		.byte	0xce
 2949 00f7 81000000 		.4byte	0x81
 2950 00fb 02       		.uleb128 0x2
 2951 00fc 91       		.byte	0x91
 2952 00fd 74       		.sleb128 -12
 2953 00fe 00       		.byte	0
 2954 00ff 0B       		.uleb128 0xb
 2955 0100 B0080000 		.4byte	.LASF19
 2956 0104 01       		.byte	0x1
 2957 0105 0D01     		.2byte	0x10d
 2958 0107 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 94


 2959 010b C0000000 		.4byte	.LFE34-.LFB34
 2960 010f 01       		.uleb128 0x1
 2961 0110 9C       		.byte	0x9c
 2962 0111 25010000 		.4byte	0x125
 2963 0115 0C       		.uleb128 0xc
 2964 0116 DD090000 		.4byte	.LASF21
 2965 011a 01       		.byte	0x1
 2966 011b 0F01     		.2byte	0x10f
 2967 011d 81000000 		.4byte	0x81
 2968 0121 02       		.uleb128 0x2
 2969 0122 91       		.byte	0x91
 2970 0123 74       		.sleb128 -12
 2971 0124 00       		.byte	0
 2972 0125 0B       		.uleb128 0xb
 2973 0126 810A0000 		.4byte	.LASF22
 2974 012a 01       		.byte	0x1
 2975 012b 6201     		.2byte	0x162
 2976 012d 00000000 		.4byte	.LFB35
 2977 0131 50000000 		.4byte	.LFE35-.LFB35
 2978 0135 01       		.uleb128 0x1
 2979 0136 9C       		.byte	0x9c
 2980 0137 4B010000 		.4byte	0x14b
 2981 013b 0C       		.uleb128 0xc
 2982 013c DD090000 		.4byte	.LASF21
 2983 0140 01       		.byte	0x1
 2984 0141 6401     		.2byte	0x164
 2985 0143 81000000 		.4byte	0x81
 2986 0147 02       		.uleb128 0x2
 2987 0148 91       		.byte	0x91
 2988 0149 74       		.sleb128 -12
 2989 014a 00       		.byte	0
 2990 014b 0B       		.uleb128 0xb
 2991 014c 82040000 		.4byte	.LASF23
 2992 0150 01       		.byte	0x1
 2993 0151 9D01     		.2byte	0x19d
 2994 0153 00000000 		.4byte	.LFB36
 2995 0157 44000000 		.4byte	.LFE36-.LFB36
 2996 015b 01       		.uleb128 0x1
 2997 015c 9C       		.byte	0x9c
 2998 015d 74010000 		.4byte	0x174
 2999 0161 0C       		.uleb128 0xc
 3000 0162 B9060000 		.4byte	.LASF24
 3001 0166 01       		.byte	0x1
 3002 0167 A001     		.2byte	0x1a0
 3003 0169 6B000000 		.4byte	0x6b
 3004 016d 05       		.uleb128 0x5
 3005 016e 03       		.byte	0x3
 3006 016f 1C000000 		.4byte	CapSense_CSD_initVar.5228
 3007 0173 00       		.byte	0
 3008 0174 0D       		.uleb128 0xd
 3009 0175 20020000 		.4byte	.LASF33
 3010 0179 01       		.byte	0x1
 3011 017a F901     		.2byte	0x1f9
 3012 017c 00000000 		.4byte	.LFB37
 3013 0180 38000000 		.4byte	.LFE37-.LFB37
 3014 0184 01       		.uleb128 0x1
 3015 0185 9C       		.byte	0x9c
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 95


 3016 0186 0E       		.uleb128 0xe
 3017 0187 D0000000 		.4byte	.LASF35
 3018 018b 01       		.byte	0x1
 3019 018c 1F02     		.2byte	0x21f
 3020 018e 6B000000 		.4byte	0x6b
 3021 0192 00000000 		.4byte	.LFB38
 3022 0196 48000000 		.4byte	.LFE38-.LFB38
 3023 019a 01       		.uleb128 0x1
 3024 019b 9C       		.byte	0x9c
 3025 019c BF010000 		.4byte	0x1bf
 3026 01a0 0F       		.uleb128 0xf
 3027 01a1 55050000 		.4byte	.LASF27
 3028 01a5 01       		.byte	0x1
 3029 01a6 1F02     		.2byte	0x21f
 3030 01a8 6B000000 		.4byte	0x6b
 3031 01ac 02       		.uleb128 0x2
 3032 01ad 91       		.byte	0x91
 3033 01ae 6F       		.sleb128 -17
 3034 01af 0C       		.uleb128 0xc
 3035 01b0 30040000 		.4byte	.LASF25
 3036 01b4 01       		.byte	0x1
 3037 01b5 2102     		.2byte	0x221
 3038 01b7 81000000 		.4byte	0x81
 3039 01bb 02       		.uleb128 0x2
 3040 01bc 91       		.byte	0x91
 3041 01bd 74       		.sleb128 -12
 3042 01be 00       		.byte	0
 3043 01bf 0B       		.uleb128 0xb
 3044 01c0 1E070000 		.4byte	.LASF26
 3045 01c4 01       		.byte	0x1
 3046 01c5 4F02     		.2byte	0x24f
 3047 01c7 00000000 		.4byte	.LFB39
 3048 01cb 34000000 		.4byte	.LFE39-.LFB39
 3049 01cf 01       		.uleb128 0x1
 3050 01d0 9C       		.byte	0x9c
 3051 01d1 E5010000 		.4byte	0x1e5
 3052 01d5 0F       		.uleb128 0xf
 3053 01d6 7F030000 		.4byte	.LASF28
 3054 01da 01       		.byte	0x1
 3055 01db 4F02     		.2byte	0x24f
 3056 01dd 81000000 		.4byte	0x81
 3057 01e1 02       		.uleb128 0x2
 3058 01e2 91       		.byte	0x91
 3059 01e3 74       		.sleb128 -12
 3060 01e4 00       		.byte	0
 3061 01e5 0B       		.uleb128 0xb
 3062 01e6 5E050000 		.4byte	.LASF29
 3063 01ea 01       		.byte	0x1
 3064 01eb 7602     		.2byte	0x276
 3065 01ed 00000000 		.4byte	.LFB40
 3066 01f1 DC000000 		.4byte	.LFE40-.LFB40
 3067 01f5 01       		.uleb128 0x1
 3068 01f6 9C       		.byte	0x9c
 3069 01f7 38020000 		.4byte	0x238
 3070 01fb 0F       		.uleb128 0xf
 3071 01fc 49020000 		.4byte	.LASF30
 3072 0200 01       		.byte	0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 96


 3073 0201 7602     		.2byte	0x276
 3074 0203 81000000 		.4byte	0x81
 3075 0207 02       		.uleb128 0x2
 3076 0208 91       		.byte	0x91
 3077 0209 64       		.sleb128 -28
 3078 020a 0C       		.uleb128 0xc
 3079 020b 04030000 		.4byte	.LASF31
 3080 020f 01       		.byte	0x1
 3081 0210 7802     		.2byte	0x278
 3082 0212 81000000 		.4byte	0x81
 3083 0216 02       		.uleb128 0x2
 3084 0217 91       		.byte	0x91
 3085 0218 74       		.sleb128 -12
 3086 0219 0C       		.uleb128 0xc
 3087 021a 76050000 		.4byte	.LASF32
 3088 021e 01       		.byte	0x1
 3089 021f 7902     		.2byte	0x279
 3090 0221 81000000 		.4byte	0x81
 3091 0225 02       		.uleb128 0x2
 3092 0226 91       		.byte	0x91
 3093 0227 6C       		.sleb128 -20
 3094 0228 0C       		.uleb128 0xc
 3095 0229 55050000 		.4byte	.LASF27
 3096 022d 01       		.byte	0x1
 3097 022e 7A02     		.2byte	0x27a
 3098 0230 81000000 		.4byte	0x81
 3099 0234 02       		.uleb128 0x2
 3100 0235 91       		.byte	0x91
 3101 0236 70       		.sleb128 -16
 3102 0237 00       		.byte	0
 3103 0238 0D       		.uleb128 0xd
 3104 0239 34030000 		.4byte	.LASF34
 3105 023d 01       		.byte	0x1
 3106 023e CB02     		.2byte	0x2cb
 3107 0240 00000000 		.4byte	.LFB41
 3108 0244 58000000 		.4byte	.LFE41-.LFB41
 3109 0248 01       		.uleb128 0x1
 3110 0249 9C       		.byte	0x9c
 3111 024a 10       		.uleb128 0x10
 3112 024b 8E080000 		.4byte	.LASF66
 3113 024f 01       		.byte	0x1
 3114 0250 F402     		.2byte	0x2f4
 3115 0252 81000000 		.4byte	0x81
 3116 0256 00000000 		.4byte	.LFB42
 3117 025a 1C000000 		.4byte	.LFE42-.LFB42
 3118 025e 01       		.uleb128 0x1
 3119 025f 9C       		.byte	0x9c
 3120 0260 11       		.uleb128 0x11
 3121 0261 DC020000 		.4byte	.LASF36
 3122 0265 01       		.byte	0x1
 3123 0266 1203     		.2byte	0x312
 3124 0268 76000000 		.4byte	0x76
 3125 026c 00000000 		.4byte	.LFB43
 3126 0270 1C000000 		.4byte	.LFE43-.LFB43
 3127 0274 01       		.uleb128 0x1
 3128 0275 9C       		.byte	0x9c
 3129 0276 8A020000 		.4byte	0x28a
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 97


 3130 027a 0F       		.uleb128 0xf
 3131 027b 7F030000 		.4byte	.LASF28
 3132 027f 01       		.byte	0x1
 3133 0280 1203     		.2byte	0x312
 3134 0282 81000000 		.4byte	0x81
 3135 0286 02       		.uleb128 0x2
 3136 0287 91       		.byte	0x91
 3137 0288 74       		.sleb128 -12
 3138 0289 00       		.byte	0
 3139 028a 12       		.uleb128 0x12
 3140 028b 380A0000 		.4byte	.LASF37
 3141 028f 01       		.byte	0x1
 3142 0290 2D03     		.2byte	0x32d
 3143 0292 00000000 		.4byte	.LFB44
 3144 0296 24000000 		.4byte	.LFE44-.LFB44
 3145 029a 01       		.uleb128 0x1
 3146 029b 9C       		.byte	0x9c
 3147 029c BF020000 		.4byte	0x2bf
 3148 02a0 0F       		.uleb128 0xf
 3149 02a1 7F030000 		.4byte	.LASF28
 3150 02a5 01       		.byte	0x1
 3151 02a6 2D03     		.2byte	0x32d
 3152 02a8 81000000 		.4byte	0x81
 3153 02ac 02       		.uleb128 0x2
 3154 02ad 91       		.byte	0x91
 3155 02ae 74       		.sleb128 -12
 3156 02af 0F       		.uleb128 0xf
 3157 02b0 70020000 		.4byte	.LASF38
 3158 02b4 01       		.byte	0x1
 3159 02b5 2D03     		.2byte	0x32d
 3160 02b7 76000000 		.4byte	0x76
 3161 02bb 02       		.uleb128 0x2
 3162 02bc 91       		.byte	0x91
 3163 02bd 72       		.sleb128 -14
 3164 02be 00       		.byte	0
 3165 02bf 12       		.uleb128 0x12
 3166 02c0 AA020000 		.4byte	.LASF39
 3167 02c4 01       		.byte	0x1
 3168 02c5 5703     		.2byte	0x357
 3169 02c7 00000000 		.4byte	.LFB45
 3170 02cb 20000000 		.4byte	.LFE45-.LFB45
 3171 02cf 01       		.uleb128 0x1
 3172 02d0 9C       		.byte	0x9c
 3173 02d1 F4020000 		.4byte	0x2f4
 3174 02d5 0F       		.uleb128 0xf
 3175 02d6 49020000 		.4byte	.LASF30
 3176 02da 01       		.byte	0x1
 3177 02db 5703     		.2byte	0x357
 3178 02dd 81000000 		.4byte	0x81
 3179 02e1 02       		.uleb128 0x2
 3180 02e2 91       		.byte	0x91
 3181 02e3 74       		.sleb128 -12
 3182 02e4 0F       		.uleb128 0xf
 3183 02e5 F3030000 		.4byte	.LASF40
 3184 02e9 01       		.byte	0x1
 3185 02ea 5703     		.2byte	0x357
 3186 02ec 81000000 		.4byte	0x81
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 98


 3187 02f0 02       		.uleb128 0x2
 3188 02f1 91       		.byte	0x91
 3189 02f2 70       		.sleb128 -16
 3190 02f3 00       		.byte	0
 3191 02f4 11       		.uleb128 0x11
 3192 02f5 15030000 		.4byte	.LASF41
 3193 02f9 01       		.byte	0x1
 3194 02fa 8003     		.2byte	0x380
 3195 02fc 81000000 		.4byte	0x81
 3196 0300 00000000 		.4byte	.LFB46
 3197 0304 1C000000 		.4byte	.LFE46-.LFB46
 3198 0308 01       		.uleb128 0x1
 3199 0309 9C       		.byte	0x9c
 3200 030a 1E030000 		.4byte	0x31e
 3201 030e 0F       		.uleb128 0xf
 3202 030f 49020000 		.4byte	.LASF30
 3203 0313 01       		.byte	0x1
 3204 0314 8003     		.2byte	0x380
 3205 0316 81000000 		.4byte	0x81
 3206 031a 02       		.uleb128 0x2
 3207 031b 91       		.byte	0x91
 3208 031c 74       		.sleb128 -12
 3209 031d 00       		.byte	0
 3210 031e 0B       		.uleb128 0xb
 3211 031f 36070000 		.4byte	.LASF42
 3212 0323 01       		.byte	0x1
 3213 0324 9B03     		.2byte	0x39b
 3214 0326 00000000 		.4byte	.LFB47
 3215 032a 26000000 		.4byte	.LFE47-.LFB47
 3216 032e 01       		.uleb128 0x1
 3217 032f 9C       		.byte	0x9c
 3218 0330 44030000 		.4byte	0x344
 3219 0334 0C       		.uleb128 0xc
 3220 0335 55050000 		.4byte	.LASF27
 3221 0339 01       		.byte	0x1
 3222 033a 9D03     		.2byte	0x39d
 3223 033c 81000000 		.4byte	0x81
 3224 0340 02       		.uleb128 0x2
 3225 0341 91       		.byte	0x91
 3226 0342 74       		.sleb128 -12
 3227 0343 00       		.byte	0
 3228 0344 0B       		.uleb128 0xb
 3229 0345 5E0A0000 		.4byte	.LASF43
 3230 0349 01       		.byte	0x1
 3231 034a 3904     		.2byte	0x439
 3232 034c 00000000 		.4byte	.LFB48
 3233 0350 CC000000 		.4byte	.LFE48-.LFB48
 3234 0354 01       		.uleb128 0x1
 3235 0355 9C       		.byte	0x9c
 3236 0356 B5030000 		.4byte	0x3b5
 3237 035a 0F       		.uleb128 0xf
 3238 035b 7F030000 		.4byte	.LASF28
 3239 035f 01       		.byte	0x1
 3240 0360 3904     		.2byte	0x439
 3241 0362 81000000 		.4byte	0x81
 3242 0366 02       		.uleb128 0x2
 3243 0367 91       		.byte	0x91
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 99


 3244 0368 5C       		.sleb128 -36
 3245 0369 0C       		.uleb128 0xc
 3246 036a B3010000 		.4byte	.LASF44
 3247 036e 01       		.byte	0x1
 3248 036f 3B04     		.2byte	0x43b
 3249 0371 6B000000 		.4byte	0x6b
 3250 0375 02       		.uleb128 0x2
 3251 0376 91       		.byte	0x91
 3252 0377 6B       		.sleb128 -21
 3253 0378 0C       		.uleb128 0xc
 3254 0379 58010000 		.4byte	.LASF45
 3255 037d 01       		.byte	0x1
 3256 037e 3C04     		.2byte	0x43c
 3257 0380 6B000000 		.4byte	0x6b
 3258 0384 02       		.uleb128 0x2
 3259 0385 91       		.byte	0x91
 3260 0386 6A       		.sleb128 -22
 3261 0387 0C       		.uleb128 0xc
 3262 0388 1F010000 		.4byte	.LASF46
 3263 038c 01       		.byte	0x1
 3264 038d 3D04     		.2byte	0x43d
 3265 038f 6B000000 		.4byte	0x6b
 3266 0393 02       		.uleb128 0x2
 3267 0394 91       		.byte	0x91
 3268 0395 69       		.sleb128 -23
 3269 0396 0C       		.uleb128 0xc
 3270 0397 99020000 		.4byte	.LASF47
 3271 039b 01       		.byte	0x1
 3272 039c 3E04     		.2byte	0x43e
 3273 039e 81000000 		.4byte	0x81
 3274 03a2 02       		.uleb128 0x2
 3275 03a3 91       		.byte	0x91
 3276 03a4 64       		.sleb128 -28
 3277 03a5 0C       		.uleb128 0xc
 3278 03a6 42080000 		.4byte	.LASF48
 3279 03aa 01       		.byte	0x1
 3280 03ab 3F04     		.2byte	0x43f
 3281 03ad 81000000 		.4byte	0x81
 3282 03b1 02       		.uleb128 0x2
 3283 03b2 91       		.byte	0x91
 3284 03b3 6C       		.sleb128 -20
 3285 03b4 00       		.byte	0
 3286 03b5 0B       		.uleb128 0xb
 3287 03b6 C6050000 		.4byte	.LASF49
 3288 03ba 01       		.byte	0x1
 3289 03bb 6E04     		.2byte	0x46e
 3290 03bd 00000000 		.4byte	.LFB49
 3291 03c1 20010000 		.4byte	.LFE49-.LFB49
 3292 03c5 01       		.uleb128 0x1
 3293 03c6 9C       		.byte	0x9c
 3294 03c7 44040000 		.4byte	0x444
 3295 03cb 0F       		.uleb128 0xf
 3296 03cc 7F030000 		.4byte	.LASF28
 3297 03d0 01       		.byte	0x1
 3298 03d1 6E04     		.2byte	0x46e
 3299 03d3 81000000 		.4byte	0x81
 3300 03d7 02       		.uleb128 0x2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 100


 3301 03d8 91       		.byte	0x91
 3302 03d9 54       		.sleb128 -44
 3303 03da 0C       		.uleb128 0xc
 3304 03db 1F010000 		.4byte	.LASF46
 3305 03df 01       		.byte	0x1
 3306 03e0 7004     		.2byte	0x470
 3307 03e2 6B000000 		.4byte	0x6b
 3308 03e6 02       		.uleb128 0x2
 3309 03e7 91       		.byte	0x91
 3310 03e8 61       		.sleb128 -31
 3311 03e9 0C       		.uleb128 0xc
 3312 03ea 99020000 		.4byte	.LASF47
 3313 03ee 01       		.byte	0x1
 3314 03ef 7104     		.2byte	0x471
 3315 03f1 81000000 		.4byte	0x81
 3316 03f5 02       		.uleb128 0x2
 3317 03f6 91       		.byte	0x91
 3318 03f7 5C       		.sleb128 -36
 3319 03f8 0C       		.uleb128 0xc
 3320 03f9 42080000 		.4byte	.LASF48
 3321 03fd 01       		.byte	0x1
 3322 03fe 7304     		.2byte	0x473
 3323 0400 81000000 		.4byte	0x81
 3324 0404 02       		.uleb128 0x2
 3325 0405 91       		.byte	0x91
 3326 0406 64       		.sleb128 -28
 3327 0407 0C       		.uleb128 0xc
 3328 0408 58010000 		.4byte	.LASF45
 3329 040c 01       		.byte	0x1
 3330 040d 7404     		.2byte	0x474
 3331 040f 6B000000 		.4byte	0x6b
 3332 0413 02       		.uleb128 0x2
 3333 0414 91       		.byte	0x91
 3334 0415 63       		.sleb128 -29
 3335 0416 0C       		.uleb128 0xc
 3336 0417 B3010000 		.4byte	.LASF44
 3337 041b 01       		.byte	0x1
 3338 041c 7504     		.2byte	0x475
 3339 041e 6B000000 		.4byte	0x6b
 3340 0422 02       		.uleb128 0x2
 3341 0423 91       		.byte	0x91
 3342 0424 62       		.sleb128 -30
 3343 0425 0C       		.uleb128 0xc
 3344 0426 D7010000 		.4byte	.LASF50
 3345 042a 01       		.byte	0x1
 3346 042b 7704     		.2byte	0x477
 3347 042d 81000000 		.4byte	0x81
 3348 0431 02       		.uleb128 0x2
 3349 0432 91       		.byte	0x91
 3350 0433 6C       		.sleb128 -20
 3351 0434 0C       		.uleb128 0xc
 3352 0435 C9020000 		.4byte	.LASF51
 3353 0439 01       		.byte	0x1
 3354 043a 7804     		.2byte	0x478
 3355 043c 81000000 		.4byte	0x81
 3356 0440 02       		.uleb128 0x2
 3357 0441 91       		.byte	0x91
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 101


 3358 0442 68       		.sleb128 -24
 3359 0443 00       		.byte	0
 3360 0444 0B       		.uleb128 0xb
 3361 0445 E9090000 		.4byte	.LASF52
 3362 0449 01       		.byte	0x1
 3363 044a BB04     		.2byte	0x4bb
 3364 044c 00000000 		.4byte	.LFB50
 3365 0450 6C000000 		.4byte	.LFE50-.LFB50
 3366 0454 01       		.uleb128 0x1
 3367 0455 9C       		.byte	0x9c
 3368 0456 97040000 		.4byte	0x497
 3369 045a 0F       		.uleb128 0xf
 3370 045b 540A0000 		.4byte	.LASF53
 3371 045f 01       		.byte	0x1
 3372 0460 BB04     		.2byte	0x4bb
 3373 0462 81000000 		.4byte	0x81
 3374 0466 02       		.uleb128 0x2
 3375 0467 91       		.byte	0x91
 3376 0468 64       		.sleb128 -28
 3377 0469 0C       		.uleb128 0xc
 3378 046a 2E0A0000 		.4byte	.LASF20
 3379 046e 01       		.byte	0x1
 3380 046f BD04     		.2byte	0x4bd
 3381 0471 6B000000 		.4byte	0x6b
 3382 0475 02       		.uleb128 0x2
 3383 0476 91       		.byte	0x91
 3384 0477 77       		.sleb128 -9
 3385 0478 0C       		.uleb128 0xc
 3386 0479 F7020000 		.4byte	.LASF54
 3387 047d 01       		.byte	0x1
 3388 047e C204     		.2byte	0x4c2
 3389 0480 81000000 		.4byte	0x81
 3390 0484 02       		.uleb128 0x2
 3391 0485 91       		.byte	0x91
 3392 0486 70       		.sleb128 -16
 3393 0487 0C       		.uleb128 0xc
 3394 0488 FE030000 		.4byte	.LASF55
 3395 048c 01       		.byte	0x1
 3396 048d C304     		.2byte	0x4c3
 3397 048f 81000000 		.4byte	0x81
 3398 0493 02       		.uleb128 0x2
 3399 0494 91       		.byte	0x91
 3400 0495 6C       		.sleb128 -20
 3401 0496 00       		.byte	0
 3402 0497 0B       		.uleb128 0xb
 3403 0498 62000000 		.4byte	.LASF56
 3404 049c 01       		.byte	0x1
 3405 049d 0405     		.2byte	0x504
 3406 049f 00000000 		.4byte	.LFB51
 3407 04a3 38000000 		.4byte	.LFE51-.LFB51
 3408 04a7 01       		.uleb128 0x1
 3409 04a8 9C       		.byte	0x9c
 3410 04a9 BD040000 		.4byte	0x4bd
 3411 04ad 0C       		.uleb128 0xc
 3412 04ae 99020000 		.4byte	.LASF47
 3413 04b2 01       		.byte	0x1
 3414 04b3 0605     		.2byte	0x506
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 102


 3415 04b5 81000000 		.4byte	0x81
 3416 04b9 02       		.uleb128 0x2
 3417 04ba 91       		.byte	0x91
 3418 04bb 74       		.sleb128 -12
 3419 04bc 00       		.byte	0
 3420 04bd 12       		.uleb128 0x12
 3421 04be 9C060000 		.4byte	.LASF57
 3422 04c2 01       		.byte	0x1
 3423 04c3 3805     		.2byte	0x538
 3424 04c5 00000000 		.4byte	.LFB52
 3425 04c9 5C000000 		.4byte	.LFE52-.LFB52
 3426 04cd 01       		.uleb128 0x1
 3427 04ce 9C       		.byte	0x9c
 3428 04cf 1F050000 		.4byte	0x51f
 3429 04d3 0F       		.uleb128 0xf
 3430 04d4 540A0000 		.4byte	.LASF53
 3431 04d8 01       		.byte	0x1
 3432 04d9 3805     		.2byte	0x538
 3433 04db 81000000 		.4byte	0x81
 3434 04df 02       		.uleb128 0x2
 3435 04e0 91       		.byte	0x91
 3436 04e1 6C       		.sleb128 -20
 3437 04e2 0F       		.uleb128 0xf
 3438 04e3 CF040000 		.4byte	.LASF58
 3439 04e7 01       		.byte	0x1
 3440 04e8 3805     		.2byte	0x538
 3441 04ea 81000000 		.4byte	0x81
 3442 04ee 02       		.uleb128 0x2
 3443 04ef 91       		.byte	0x91
 3444 04f0 68       		.sleb128 -24
 3445 04f1 0F       		.uleb128 0xf
 3446 04f2 87050000 		.4byte	.LASF59
 3447 04f6 01       		.byte	0x1
 3448 04f7 3805     		.2byte	0x538
 3449 04f9 81000000 		.4byte	0x81
 3450 04fd 02       		.uleb128 0x2
 3451 04fe 91       		.byte	0x91
 3452 04ff 64       		.sleb128 -28
 3453 0500 0C       		.uleb128 0xc
 3454 0501 B3010000 		.4byte	.LASF44
 3455 0505 01       		.byte	0x1
 3456 0506 3A05     		.2byte	0x53a
 3457 0508 81000000 		.4byte	0x81
 3458 050c 02       		.uleb128 0x2
 3459 050d 91       		.byte	0x91
 3460 050e 74       		.sleb128 -12
 3461 050f 0C       		.uleb128 0xc
 3462 0510 99020000 		.4byte	.LASF47
 3463 0514 01       		.byte	0x1
 3464 0515 3B05     		.2byte	0x53b
 3465 0517 81000000 		.4byte	0x81
 3466 051b 02       		.uleb128 0x2
 3467 051c 91       		.byte	0x91
 3468 051d 70       		.sleb128 -16
 3469 051e 00       		.byte	0
 3470 051f 0B       		.uleb128 0xb
 3471 0520 99070000 		.4byte	.LASF60
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 103


 3472 0524 01       		.byte	0x1
 3473 0525 5C05     		.2byte	0x55c
 3474 0527 00000000 		.4byte	.LFB53
 3475 052b 34010000 		.4byte	.LFE53-.LFB53
 3476 052f 01       		.uleb128 0x1
 3477 0530 9C       		.byte	0x9c
 3478 0531 81050000 		.4byte	0x581
 3479 0535 0F       		.uleb128 0xf
 3480 0536 7F030000 		.4byte	.LASF28
 3481 053a 01       		.byte	0x1
 3482 053b 5C05     		.2byte	0x55c
 3483 053d 81000000 		.4byte	0x81
 3484 0541 02       		.uleb128 0x2
 3485 0542 91       		.byte	0x91
 3486 0543 5C       		.sleb128 -36
 3487 0544 0C       		.uleb128 0xc
 3488 0545 49020000 		.4byte	.LASF30
 3489 0549 01       		.byte	0x1
 3490 054a 5E05     		.2byte	0x55e
 3491 054c 6B000000 		.4byte	0x6b
 3492 0550 02       		.uleb128 0x2
 3493 0551 91       		.byte	0x91
 3494 0552 6F       		.sleb128 -17
 3495 0553 0C       		.uleb128 0xc
 3496 0554 1F010000 		.4byte	.LASF46
 3497 0558 01       		.byte	0x1
 3498 0559 5F05     		.2byte	0x55f
 3499 055b 6B000000 		.4byte	0x6b
 3500 055f 02       		.uleb128 0x2
 3501 0560 91       		.byte	0x91
 3502 0561 63       		.sleb128 -29
 3503 0562 0C       		.uleb128 0xc
 3504 0563 DD090000 		.4byte	.LASF21
 3505 0567 01       		.byte	0x1
 3506 0568 6005     		.2byte	0x560
 3507 056a 81000000 		.4byte	0x81
 3508 056e 02       		.uleb128 0x2
 3509 056f 91       		.byte	0x91
 3510 0570 64       		.sleb128 -28
 3511 0571 0C       		.uleb128 0xc
 3512 0572 CC080000 		.4byte	.LASF61
 3513 0576 01       		.byte	0x1
 3514 0577 6105     		.2byte	0x561
 3515 0579 81000000 		.4byte	0x81
 3516 057d 02       		.uleb128 0x2
 3517 057e 91       		.byte	0x91
 3518 057f 68       		.sleb128 -24
 3519 0580 00       		.byte	0
 3520 0581 0B       		.uleb128 0xb
 3521 0582 3B040000 		.4byte	.LASF62
 3522 0586 01       		.byte	0x1
 3523 0587 1906     		.2byte	0x619
 3524 0589 00000000 		.4byte	.LFB54
 3525 058d 74000000 		.4byte	.LFE54-.LFB54
 3526 0591 01       		.uleb128 0x1
 3527 0592 9C       		.byte	0x9c
 3528 0593 B6050000 		.4byte	0x5b6
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 104


 3529 0597 0F       		.uleb128 0xf
 3530 0598 7F030000 		.4byte	.LASF28
 3531 059c 01       		.byte	0x1
 3532 059d 1906     		.2byte	0x619
 3533 059f 81000000 		.4byte	0x81
 3534 05a3 02       		.uleb128 0x2
 3535 05a4 91       		.byte	0x91
 3536 05a5 6C       		.sleb128 -20
 3537 05a6 0C       		.uleb128 0xc
 3538 05a7 DD090000 		.4byte	.LASF21
 3539 05ab 01       		.byte	0x1
 3540 05ac 1B06     		.2byte	0x61b
 3541 05ae 81000000 		.4byte	0x81
 3542 05b2 02       		.uleb128 0x2
 3543 05b3 91       		.byte	0x91
 3544 05b4 74       		.sleb128 -12
 3545 05b5 00       		.byte	0
 3546 05b6 12       		.uleb128 0x12
 3547 05b7 76020000 		.4byte	.LASF63
 3548 05bb 01       		.byte	0x1
 3549 05bc 7306     		.2byte	0x673
 3550 05be 00000000 		.4byte	.LFB55
 3551 05c2 80000000 		.4byte	.LFE55-.LFB55
 3552 05c6 01       		.uleb128 0x1
 3553 05c7 9C       		.byte	0x9c
 3554 05c8 FA050000 		.4byte	0x5fa
 3555 05cc 0F       		.uleb128 0xf
 3556 05cd CF040000 		.4byte	.LASF58
 3557 05d1 01       		.byte	0x1
 3558 05d2 7306     		.2byte	0x673
 3559 05d4 81000000 		.4byte	0x81
 3560 05d8 02       		.uleb128 0x2
 3561 05d9 91       		.byte	0x91
 3562 05da 64       		.sleb128 -28
 3563 05db 0F       		.uleb128 0xf
 3564 05dc 87050000 		.4byte	.LASF59
 3565 05e0 01       		.byte	0x1
 3566 05e1 7306     		.2byte	0x673
 3567 05e3 81000000 		.4byte	0x81
 3568 05e7 02       		.uleb128 0x2
 3569 05e8 91       		.byte	0x91
 3570 05e9 60       		.sleb128 -32
 3571 05ea 0C       		.uleb128 0xc
 3572 05eb DD090000 		.4byte	.LASF21
 3573 05ef 01       		.byte	0x1
 3574 05f0 7506     		.2byte	0x675
 3575 05f2 81000000 		.4byte	0x81
 3576 05f6 02       		.uleb128 0x2
 3577 05f7 91       		.byte	0x91
 3578 05f8 6C       		.sleb128 -20
 3579 05f9 00       		.byte	0
 3580 05fa 12       		.uleb128 0x12
 3581 05fb 4E080000 		.4byte	.LASF64
 3582 05ff 01       		.byte	0x1
 3583 0600 9606     		.2byte	0x696
 3584 0602 00000000 		.4byte	.LFB56
 3585 0606 30000000 		.4byte	.LFE56-.LFB56
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 105


 3586 060a 01       		.uleb128 0x1
 3587 060b 9C       		.byte	0x9c
 3588 060c 2F060000 		.4byte	0x62f
 3589 0610 0F       		.uleb128 0xf
 3590 0611 3A060000 		.4byte	.LASF65
 3591 0615 01       		.byte	0x1
 3592 0616 9606     		.2byte	0x696
 3593 0618 81000000 		.4byte	0x81
 3594 061c 02       		.uleb128 0x2
 3595 061d 91       		.byte	0x91
 3596 061e 6C       		.sleb128 -20
 3597 061f 0C       		.uleb128 0xc
 3598 0620 DD090000 		.4byte	.LASF21
 3599 0624 01       		.byte	0x1
 3600 0625 9806     		.2byte	0x698
 3601 0627 81000000 		.4byte	0x81
 3602 062b 02       		.uleb128 0x2
 3603 062c 91       		.byte	0x91
 3604 062d 74       		.sleb128 -12
 3605 062e 00       		.byte	0
 3606 062f 10       		.uleb128 0x10
 3607 0630 BF030000 		.4byte	.LASF67
 3608 0634 01       		.byte	0x1
 3609 0635 BA06     		.2byte	0x6ba
 3610 0637 81000000 		.4byte	0x81
 3611 063b 00000000 		.4byte	.LFB57
 3612 063f 2C000000 		.4byte	.LFE57-.LFB57
 3613 0643 01       		.uleb128 0x1
 3614 0644 9C       		.byte	0x9c
 3615 0645 11       		.uleb128 0x11
 3616 0646 01020000 		.4byte	.LASF68
 3617 064a 01       		.byte	0x1
 3618 064b D606     		.2byte	0x6d6
 3619 064d 81000000 		.4byte	0x81
 3620 0651 00000000 		.4byte	.LFB58
 3621 0655 44000000 		.4byte	.LFE58-.LFB58
 3622 0659 01       		.uleb128 0x1
 3623 065a 9C       		.byte	0x9c
 3624 065b 9C060000 		.4byte	0x69c
 3625 065f 0F       		.uleb128 0xf
 3626 0660 E6030000 		.4byte	.LASF69
 3627 0664 01       		.byte	0x1
 3628 0665 D606     		.2byte	0x6d6
 3629 0667 D0000000 		.4byte	0xd0
 3630 066b 02       		.uleb128 0x2
 3631 066c 91       		.byte	0x91
 3632 066d 6C       		.sleb128 -20
 3633 066e 0F       		.uleb128 0xf
 3634 066f 780A0000 		.4byte	.LASF70
 3635 0673 01       		.byte	0x1
 3636 0674 D606     		.2byte	0x6d6
 3637 0676 81000000 		.4byte	0x81
 3638 067a 02       		.uleb128 0x2
 3639 067b 91       		.byte	0x91
 3640 067c 68       		.sleb128 -24
 3641 067d 0C       		.uleb128 0xc
 3642 067e D5020000 		.4byte	.LASF71
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 106


 3643 0682 01       		.byte	0x1
 3644 0683 D806     		.2byte	0x6d8
 3645 0685 81000000 		.4byte	0x81
 3646 0689 02       		.uleb128 0x2
 3647 068a 91       		.byte	0x91
 3648 068b 74       		.sleb128 -12
 3649 068c 0C       		.uleb128 0xc
 3650 068d 47080000 		.4byte	.LASF72
 3651 0691 01       		.byte	0x1
 3652 0692 D906     		.2byte	0x6d9
 3653 0694 6B000000 		.4byte	0x6b
 3654 0698 02       		.uleb128 0x2
 3655 0699 91       		.byte	0x91
 3656 069a 73       		.sleb128 -13
 3657 069b 00       		.byte	0
 3658 069c 12       		.uleb128 0x12
 3659 069d EC000000 		.4byte	.LASF73
 3660 06a1 01       		.byte	0x1
 3661 06a2 0107     		.2byte	0x701
 3662 06a4 00000000 		.4byte	.LFB59
 3663 06a8 68000000 		.4byte	.LFE59-.LFB59
 3664 06ac 01       		.uleb128 0x1
 3665 06ad 9C       		.byte	0x9c
 3666 06ae FE060000 		.4byte	0x6fe
 3667 06b2 0F       		.uleb128 0xf
 3668 06b3 E6030000 		.4byte	.LASF69
 3669 06b7 01       		.byte	0x1
 3670 06b8 0107     		.2byte	0x701
 3671 06ba CA000000 		.4byte	0xca
 3672 06be 02       		.uleb128 0x2
 3673 06bf 91       		.byte	0x91
 3674 06c0 6C       		.sleb128 -20
 3675 06c1 0F       		.uleb128 0xf
 3676 06c2 780A0000 		.4byte	.LASF70
 3677 06c6 01       		.byte	0x1
 3678 06c7 0107     		.2byte	0x701
 3679 06c9 81000000 		.4byte	0x81
 3680 06cd 02       		.uleb128 0x2
 3681 06ce 91       		.byte	0x91
 3682 06cf 68       		.sleb128 -24
 3683 06d0 0F       		.uleb128 0xf
 3684 06d1 70020000 		.4byte	.LASF38
 3685 06d5 01       		.byte	0x1
 3686 06d6 0107     		.2byte	0x701
 3687 06d8 81000000 		.4byte	0x81
 3688 06dc 02       		.uleb128 0x2
 3689 06dd 91       		.byte	0x91
 3690 06de 64       		.sleb128 -28
 3691 06df 0C       		.uleb128 0xc
 3692 06e0 D5020000 		.4byte	.LASF71
 3693 06e4 01       		.byte	0x1
 3694 06e5 0307     		.2byte	0x703
 3695 06e7 81000000 		.4byte	0x81
 3696 06eb 02       		.uleb128 0x2
 3697 06ec 91       		.byte	0x91
 3698 06ed 74       		.sleb128 -12
 3699 06ee 0C       		.uleb128 0xc
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 107


 3700 06ef 47080000 		.4byte	.LASF72
 3701 06f3 01       		.byte	0x1
 3702 06f4 0407     		.2byte	0x704
 3703 06f6 6B000000 		.4byte	0x6b
 3704 06fa 02       		.uleb128 0x2
 3705 06fb 91       		.byte	0x91
 3706 06fc 73       		.sleb128 -13
 3707 06fd 00       		.byte	0
 3708 06fe 11       		.uleb128 0x11
 3709 06ff 50020000 		.4byte	.LASF74
 3710 0703 01       		.byte	0x1
 3711 0704 3307     		.2byte	0x733
 3712 0706 81000000 		.4byte	0x81
 3713 070a 00000000 		.4byte	.LFB60
 3714 070e 1C000000 		.4byte	.LFE60-.LFB60
 3715 0712 01       		.uleb128 0x1
 3716 0713 9C       		.byte	0x9c
 3717 0714 28070000 		.4byte	0x728
 3718 0718 0F       		.uleb128 0xf
 3719 0719 7F030000 		.4byte	.LASF28
 3720 071d 01       		.byte	0x1
 3721 071e 3307     		.2byte	0x733
 3722 0720 81000000 		.4byte	0x81
 3723 0724 02       		.uleb128 0x2
 3724 0725 91       		.byte	0x91
 3725 0726 74       		.sleb128 -12
 3726 0727 00       		.byte	0
 3727 0728 12       		.uleb128 0x12
 3728 0729 0D000000 		.4byte	.LASF75
 3729 072d 01       		.byte	0x1
 3730 072e 5207     		.2byte	0x752
 3731 0730 00000000 		.4byte	.LFB61
 3732 0734 20000000 		.4byte	.LFE61-.LFB61
 3733 0738 01       		.uleb128 0x1
 3734 0739 9C       		.byte	0x9c
 3735 073a 5D070000 		.4byte	0x75d
 3736 073e 0F       		.uleb128 0xf
 3737 073f 7F030000 		.4byte	.LASF28
 3738 0743 01       		.byte	0x1
 3739 0744 5207     		.2byte	0x752
 3740 0746 81000000 		.4byte	0x81
 3741 074a 02       		.uleb128 0x2
 3742 074b 91       		.byte	0x91
 3743 074c 74       		.sleb128 -12
 3744 074d 0F       		.uleb128 0xf
 3745 074e BD050000 		.4byte	.LASF76
 3746 0752 01       		.byte	0x1
 3747 0753 5207     		.2byte	0x752
 3748 0755 81000000 		.4byte	0x81
 3749 0759 02       		.uleb128 0x2
 3750 075a 91       		.byte	0x91
 3751 075b 70       		.sleb128 -16
 3752 075c 00       		.byte	0
 3753 075d 11       		.uleb128 0x11
 3754 075e 6A080000 		.4byte	.LASF77
 3755 0762 01       		.byte	0x1
 3756 0763 7207     		.2byte	0x772
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 108


 3757 0765 81000000 		.4byte	0x81
 3758 0769 00000000 		.4byte	.LFB62
 3759 076d 1C000000 		.4byte	.LFE62-.LFB62
 3760 0771 01       		.uleb128 0x1
 3761 0772 9C       		.byte	0x9c
 3762 0773 87070000 		.4byte	0x787
 3763 0777 0F       		.uleb128 0xf
 3764 0778 7F030000 		.4byte	.LASF28
 3765 077c 01       		.byte	0x1
 3766 077d 7207     		.2byte	0x772
 3767 077f 81000000 		.4byte	0x81
 3768 0783 02       		.uleb128 0x2
 3769 0784 91       		.byte	0x91
 3770 0785 74       		.sleb128 -12
 3771 0786 00       		.byte	0
 3772 0787 12       		.uleb128 0x12
 3773 0788 F0060000 		.4byte	.LASF78
 3774 078c 01       		.byte	0x1
 3775 078d 9107     		.2byte	0x791
 3776 078f 00000000 		.4byte	.LFB63
 3777 0793 20000000 		.4byte	.LFE63-.LFB63
 3778 0797 01       		.uleb128 0x1
 3779 0798 9C       		.byte	0x9c
 3780 0799 BC070000 		.4byte	0x7bc
 3781 079d 0F       		.uleb128 0xf
 3782 079e 7F030000 		.4byte	.LASF28
 3783 07a2 01       		.byte	0x1
 3784 07a3 9107     		.2byte	0x791
 3785 07a5 81000000 		.4byte	0x81
 3786 07a9 02       		.uleb128 0x2
 3787 07aa 91       		.byte	0x91
 3788 07ab 74       		.sleb128 -12
 3789 07ac 0F       		.uleb128 0xf
 3790 07ad F7080000 		.4byte	.LASF79
 3791 07b1 01       		.byte	0x1
 3792 07b2 9107     		.2byte	0x791
 3793 07b4 81000000 		.4byte	0x81
 3794 07b8 02       		.uleb128 0x2
 3795 07b9 91       		.byte	0x91
 3796 07ba 70       		.sleb128 -16
 3797 07bb 00       		.byte	0
 3798 07bc 11       		.uleb128 0x11
 3799 07bd 04090000 		.4byte	.LASF80
 3800 07c1 01       		.byte	0x1
 3801 07c2 B007     		.2byte	0x7b0
 3802 07c4 81000000 		.4byte	0x81
 3803 07c8 00000000 		.4byte	.LFB64
 3804 07cc 1C000000 		.4byte	.LFE64-.LFB64
 3805 07d0 01       		.uleb128 0x1
 3806 07d1 9C       		.byte	0x9c
 3807 07d2 E6070000 		.4byte	0x7e6
 3808 07d6 0F       		.uleb128 0xf
 3809 07d7 7F030000 		.4byte	.LASF28
 3810 07db 01       		.byte	0x1
 3811 07dc B007     		.2byte	0x7b0
 3812 07de 81000000 		.4byte	0x81
 3813 07e2 02       		.uleb128 0x2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 109


 3814 07e3 91       		.byte	0x91
 3815 07e4 74       		.sleb128 -12
 3816 07e5 00       		.byte	0
 3817 07e6 12       		.uleb128 0x12
 3818 07e7 BE090000 		.4byte	.LASF81
 3819 07eb 01       		.byte	0x1
 3820 07ec CB07     		.2byte	0x7cb
 3821 07ee 00000000 		.4byte	.LFB65
 3822 07f2 20000000 		.4byte	.LFE65-.LFB65
 3823 07f6 01       		.uleb128 0x1
 3824 07f7 9C       		.byte	0x9c
 3825 07f8 1B080000 		.4byte	0x81b
 3826 07fc 0F       		.uleb128 0xf
 3827 07fd 7F030000 		.4byte	.LASF28
 3828 0801 01       		.byte	0x1
 3829 0802 CB07     		.2byte	0x7cb
 3830 0804 81000000 		.4byte	0x81
 3831 0808 02       		.uleb128 0x2
 3832 0809 91       		.byte	0x91
 3833 080a 74       		.sleb128 -12
 3834 080b 0F       		.uleb128 0xf
 3835 080c 8C070000 		.4byte	.LASF82
 3836 0810 01       		.byte	0x1
 3837 0811 CB07     		.2byte	0x7cb
 3838 0813 81000000 		.4byte	0x81
 3839 0817 02       		.uleb128 0x2
 3840 0818 91       		.byte	0x91
 3841 0819 70       		.sleb128 -16
 3842 081a 00       		.byte	0
 3843 081b 11       		.uleb128 0x11
 3844 081c 38090000 		.4byte	.LASF83
 3845 0820 01       		.byte	0x1
 3846 0821 E807     		.2byte	0x7e8
 3847 0823 81000000 		.4byte	0x81
 3848 0827 00000000 		.4byte	.LFB66
 3849 082b 1C000000 		.4byte	.LFE66-.LFB66
 3850 082f 01       		.uleb128 0x1
 3851 0830 9C       		.byte	0x9c
 3852 0831 45080000 		.4byte	0x845
 3853 0835 0F       		.uleb128 0xf
 3854 0836 7F030000 		.4byte	.LASF28
 3855 083a 01       		.byte	0x1
 3856 083b E807     		.2byte	0x7e8
 3857 083d 81000000 		.4byte	0x81
 3858 0841 02       		.uleb128 0x2
 3859 0842 91       		.byte	0x91
 3860 0843 74       		.sleb128 -12
 3861 0844 00       		.byte	0
 3862 0845 12       		.uleb128 0x12
 3863 0846 5E030000 		.4byte	.LASF84
 3864 084a 01       		.byte	0x1
 3865 084b 0508     		.2byte	0x805
 3866 084d 00000000 		.4byte	.LFB67
 3867 0851 20000000 		.4byte	.LFE67-.LFB67
 3868 0855 01       		.uleb128 0x1
 3869 0856 9C       		.byte	0x9c
 3870 0857 7A080000 		.4byte	0x87a
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 110


 3871 085b 0F       		.uleb128 0xf
 3872 085c 7F030000 		.4byte	.LASF28
 3873 0860 01       		.byte	0x1
 3874 0861 0508     		.2byte	0x805
 3875 0863 81000000 		.4byte	0x81
 3876 0867 02       		.uleb128 0x2
 3877 0868 91       		.byte	0x91
 3878 0869 74       		.sleb128 -12
 3879 086a 0F       		.uleb128 0xf
 3880 086b 5E070000 		.4byte	.LASF85
 3881 086f 01       		.byte	0x1
 3882 0870 0508     		.2byte	0x805
 3883 0872 81000000 		.4byte	0x81
 3884 0876 02       		.uleb128 0x2
 3885 0877 91       		.byte	0x91
 3886 0878 70       		.sleb128 -16
 3887 0879 00       		.byte	0
 3888 087a 10       		.uleb128 0x10
 3889 087b A4090000 		.4byte	.LASF86
 3890 087f 01       		.byte	0x1
 3891 0880 2208     		.2byte	0x822
 3892 0882 81000000 		.4byte	0x81
 3893 0886 00000000 		.4byte	.LFB68
 3894 088a 20000000 		.4byte	.LFE68-.LFB68
 3895 088e 01       		.uleb128 0x1
 3896 088f 9C       		.byte	0x9c
 3897 0890 12       		.uleb128 0x12
 3898 0891 E7010000 		.4byte	.LASF87
 3899 0895 01       		.byte	0x1
 3900 0896 4008     		.2byte	0x840
 3901 0898 00000000 		.4byte	.LFB69
 3902 089c 3C000000 		.4byte	.LFE69-.LFB69
 3903 08a0 01       		.uleb128 0x1
 3904 08a1 9C       		.byte	0x9c
 3905 08a2 B6080000 		.4byte	0x8b6
 3906 08a6 0F       		.uleb128 0xf
 3907 08a7 14070000 		.4byte	.LASF88
 3908 08ab 01       		.byte	0x1
 3909 08ac 4008     		.2byte	0x840
 3910 08ae 81000000 		.4byte	0x81
 3911 08b2 02       		.uleb128 0x2
 3912 08b3 91       		.byte	0x91
 3913 08b4 74       		.sleb128 -12
 3914 08b5 00       		.byte	0
 3915 08b6 0E       		.uleb128 0xe
 3916 08b7 05010000 		.4byte	.LASF89
 3917 08bb 01       		.byte	0x1
 3918 08bc 6808     		.2byte	0x868
 3919 08be 76000000 		.4byte	0x76
 3920 08c2 00000000 		.4byte	.LFB70
 3921 08c6 4E000000 		.4byte	.LFE70-.LFB70
 3922 08ca 01       		.uleb128 0x1
 3923 08cb 9C       		.byte	0x9c
 3924 08cc FE080000 		.4byte	0x8fe
 3925 08d0 0F       		.uleb128 0xf
 3926 08d1 7F030000 		.4byte	.LASF28
 3927 08d5 01       		.byte	0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 111


 3928 08d6 6808     		.2byte	0x868
 3929 08d8 81000000 		.4byte	0x81
 3930 08dc 02       		.uleb128 0x2
 3931 08dd 91       		.byte	0x91
 3932 08de 6C       		.sleb128 -20
 3933 08df 0C       		.uleb128 0xc
 3934 08e0 54030000 		.4byte	.LASF90
 3935 08e4 01       		.byte	0x1
 3936 08e5 6A08     		.2byte	0x86a
 3937 08e7 81000000 		.4byte	0x81
 3938 08eb 02       		.uleb128 0x2
 3939 08ec 91       		.byte	0x91
 3940 08ed 74       		.sleb128 -12
 3941 08ee 0C       		.uleb128 0xc
 3942 08ef AC010000 		.4byte	.LASF91
 3943 08f3 01       		.byte	0x1
 3944 08f4 6B08     		.2byte	0x86b
 3945 08f6 81000000 		.4byte	0x81
 3946 08fa 02       		.uleb128 0x2
 3947 08fb 91       		.byte	0x91
 3948 08fc 70       		.sleb128 -16
 3949 08fd 00       		.byte	0
 3950 08fe 12       		.uleb128 0x12
 3951 08ff 87010000 		.4byte	.LASF92
 3952 0903 01       		.byte	0x1
 3953 0904 D208     		.2byte	0x8d2
 3954 0906 00000000 		.4byte	.LFB71
 3955 090a 20000000 		.4byte	.LFE71-.LFB71
 3956 090e 01       		.uleb128 0x1
 3957 090f 9C       		.byte	0x9c
 3958 0910 33090000 		.4byte	0x933
 3959 0914 0F       		.uleb128 0xf
 3960 0915 7F030000 		.4byte	.LASF28
 3961 0919 01       		.byte	0x1
 3962 091a D208     		.2byte	0x8d2
 3963 091c 81000000 		.4byte	0x81
 3964 0920 02       		.uleb128 0x2
 3965 0921 91       		.byte	0x91
 3966 0922 74       		.sleb128 -12
 3967 0923 0F       		.uleb128 0xf
 3968 0924 C9020000 		.4byte	.LASF51
 3969 0928 01       		.byte	0x1
 3970 0929 D208     		.2byte	0x8d2
 3971 092b 81000000 		.4byte	0x81
 3972 092f 02       		.uleb128 0x2
 3973 0930 91       		.byte	0x91
 3974 0931 70       		.sleb128 -16
 3975 0932 00       		.byte	0
 3976 0933 12       		.uleb128 0x12
 3977 0934 68060000 		.4byte	.LASF93
 3978 0938 01       		.byte	0x1
 3979 0939 EF08     		.2byte	0x8ef
 3980 093b 00000000 		.4byte	.LFB72
 3981 093f 9C000000 		.4byte	.LFE72-.LFB72
 3982 0943 01       		.uleb128 0x1
 3983 0944 9C       		.byte	0x9c
 3984 0945 B3090000 		.4byte	0x9b3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 112


 3985 0949 0F       		.uleb128 0xf
 3986 094a 33010000 		.4byte	.LASF94
 3987 094e 01       		.byte	0x1
 3988 094f EF08     		.2byte	0x8ef
 3989 0951 81000000 		.4byte	0x81
 3990 0955 02       		.uleb128 0x2
 3991 0956 91       		.byte	0x91
 3992 0957 5C       		.sleb128 -36
 3993 0958 0F       		.uleb128 0xf
 3994 0959 89090000 		.4byte	.LASF95
 3995 095d 01       		.byte	0x1
 3996 095e EF08     		.2byte	0x8ef
 3997 0960 CA000000 		.4byte	0xca
 3998 0964 02       		.uleb128 0x2
 3999 0965 91       		.byte	0x91
 4000 0966 58       		.sleb128 -40
 4001 0967 0C       		.uleb128 0xc
 4002 0968 51040000 		.4byte	.LASF96
 4003 096c 01       		.byte	0x1
 4004 096d F108     		.2byte	0x8f1
 4005 096f 81000000 		.4byte	0x81
 4006 0973 02       		.uleb128 0x2
 4007 0974 91       		.byte	0x91
 4008 0975 74       		.sleb128 -12
 4009 0976 0C       		.uleb128 0xc
 4010 0977 50070000 		.4byte	.LASF97
 4011 097b 01       		.byte	0x1
 4012 097c F208     		.2byte	0x8f2
 4013 097e 81000000 		.4byte	0x81
 4014 0982 02       		.uleb128 0x2
 4015 0983 91       		.byte	0x91
 4016 0984 70       		.sleb128 -16
 4017 0985 0C       		.uleb128 0xc
 4018 0986 76050000 		.4byte	.LASF32
 4019 098a 01       		.byte	0x1
 4020 098b F308     		.2byte	0x8f3
 4021 098d 81000000 		.4byte	0x81
 4022 0991 02       		.uleb128 0x2
 4023 0992 91       		.byte	0x91
 4024 0993 64       		.sleb128 -28
 4025 0994 0C       		.uleb128 0xc
 4026 0995 04030000 		.4byte	.LASF31
 4027 0999 01       		.byte	0x1
 4028 099a F408     		.2byte	0x8f4
 4029 099c 81000000 		.4byte	0x81
 4030 09a0 02       		.uleb128 0x2
 4031 09a1 91       		.byte	0x91
 4032 09a2 68       		.sleb128 -24
 4033 09a3 0C       		.uleb128 0xc
 4034 09a4 92050000 		.4byte	.LASF98
 4035 09a8 01       		.byte	0x1
 4036 09a9 F508     		.2byte	0x8f5
 4037 09ab 81000000 		.4byte	0x81
 4038 09af 02       		.uleb128 0x2
 4039 09b0 91       		.byte	0x91
 4040 09b1 6C       		.sleb128 -20
 4041 09b2 00       		.byte	0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 113


 4042 09b3 13       		.uleb128 0x13
 4043 09b4 6C070000 		.4byte	.LASF99
 4044 09b8 01       		.byte	0x1
 4045 09b9 23       		.byte	0x23
 4046 09ba 6B000000 		.4byte	0x6b
 4047 09be 05       		.uleb128 0x5
 4048 09bf 03       		.byte	0x3
 4049 09c0 00000000 		.4byte	CapSense_CSD_lowLevelTuningDone
 4050 09c4 14       		.uleb128 0x14
 4051 09c5 6B000000 		.4byte	0x6b
 4052 09c9 D4090000 		.4byte	0x9d4
 4053 09cd 15       		.uleb128 0x15
 4054 09ce C3000000 		.4byte	0xc3
 4055 09d2 01       		.byte	0x1
 4056 09d3 00       		.byte	0
 4057 09d4 13       		.uleb128 0x13
 4058 09d5 00000000 		.4byte	.LASF100
 4059 09d9 01       		.byte	0x1
 4060 09da 24       		.byte	0x24
 4061 09db C4090000 		.4byte	0x9c4
 4062 09df 05       		.uleb128 0x5
 4063 09e0 03       		.byte	0x3
 4064 09e1 00000000 		.4byte	scanSpeedTbl
 4065 09e5 13       		.uleb128 0x13
 4066 09e6 CE060000 		.4byte	.LASF101
 4067 09ea 01       		.byte	0x1
 4068 09eb 28       		.byte	0x28
 4069 09ec 6B000000 		.4byte	0x6b
 4070 09f0 05       		.uleb128 0x5
 4071 09f1 03       		.byte	0x3
 4072 09f2 00000000 		.4byte	CapSense_CSD_prescalersTuningDone
 4073 09f6 13       		.uleb128 0x13
 4074 09f7 B5040000 		.4byte	.LASF102
 4075 09fb 01       		.byte	0x1
 4076 09fc 2C       		.byte	0x2c
 4077 09fd AD000000 		.4byte	0xad
 4078 0a01 05       		.uleb128 0x5
 4079 0a02 03       		.byte	0x3
 4080 0a03 00000000 		.4byte	CapSense_CSD_csdStatusVar
 4081 0a07 13       		.uleb128 0x13
 4082 0a08 9C040000 		.4byte	.LASF103
 4083 0a0c 01       		.byte	0x1
 4084 0a0d 2D       		.byte	0x2d
 4085 0a0e AD000000 		.4byte	0xad
 4086 0a12 05       		.uleb128 0x5
 4087 0a13 03       		.byte	0x3
 4088 0a14 00000000 		.4byte	CapSense_CSD_sensorIndex
 4089 0a18 14       		.uleb128 0x14
 4090 0a19 76000000 		.4byte	0x76
 4091 0a1d 280A0000 		.4byte	0xa28
 4092 0a21 15       		.uleb128 0x15
 4093 0a22 C3000000 		.4byte	0xc3
 4094 0a26 0B       		.byte	0xb
 4095 0a27 00       		.byte	0
 4096 0a28 13       		.uleb128 0x13
 4097 0a29 C0010000 		.4byte	.LASF104
 4098 0a2d 01       		.byte	0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 114


 4099 0a2e 30       		.byte	0x30
 4100 0a2f 180A0000 		.4byte	0xa18
 4101 0a33 05       		.uleb128 0x5
 4102 0a34 03       		.byte	0x3
 4103 0a35 00000000 		.4byte	CapSense_CSD_sensorRaw
 4104 0a39 14       		.uleb128 0x14
 4105 0a3a 6B000000 		.4byte	0x6b
 4106 0a3e 490A0000 		.4byte	0xa49
 4107 0a42 15       		.uleb128 0x15
 4108 0a43 C3000000 		.4byte	0xc3
 4109 0a47 0B       		.byte	0xb
 4110 0a48 00       		.byte	0
 4111 0a49 13       		.uleb128 0x13
 4112 0a4a 5F040000 		.4byte	.LASF105
 4113 0a4e 01       		.byte	0x1
 4114 0a4f 3A       		.byte	0x3a
 4115 0a50 390A0000 		.4byte	0xa39
 4116 0a54 05       		.uleb128 0x5
 4117 0a55 03       		.byte	0x3
 4118 0a56 00000000 		.4byte	CapSense_CSD_unscannedSnsDriveMode
 4119 0a5a 13       		.uleb128 0x13
 4120 0a5b 59090000 		.4byte	.LASF106
 4121 0a5f 01       		.byte	0x1
 4122 0a60 3D       		.byte	0x3d
 4123 0a61 C4090000 		.4byte	0x9c4
 4124 0a65 05       		.uleb128 0x5
 4125 0a66 03       		.byte	0x3
 4126 0a67 00000000 		.4byte	CapSense_CSD_sensorEnableMaskBackup
 4127 0a6b 13       		.uleb128 0x13
 4128 0a6c 9F050000 		.4byte	.LASF107
 4129 0a70 01       		.byte	0x1
 4130 0a71 40       		.byte	0x40
 4131 0a72 C4090000 		.4byte	0x9c4
 4132 0a76 05       		.uleb128 0x5
 4133 0a77 03       		.byte	0x3
 4134 0a78 00000000 		.4byte	CapSense_CSD_sensorEnableMask
 4135 0a7c 13       		.uleb128 0x13
 4136 0a7d 87000000 		.4byte	.LASF108
 4137 0a81 01       		.byte	0x1
 4138 0a82 7F       		.byte	0x7f
 4139 0a83 390A0000 		.4byte	0xa39
 4140 0a87 05       		.uleb128 0x5
 4141 0a88 03       		.byte	0x3
 4142 0a89 00000000 		.4byte	CapSense_CSD_modulationIDAC
 4143 0a8d 13       		.uleb128 0x13
 4144 0a8e EB050000 		.4byte	.LASF109
 4145 0a92 01       		.byte	0x1
 4146 0a93 80       		.byte	0x80
 4147 0a94 390A0000 		.4byte	0xa39
 4148 0a98 05       		.uleb128 0x5
 4149 0a99 03       		.byte	0x3
 4150 0a9a 00000000 		.4byte	CapSense_CSD_compensationIDAC
 4151 0a9e 14       		.uleb128 0x14
 4152 0a9f 81000000 		.4byte	0x81
 4153 0aa3 AE0A0000 		.4byte	0xaae
 4154 0aa7 15       		.uleb128 0x15
 4155 0aa8 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 115


 4156 0aac 00       		.byte	0
 4157 0aad 00       		.byte	0
 4158 0aae 13       		.uleb128 0x13
 4159 0aaf 44000000 		.4byte	.LASF110
 4160 0ab3 01       		.byte	0x1
 4161 0ab4 82       		.byte	0x82
 4162 0ab5 9E0A0000 		.4byte	0xa9e
 4163 0ab9 05       		.uleb128 0x5
 4164 0aba 03       		.byte	0x3
 4165 0abb 00000000 		.4byte	CapSense_CSD_widgetResolution
 4166 0abf 13       		.uleb128 0x13
 4167 0ac0 B0000000 		.4byte	.LASF111
 4168 0ac4 01       		.byte	0x1
 4169 0ac5 86       		.byte	0x86
 4170 0ac6 390A0000 		.4byte	0xa39
 4171 0aca 05       		.uleb128 0x5
 4172 0acb 03       		.byte	0x3
 4173 0acc 00000000 		.4byte	CapSense_CSD_senseClkDividerVal
 4174 0ad0 13       		.uleb128 0x13
 4175 0ad1 66010000 		.4byte	.LASF112
 4176 0ad5 01       		.byte	0x1
 4177 0ad6 87       		.byte	0x87
 4178 0ad7 390A0000 		.4byte	0xa39
 4179 0adb 05       		.uleb128 0x5
 4180 0adc 03       		.byte	0x3
 4181 0add 00000000 		.4byte	CapSense_CSD_sampleClkDividerVal
 4182 0ae1 13       		.uleb128 0x13
 4183 0ae2 3E010000 		.4byte	.LASF113
 4184 0ae6 01       		.byte	0x1
 4185 0ae7 89       		.byte	0x89
 4186 0ae8 F20A0000 		.4byte	0xaf2
 4187 0aec 05       		.uleb128 0x5
 4188 0aed 03       		.byte	0x3
 4189 0aee 00000000 		.4byte	CapSense_CSD_widgetNumber
 4190 0af2 08       		.uleb128 0x8
 4191 0af3 390A0000 		.4byte	0xa39
 4192 0af7 14       		.uleb128 0x14
 4193 0af8 070B0000 		.4byte	0xb07
 4194 0afc 070B0000 		.4byte	0xb07
 4195 0b00 15       		.uleb128 0x15
 4196 0b01 C3000000 		.4byte	0xc3
 4197 0b05 04       		.byte	0x4
 4198 0b06 00       		.byte	0
 4199 0b07 07       		.uleb128 0x7
 4200 0b08 04       		.byte	0x4
 4201 0b09 0D0B0000 		.4byte	0xb0d
 4202 0b0d 06       		.uleb128 0x6
 4203 0b0e 48000000 		.4byte	0x48
 4204 0b12 13       		.uleb128 0x13
 4205 0b13 170A0000 		.4byte	.LASF114
 4206 0b17 01       		.byte	0x1
 4207 0b18 8F       		.byte	0x8f
 4208 0b19 230B0000 		.4byte	0xb23
 4209 0b1d 05       		.uleb128 0x5
 4210 0b1e 03       		.byte	0x3
 4211 0b1f 00000000 		.4byte	CapSense_CSD_prtSelTbl
 4212 0b23 08       		.uleb128 0x8
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 116


 4213 0b24 F70A0000 		.4byte	0xaf7
 4214 0b28 13       		.uleb128 0x13
 4215 0b29 2D000000 		.4byte	.LASF115
 4216 0b2d 01       		.byte	0x1
 4217 0b2e 9C       		.byte	0x9c
 4218 0b2f 390B0000 		.4byte	0xb39
 4219 0b33 05       		.uleb128 0x5
 4220 0b34 03       		.byte	0x3
 4221 0b35 00000000 		.4byte	CapSense_CSD_prtCfgTbl
 4222 0b39 08       		.uleb128 0x8
 4223 0b3a F70A0000 		.4byte	0xaf7
 4224 0b3e 13       		.uleb128 0x13
 4225 0b3f 86060000 		.4byte	.LASF116
 4226 0b43 01       		.byte	0x1
 4227 0b44 A9       		.byte	0xa9
 4228 0b45 4F0B0000 		.4byte	0xb4f
 4229 0b49 05       		.uleb128 0x5
 4230 0b4a 03       		.byte	0x3
 4231 0b4b 00000000 		.4byte	CapSense_CSD_prtDRTbl
 4232 0b4f 08       		.uleb128 0x8
 4233 0b50 F70A0000 		.4byte	0xaf7
 4234 0b54 14       		.uleb128 0x14
 4235 0b55 070B0000 		.4byte	0xb07
 4236 0b59 640B0000 		.4byte	0xb64
 4237 0b5d 15       		.uleb128 0x15
 4238 0b5e C3000000 		.4byte	0xc3
 4239 0b62 0B       		.byte	0xb
 4240 0b63 00       		.byte	0
 4241 0b64 13       		.uleb128 0x13
 4242 0b65 23090000 		.4byte	.LASF117
 4243 0b69 01       		.byte	0x1
 4244 0b6a 43       		.byte	0x43
 4245 0b6b 540B0000 		.4byte	0xb54
 4246 0b6f 05       		.uleb128 0x5
 4247 0b70 03       		.byte	0x3
 4248 0b71 00000000 		.4byte	CapSense_CSD_pcTable
 4249 0b75 13       		.uleb128 0x13
 4250 0b76 19040000 		.4byte	.LASF118
 4251 0b7a 01       		.byte	0x1
 4252 0b7b 52       		.byte	0x52
 4253 0b7c 860B0000 		.4byte	0xb86
 4254 0b80 05       		.uleb128 0x5
 4255 0b81 03       		.byte	0x3
 4256 0b82 00000000 		.4byte	CapSense_CSD_portTable
 4257 0b86 08       		.uleb128 0x8
 4258 0b87 390A0000 		.4byte	0xa39
 4259 0b8b 14       		.uleb128 0x14
 4260 0b8c 81000000 		.4byte	0x81
 4261 0b90 9B0B0000 		.4byte	0xb9b
 4262 0b94 15       		.uleb128 0x15
 4263 0b95 C3000000 		.4byte	0xc3
 4264 0b99 0B       		.byte	0xb
 4265 0b9a 00       		.byte	0
 4266 0b9b 13       		.uleb128 0x13
 4267 0b9c 86030000 		.4byte	.LASF119
 4268 0ba0 01       		.byte	0x1
 4269 0ba1 61       		.byte	0x61
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 117


 4270 0ba2 AC0B0000 		.4byte	0xbac
 4271 0ba6 05       		.uleb128 0x5
 4272 0ba7 03       		.byte	0x3
 4273 0ba8 00000000 		.4byte	CapSense_CSD_maskTable
 4274 0bac 08       		.uleb128 0x8
 4275 0bad 8B0B0000 		.4byte	0xb8b
 4276 0bb1 13       		.uleb128 0x13
 4277 0bb2 DE080000 		.4byte	.LASF120
 4278 0bb6 01       		.byte	0x1
 4279 0bb7 70       		.byte	0x70
 4280 0bb8 C20B0000 		.4byte	0xbc2
 4281 0bbc 05       		.uleb128 0x5
 4282 0bbd 03       		.byte	0x3
 4283 0bbe 00000000 		.4byte	CapSense_CSD_pinShiftTbl
 4284 0bc2 08       		.uleb128 0x8
 4285 0bc3 390A0000 		.4byte	0xa39
 4286 0bc7 14       		.uleb128 0x14
 4287 0bc8 6B000000 		.4byte	0x6b
 4288 0bcc D70B0000 		.4byte	0xbd7
 4289 0bd0 15       		.uleb128 0x15
 4290 0bd1 C3000000 		.4byte	0xc3
 4291 0bd5 00       		.byte	0
 4292 0bd6 00       		.byte	0
 4293 0bd7 16       		.uleb128 0x16
 4294 0bd8 28080000 		.4byte	.LASF121
 4295 0bdc 03       		.byte	0x3
 4296 0bdd 3A01     		.2byte	0x13a
 4297 0bdf E30B0000 		.4byte	0xbe3
 4298 0be3 08       		.uleb128 0x8
 4299 0be4 C70B0000 		.4byte	0xbc7
 4300 0be8 16       		.uleb128 0x16
 4301 0be9 9D030000 		.4byte	.LASF122
 4302 0bed 03       		.byte	0x3
 4303 0bee 3B01     		.2byte	0x13b
 4304 0bf0 F40B0000 		.4byte	0xbf4
 4305 0bf4 08       		.uleb128 0x8
 4306 0bf5 C70B0000 		.4byte	0xbc7
 4307 0bf9 13       		.uleb128 0x13
 4308 0bfa 24060000 		.4byte	.LASF123
 4309 0bfe 01       		.byte	0x1
 4310 0bff 36       		.byte	0x36
 4311 0c00 6B000000 		.4byte	0x6b
 4312 0c04 05       		.uleb128 0x5
 4313 0c05 03       		.byte	0x3
 4314 0c06 00000000 		.4byte	CapSense_CSD_csdTrim1
 4315 0c0a 00       		.byte	0
 4316              		.section	.debug_abbrev,"",%progbits
 4317              	.Ldebug_abbrev0:
 4318 0000 01       		.uleb128 0x1
 4319 0001 11       		.uleb128 0x11
 4320 0002 01       		.byte	0x1
 4321 0003 25       		.uleb128 0x25
 4322 0004 0E       		.uleb128 0xe
 4323 0005 13       		.uleb128 0x13
 4324 0006 0B       		.uleb128 0xb
 4325 0007 03       		.uleb128 0x3
 4326 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 118


 4327 0009 1B       		.uleb128 0x1b
 4328 000a 0E       		.uleb128 0xe
 4329 000b 55       		.uleb128 0x55
 4330 000c 17       		.uleb128 0x17
 4331 000d 11       		.uleb128 0x11
 4332 000e 01       		.uleb128 0x1
 4333 000f 10       		.uleb128 0x10
 4334 0010 17       		.uleb128 0x17
 4335 0011 00       		.byte	0
 4336 0012 00       		.byte	0
 4337 0013 02       		.uleb128 0x2
 4338 0014 24       		.uleb128 0x24
 4339 0015 00       		.byte	0
 4340 0016 0B       		.uleb128 0xb
 4341 0017 0B       		.uleb128 0xb
 4342 0018 3E       		.uleb128 0x3e
 4343 0019 0B       		.uleb128 0xb
 4344 001a 03       		.uleb128 0x3
 4345 001b 0E       		.uleb128 0xe
 4346 001c 00       		.byte	0
 4347 001d 00       		.byte	0
 4348 001e 03       		.uleb128 0x3
 4349 001f 24       		.uleb128 0x24
 4350 0020 00       		.byte	0
 4351 0021 0B       		.uleb128 0xb
 4352 0022 0B       		.uleb128 0xb
 4353 0023 3E       		.uleb128 0x3e
 4354 0024 0B       		.uleb128 0xb
 4355 0025 03       		.uleb128 0x3
 4356 0026 08       		.uleb128 0x8
 4357 0027 00       		.byte	0
 4358 0028 00       		.byte	0
 4359 0029 04       		.uleb128 0x4
 4360 002a 16       		.uleb128 0x16
 4361 002b 00       		.byte	0
 4362 002c 03       		.uleb128 0x3
 4363 002d 0E       		.uleb128 0xe
 4364 002e 3A       		.uleb128 0x3a
 4365 002f 0B       		.uleb128 0xb
 4366 0030 3B       		.uleb128 0x3b
 4367 0031 0B       		.uleb128 0xb
 4368 0032 49       		.uleb128 0x49
 4369 0033 13       		.uleb128 0x13
 4370 0034 00       		.byte	0
 4371 0035 00       		.byte	0
 4372 0036 05       		.uleb128 0x5
 4373 0037 16       		.uleb128 0x16
 4374 0038 00       		.byte	0
 4375 0039 03       		.uleb128 0x3
 4376 003a 0E       		.uleb128 0xe
 4377 003b 3A       		.uleb128 0x3a
 4378 003c 0B       		.uleb128 0xb
 4379 003d 3B       		.uleb128 0x3b
 4380 003e 05       		.uleb128 0x5
 4381 003f 49       		.uleb128 0x49
 4382 0040 13       		.uleb128 0x13
 4383 0041 00       		.byte	0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 119


 4384 0042 00       		.byte	0
 4385 0043 06       		.uleb128 0x6
 4386 0044 35       		.uleb128 0x35
 4387 0045 00       		.byte	0
 4388 0046 49       		.uleb128 0x49
 4389 0047 13       		.uleb128 0x13
 4390 0048 00       		.byte	0
 4391 0049 00       		.byte	0
 4392 004a 07       		.uleb128 0x7
 4393 004b 0F       		.uleb128 0xf
 4394 004c 00       		.byte	0
 4395 004d 0B       		.uleb128 0xb
 4396 004e 0B       		.uleb128 0xb
 4397 004f 49       		.uleb128 0x49
 4398 0050 13       		.uleb128 0x13
 4399 0051 00       		.byte	0
 4400 0052 00       		.byte	0
 4401 0053 08       		.uleb128 0x8
 4402 0054 26       		.uleb128 0x26
 4403 0055 00       		.byte	0
 4404 0056 49       		.uleb128 0x49
 4405 0057 13       		.uleb128 0x13
 4406 0058 00       		.byte	0
 4407 0059 00       		.byte	0
 4408 005a 09       		.uleb128 0x9
 4409 005b 2E       		.uleb128 0x2e
 4410 005c 01       		.byte	0x1
 4411 005d 3F       		.uleb128 0x3f
 4412 005e 19       		.uleb128 0x19
 4413 005f 03       		.uleb128 0x3
 4414 0060 0E       		.uleb128 0xe
 4415 0061 3A       		.uleb128 0x3a
 4416 0062 0B       		.uleb128 0xb
 4417 0063 3B       		.uleb128 0x3b
 4418 0064 0B       		.uleb128 0xb
 4419 0065 27       		.uleb128 0x27
 4420 0066 19       		.uleb128 0x19
 4421 0067 11       		.uleb128 0x11
 4422 0068 01       		.uleb128 0x1
 4423 0069 12       		.uleb128 0x12
 4424 006a 06       		.uleb128 0x6
 4425 006b 40       		.uleb128 0x40
 4426 006c 18       		.uleb128 0x18
 4427 006d 9642     		.uleb128 0x2116
 4428 006f 19       		.uleb128 0x19
 4429 0070 01       		.uleb128 0x1
 4430 0071 13       		.uleb128 0x13
 4431 0072 00       		.byte	0
 4432 0073 00       		.byte	0
 4433 0074 0A       		.uleb128 0xa
 4434 0075 34       		.uleb128 0x34
 4435 0076 00       		.byte	0
 4436 0077 03       		.uleb128 0x3
 4437 0078 0E       		.uleb128 0xe
 4438 0079 3A       		.uleb128 0x3a
 4439 007a 0B       		.uleb128 0xb
 4440 007b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 120


 4441 007c 0B       		.uleb128 0xb
 4442 007d 49       		.uleb128 0x49
 4443 007e 13       		.uleb128 0x13
 4444 007f 02       		.uleb128 0x2
 4445 0080 18       		.uleb128 0x18
 4446 0081 00       		.byte	0
 4447 0082 00       		.byte	0
 4448 0083 0B       		.uleb128 0xb
 4449 0084 2E       		.uleb128 0x2e
 4450 0085 01       		.byte	0x1
 4451 0086 3F       		.uleb128 0x3f
 4452 0087 19       		.uleb128 0x19
 4453 0088 03       		.uleb128 0x3
 4454 0089 0E       		.uleb128 0xe
 4455 008a 3A       		.uleb128 0x3a
 4456 008b 0B       		.uleb128 0xb
 4457 008c 3B       		.uleb128 0x3b
 4458 008d 05       		.uleb128 0x5
 4459 008e 27       		.uleb128 0x27
 4460 008f 19       		.uleb128 0x19
 4461 0090 11       		.uleb128 0x11
 4462 0091 01       		.uleb128 0x1
 4463 0092 12       		.uleb128 0x12
 4464 0093 06       		.uleb128 0x6
 4465 0094 40       		.uleb128 0x40
 4466 0095 18       		.uleb128 0x18
 4467 0096 9642     		.uleb128 0x2116
 4468 0098 19       		.uleb128 0x19
 4469 0099 01       		.uleb128 0x1
 4470 009a 13       		.uleb128 0x13
 4471 009b 00       		.byte	0
 4472 009c 00       		.byte	0
 4473 009d 0C       		.uleb128 0xc
 4474 009e 34       		.uleb128 0x34
 4475 009f 00       		.byte	0
 4476 00a0 03       		.uleb128 0x3
 4477 00a1 0E       		.uleb128 0xe
 4478 00a2 3A       		.uleb128 0x3a
 4479 00a3 0B       		.uleb128 0xb
 4480 00a4 3B       		.uleb128 0x3b
 4481 00a5 05       		.uleb128 0x5
 4482 00a6 49       		.uleb128 0x49
 4483 00a7 13       		.uleb128 0x13
 4484 00a8 02       		.uleb128 0x2
 4485 00a9 18       		.uleb128 0x18
 4486 00aa 00       		.byte	0
 4487 00ab 00       		.byte	0
 4488 00ac 0D       		.uleb128 0xd
 4489 00ad 2E       		.uleb128 0x2e
 4490 00ae 00       		.byte	0
 4491 00af 3F       		.uleb128 0x3f
 4492 00b0 19       		.uleb128 0x19
 4493 00b1 03       		.uleb128 0x3
 4494 00b2 0E       		.uleb128 0xe
 4495 00b3 3A       		.uleb128 0x3a
 4496 00b4 0B       		.uleb128 0xb
 4497 00b5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 121


 4498 00b6 05       		.uleb128 0x5
 4499 00b7 27       		.uleb128 0x27
 4500 00b8 19       		.uleb128 0x19
 4501 00b9 11       		.uleb128 0x11
 4502 00ba 01       		.uleb128 0x1
 4503 00bb 12       		.uleb128 0x12
 4504 00bc 06       		.uleb128 0x6
 4505 00bd 40       		.uleb128 0x40
 4506 00be 18       		.uleb128 0x18
 4507 00bf 9642     		.uleb128 0x2116
 4508 00c1 19       		.uleb128 0x19
 4509 00c2 00       		.byte	0
 4510 00c3 00       		.byte	0
 4511 00c4 0E       		.uleb128 0xe
 4512 00c5 2E       		.uleb128 0x2e
 4513 00c6 01       		.byte	0x1
 4514 00c7 3F       		.uleb128 0x3f
 4515 00c8 19       		.uleb128 0x19
 4516 00c9 03       		.uleb128 0x3
 4517 00ca 0E       		.uleb128 0xe
 4518 00cb 3A       		.uleb128 0x3a
 4519 00cc 0B       		.uleb128 0xb
 4520 00cd 3B       		.uleb128 0x3b
 4521 00ce 05       		.uleb128 0x5
 4522 00cf 27       		.uleb128 0x27
 4523 00d0 19       		.uleb128 0x19
 4524 00d1 49       		.uleb128 0x49
 4525 00d2 13       		.uleb128 0x13
 4526 00d3 11       		.uleb128 0x11
 4527 00d4 01       		.uleb128 0x1
 4528 00d5 12       		.uleb128 0x12
 4529 00d6 06       		.uleb128 0x6
 4530 00d7 40       		.uleb128 0x40
 4531 00d8 18       		.uleb128 0x18
 4532 00d9 9642     		.uleb128 0x2116
 4533 00db 19       		.uleb128 0x19
 4534 00dc 01       		.uleb128 0x1
 4535 00dd 13       		.uleb128 0x13
 4536 00de 00       		.byte	0
 4537 00df 00       		.byte	0
 4538 00e0 0F       		.uleb128 0xf
 4539 00e1 05       		.uleb128 0x5
 4540 00e2 00       		.byte	0
 4541 00e3 03       		.uleb128 0x3
 4542 00e4 0E       		.uleb128 0xe
 4543 00e5 3A       		.uleb128 0x3a
 4544 00e6 0B       		.uleb128 0xb
 4545 00e7 3B       		.uleb128 0x3b
 4546 00e8 05       		.uleb128 0x5
 4547 00e9 49       		.uleb128 0x49
 4548 00ea 13       		.uleb128 0x13
 4549 00eb 02       		.uleb128 0x2
 4550 00ec 18       		.uleb128 0x18
 4551 00ed 00       		.byte	0
 4552 00ee 00       		.byte	0
 4553 00ef 10       		.uleb128 0x10
 4554 00f0 2E       		.uleb128 0x2e
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 122


 4555 00f1 00       		.byte	0
 4556 00f2 3F       		.uleb128 0x3f
 4557 00f3 19       		.uleb128 0x19
 4558 00f4 03       		.uleb128 0x3
 4559 00f5 0E       		.uleb128 0xe
 4560 00f6 3A       		.uleb128 0x3a
 4561 00f7 0B       		.uleb128 0xb
 4562 00f8 3B       		.uleb128 0x3b
 4563 00f9 05       		.uleb128 0x5
 4564 00fa 27       		.uleb128 0x27
 4565 00fb 19       		.uleb128 0x19
 4566 00fc 49       		.uleb128 0x49
 4567 00fd 13       		.uleb128 0x13
 4568 00fe 11       		.uleb128 0x11
 4569 00ff 01       		.uleb128 0x1
 4570 0100 12       		.uleb128 0x12
 4571 0101 06       		.uleb128 0x6
 4572 0102 40       		.uleb128 0x40
 4573 0103 18       		.uleb128 0x18
 4574 0104 9742     		.uleb128 0x2117
 4575 0106 19       		.uleb128 0x19
 4576 0107 00       		.byte	0
 4577 0108 00       		.byte	0
 4578 0109 11       		.uleb128 0x11
 4579 010a 2E       		.uleb128 0x2e
 4580 010b 01       		.byte	0x1
 4581 010c 3F       		.uleb128 0x3f
 4582 010d 19       		.uleb128 0x19
 4583 010e 03       		.uleb128 0x3
 4584 010f 0E       		.uleb128 0xe
 4585 0110 3A       		.uleb128 0x3a
 4586 0111 0B       		.uleb128 0xb
 4587 0112 3B       		.uleb128 0x3b
 4588 0113 05       		.uleb128 0x5
 4589 0114 27       		.uleb128 0x27
 4590 0115 19       		.uleb128 0x19
 4591 0116 49       		.uleb128 0x49
 4592 0117 13       		.uleb128 0x13
 4593 0118 11       		.uleb128 0x11
 4594 0119 01       		.uleb128 0x1
 4595 011a 12       		.uleb128 0x12
 4596 011b 06       		.uleb128 0x6
 4597 011c 40       		.uleb128 0x40
 4598 011d 18       		.uleb128 0x18
 4599 011e 9742     		.uleb128 0x2117
 4600 0120 19       		.uleb128 0x19
 4601 0121 01       		.uleb128 0x1
 4602 0122 13       		.uleb128 0x13
 4603 0123 00       		.byte	0
 4604 0124 00       		.byte	0
 4605 0125 12       		.uleb128 0x12
 4606 0126 2E       		.uleb128 0x2e
 4607 0127 01       		.byte	0x1
 4608 0128 3F       		.uleb128 0x3f
 4609 0129 19       		.uleb128 0x19
 4610 012a 03       		.uleb128 0x3
 4611 012b 0E       		.uleb128 0xe
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 123


 4612 012c 3A       		.uleb128 0x3a
 4613 012d 0B       		.uleb128 0xb
 4614 012e 3B       		.uleb128 0x3b
 4615 012f 05       		.uleb128 0x5
 4616 0130 27       		.uleb128 0x27
 4617 0131 19       		.uleb128 0x19
 4618 0132 11       		.uleb128 0x11
 4619 0133 01       		.uleb128 0x1
 4620 0134 12       		.uleb128 0x12
 4621 0135 06       		.uleb128 0x6
 4622 0136 40       		.uleb128 0x40
 4623 0137 18       		.uleb128 0x18
 4624 0138 9742     		.uleb128 0x2117
 4625 013a 19       		.uleb128 0x19
 4626 013b 01       		.uleb128 0x1
 4627 013c 13       		.uleb128 0x13
 4628 013d 00       		.byte	0
 4629 013e 00       		.byte	0
 4630 013f 13       		.uleb128 0x13
 4631 0140 34       		.uleb128 0x34
 4632 0141 00       		.byte	0
 4633 0142 03       		.uleb128 0x3
 4634 0143 0E       		.uleb128 0xe
 4635 0144 3A       		.uleb128 0x3a
 4636 0145 0B       		.uleb128 0xb
 4637 0146 3B       		.uleb128 0x3b
 4638 0147 0B       		.uleb128 0xb
 4639 0148 49       		.uleb128 0x49
 4640 0149 13       		.uleb128 0x13
 4641 014a 3F       		.uleb128 0x3f
 4642 014b 19       		.uleb128 0x19
 4643 014c 02       		.uleb128 0x2
 4644 014d 18       		.uleb128 0x18
 4645 014e 00       		.byte	0
 4646 014f 00       		.byte	0
 4647 0150 14       		.uleb128 0x14
 4648 0151 01       		.uleb128 0x1
 4649 0152 01       		.byte	0x1
 4650 0153 49       		.uleb128 0x49
 4651 0154 13       		.uleb128 0x13
 4652 0155 01       		.uleb128 0x1
 4653 0156 13       		.uleb128 0x13
 4654 0157 00       		.byte	0
 4655 0158 00       		.byte	0
 4656 0159 15       		.uleb128 0x15
 4657 015a 21       		.uleb128 0x21
 4658 015b 00       		.byte	0
 4659 015c 49       		.uleb128 0x49
 4660 015d 13       		.uleb128 0x13
 4661 015e 2F       		.uleb128 0x2f
 4662 015f 0B       		.uleb128 0xb
 4663 0160 00       		.byte	0
 4664 0161 00       		.byte	0
 4665 0162 16       		.uleb128 0x16
 4666 0163 34       		.uleb128 0x34
 4667 0164 00       		.byte	0
 4668 0165 03       		.uleb128 0x3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 124


 4669 0166 0E       		.uleb128 0xe
 4670 0167 3A       		.uleb128 0x3a
 4671 0168 0B       		.uleb128 0xb
 4672 0169 3B       		.uleb128 0x3b
 4673 016a 05       		.uleb128 0x5
 4674 016b 49       		.uleb128 0x49
 4675 016c 13       		.uleb128 0x13
 4676 016d 3F       		.uleb128 0x3f
 4677 016e 19       		.uleb128 0x19
 4678 016f 3C       		.uleb128 0x3c
 4679 0170 19       		.uleb128 0x19
 4680 0171 00       		.byte	0
 4681 0172 00       		.byte	0
 4682 0173 00       		.byte	0
 4683              		.section	.debug_aranges,"",%progbits
 4684 0000 54010000 		.4byte	0x154
 4685 0004 0200     		.2byte	0x2
 4686 0006 00000000 		.4byte	.Ldebug_info0
 4687 000a 04       		.byte	0x4
 4688 000b 00       		.byte	0
 4689 000c 0000     		.2byte	0
 4690 000e 0000     		.2byte	0
 4691 0010 00000000 		.4byte	.LFB33
 4692 0014 3C000000 		.4byte	.LFE33-.LFB33
 4693 0018 00000000 		.4byte	.LFB34
 4694 001c C0000000 		.4byte	.LFE34-.LFB34
 4695 0020 00000000 		.4byte	.LFB35
 4696 0024 50000000 		.4byte	.LFE35-.LFB35
 4697 0028 00000000 		.4byte	.LFB36
 4698 002c 44000000 		.4byte	.LFE36-.LFB36
 4699 0030 00000000 		.4byte	.LFB37
 4700 0034 38000000 		.4byte	.LFE37-.LFB37
 4701 0038 00000000 		.4byte	.LFB38
 4702 003c 48000000 		.4byte	.LFE38-.LFB38
 4703 0040 00000000 		.4byte	.LFB39
 4704 0044 34000000 		.4byte	.LFE39-.LFB39
 4705 0048 00000000 		.4byte	.LFB40
 4706 004c DC000000 		.4byte	.LFE40-.LFB40
 4707 0050 00000000 		.4byte	.LFB41
 4708 0054 58000000 		.4byte	.LFE41-.LFB41
 4709 0058 00000000 		.4byte	.LFB42
 4710 005c 1C000000 		.4byte	.LFE42-.LFB42
 4711 0060 00000000 		.4byte	.LFB43
 4712 0064 1C000000 		.4byte	.LFE43-.LFB43
 4713 0068 00000000 		.4byte	.LFB44
 4714 006c 24000000 		.4byte	.LFE44-.LFB44
 4715 0070 00000000 		.4byte	.LFB45
 4716 0074 20000000 		.4byte	.LFE45-.LFB45
 4717 0078 00000000 		.4byte	.LFB46
 4718 007c 1C000000 		.4byte	.LFE46-.LFB46
 4719 0080 00000000 		.4byte	.LFB47
 4720 0084 26000000 		.4byte	.LFE47-.LFB47
 4721 0088 00000000 		.4byte	.LFB48
 4722 008c CC000000 		.4byte	.LFE48-.LFB48
 4723 0090 00000000 		.4byte	.LFB49
 4724 0094 20010000 		.4byte	.LFE49-.LFB49
 4725 0098 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 125


 4726 009c 6C000000 		.4byte	.LFE50-.LFB50
 4727 00a0 00000000 		.4byte	.LFB51
 4728 00a4 38000000 		.4byte	.LFE51-.LFB51
 4729 00a8 00000000 		.4byte	.LFB52
 4730 00ac 5C000000 		.4byte	.LFE52-.LFB52
 4731 00b0 00000000 		.4byte	.LFB53
 4732 00b4 34010000 		.4byte	.LFE53-.LFB53
 4733 00b8 00000000 		.4byte	.LFB54
 4734 00bc 74000000 		.4byte	.LFE54-.LFB54
 4735 00c0 00000000 		.4byte	.LFB55
 4736 00c4 80000000 		.4byte	.LFE55-.LFB55
 4737 00c8 00000000 		.4byte	.LFB56
 4738 00cc 30000000 		.4byte	.LFE56-.LFB56
 4739 00d0 00000000 		.4byte	.LFB57
 4740 00d4 2C000000 		.4byte	.LFE57-.LFB57
 4741 00d8 00000000 		.4byte	.LFB58
 4742 00dc 44000000 		.4byte	.LFE58-.LFB58
 4743 00e0 00000000 		.4byte	.LFB59
 4744 00e4 68000000 		.4byte	.LFE59-.LFB59
 4745 00e8 00000000 		.4byte	.LFB60
 4746 00ec 1C000000 		.4byte	.LFE60-.LFB60
 4747 00f0 00000000 		.4byte	.LFB61
 4748 00f4 20000000 		.4byte	.LFE61-.LFB61
 4749 00f8 00000000 		.4byte	.LFB62
 4750 00fc 1C000000 		.4byte	.LFE62-.LFB62
 4751 0100 00000000 		.4byte	.LFB63
 4752 0104 20000000 		.4byte	.LFE63-.LFB63
 4753 0108 00000000 		.4byte	.LFB64
 4754 010c 1C000000 		.4byte	.LFE64-.LFB64
 4755 0110 00000000 		.4byte	.LFB65
 4756 0114 20000000 		.4byte	.LFE65-.LFB65
 4757 0118 00000000 		.4byte	.LFB66
 4758 011c 1C000000 		.4byte	.LFE66-.LFB66
 4759 0120 00000000 		.4byte	.LFB67
 4760 0124 20000000 		.4byte	.LFE67-.LFB67
 4761 0128 00000000 		.4byte	.LFB68
 4762 012c 20000000 		.4byte	.LFE68-.LFB68
 4763 0130 00000000 		.4byte	.LFB69
 4764 0134 3C000000 		.4byte	.LFE69-.LFB69
 4765 0138 00000000 		.4byte	.LFB70
 4766 013c 4E000000 		.4byte	.LFE70-.LFB70
 4767 0140 00000000 		.4byte	.LFB71
 4768 0144 20000000 		.4byte	.LFE71-.LFB71
 4769 0148 00000000 		.4byte	.LFB72
 4770 014c 9C000000 		.4byte	.LFE72-.LFB72
 4771 0150 00000000 		.4byte	0
 4772 0154 00000000 		.4byte	0
 4773              		.section	.debug_ranges,"",%progbits
 4774              	.Ldebug_ranges0:
 4775 0000 00000000 		.4byte	.LFB33
 4776 0004 3C000000 		.4byte	.LFE33
 4777 0008 00000000 		.4byte	.LFB34
 4778 000c C0000000 		.4byte	.LFE34
 4779 0010 00000000 		.4byte	.LFB35
 4780 0014 50000000 		.4byte	.LFE35
 4781 0018 00000000 		.4byte	.LFB36
 4782 001c 44000000 		.4byte	.LFE36
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 126


 4783 0020 00000000 		.4byte	.LFB37
 4784 0024 38000000 		.4byte	.LFE37
 4785 0028 00000000 		.4byte	.LFB38
 4786 002c 48000000 		.4byte	.LFE38
 4787 0030 00000000 		.4byte	.LFB39
 4788 0034 34000000 		.4byte	.LFE39
 4789 0038 00000000 		.4byte	.LFB40
 4790 003c DC000000 		.4byte	.LFE40
 4791 0040 00000000 		.4byte	.LFB41
 4792 0044 58000000 		.4byte	.LFE41
 4793 0048 00000000 		.4byte	.LFB42
 4794 004c 1C000000 		.4byte	.LFE42
 4795 0050 00000000 		.4byte	.LFB43
 4796 0054 1C000000 		.4byte	.LFE43
 4797 0058 00000000 		.4byte	.LFB44
 4798 005c 24000000 		.4byte	.LFE44
 4799 0060 00000000 		.4byte	.LFB45
 4800 0064 20000000 		.4byte	.LFE45
 4801 0068 00000000 		.4byte	.LFB46
 4802 006c 1C000000 		.4byte	.LFE46
 4803 0070 00000000 		.4byte	.LFB47
 4804 0074 26000000 		.4byte	.LFE47
 4805 0078 00000000 		.4byte	.LFB48
 4806 007c CC000000 		.4byte	.LFE48
 4807 0080 00000000 		.4byte	.LFB49
 4808 0084 20010000 		.4byte	.LFE49
 4809 0088 00000000 		.4byte	.LFB50
 4810 008c 6C000000 		.4byte	.LFE50
 4811 0090 00000000 		.4byte	.LFB51
 4812 0094 38000000 		.4byte	.LFE51
 4813 0098 00000000 		.4byte	.LFB52
 4814 009c 5C000000 		.4byte	.LFE52
 4815 00a0 00000000 		.4byte	.LFB53
 4816 00a4 34010000 		.4byte	.LFE53
 4817 00a8 00000000 		.4byte	.LFB54
 4818 00ac 74000000 		.4byte	.LFE54
 4819 00b0 00000000 		.4byte	.LFB55
 4820 00b4 80000000 		.4byte	.LFE55
 4821 00b8 00000000 		.4byte	.LFB56
 4822 00bc 30000000 		.4byte	.LFE56
 4823 00c0 00000000 		.4byte	.LFB57
 4824 00c4 2C000000 		.4byte	.LFE57
 4825 00c8 00000000 		.4byte	.LFB58
 4826 00cc 44000000 		.4byte	.LFE58
 4827 00d0 00000000 		.4byte	.LFB59
 4828 00d4 68000000 		.4byte	.LFE59
 4829 00d8 00000000 		.4byte	.LFB60
 4830 00dc 1C000000 		.4byte	.LFE60
 4831 00e0 00000000 		.4byte	.LFB61
 4832 00e4 20000000 		.4byte	.LFE61
 4833 00e8 00000000 		.4byte	.LFB62
 4834 00ec 1C000000 		.4byte	.LFE62
 4835 00f0 00000000 		.4byte	.LFB63
 4836 00f4 20000000 		.4byte	.LFE63
 4837 00f8 00000000 		.4byte	.LFB64
 4838 00fc 1C000000 		.4byte	.LFE64
 4839 0100 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 127


 4840 0104 20000000 		.4byte	.LFE65
 4841 0108 00000000 		.4byte	.LFB66
 4842 010c 1C000000 		.4byte	.LFE66
 4843 0110 00000000 		.4byte	.LFB67
 4844 0114 20000000 		.4byte	.LFE67
 4845 0118 00000000 		.4byte	.LFB68
 4846 011c 20000000 		.4byte	.LFE68
 4847 0120 00000000 		.4byte	.LFB69
 4848 0124 3C000000 		.4byte	.LFE69
 4849 0128 00000000 		.4byte	.LFB70
 4850 012c 4E000000 		.4byte	.LFE70
 4851 0130 00000000 		.4byte	.LFB71
 4852 0134 20000000 		.4byte	.LFE71
 4853 0138 00000000 		.4byte	.LFB72
 4854 013c 9C000000 		.4byte	.LFE72
 4855 0140 00000000 		.4byte	0
 4856 0144 00000000 		.4byte	0
 4857              		.section	.debug_line,"",%progbits
 4858              	.Ldebug_line0:
 4859 0000 C6040000 		.section	.debug_str,"MS",%progbits,1
 4859      02006200 
 4859      00000201 
 4859      FB0E0D00 
 4859      01010101 
 4860              	.LASF100:
 4861 0000 7363616E 		.ascii	"scanSpeedTbl\000"
 4861      53706565 
 4861      6454626C 
 4861      00
 4862              	.LASF75:
 4863 000d 43617053 		.ascii	"CapSense_CSD_SetSenseClkDivider\000"
 4863      656E7365 
 4863      5F435344 
 4863      5F536574 
 4863      53656E73 
 4864              	.LASF115:
 4865 002d 43617053 		.ascii	"CapSense_CSD_prtCfgTbl\000"
 4865      656E7365 
 4865      5F435344 
 4865      5F707274 
 4865      43666754 
 4866              	.LASF110:
 4867 0044 43617053 		.ascii	"CapSense_CSD_widgetResolution\000"
 4867      656E7365 
 4867      5F435344 
 4867      5F776964 
 4867      67657452 
 4868              	.LASF56:
 4869 0062 43617053 		.ascii	"CapSense_CSD_RestoreDriveModeAllPins\000"
 4869      656E7365 
 4869      5F435344 
 4869      5F526573 
 4869      746F7265 
 4870              	.LASF108:
 4871 0087 43617053 		.ascii	"CapSense_CSD_modulationIDAC\000"
 4871      656E7365 
 4871      5F435344 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 128


 4871      5F6D6F64 
 4871      756C6174 
 4872              	.LASF8:
 4873 00a3 756E7369 		.ascii	"unsigned int\000"
 4873      676E6564 
 4873      20696E74 
 4873      00
 4874              	.LASF111:
 4875 00b0 43617053 		.ascii	"CapSense_CSD_senseClkDividerVal\000"
 4875      656E7365 
 4875      5F435344 
 4875      5F73656E 
 4875      7365436C 
 4876              	.LASF35:
 4877 00d0 43617053 		.ascii	"CapSense_CSD_FindNextSensor\000"
 4877      656E7365 
 4877      5F435344 
 4877      5F46696E 
 4877      644E6578 
 4878              	.LASF73:
 4879 00ec 43617053 		.ascii	"CapSense_CSD_SetBitValue\000"
 4879      656E7365 
 4879      5F435344 
 4879      5F536574 
 4879      42697456 
 4880              	.LASF89:
 4881 0105 43617053 		.ascii	"CapSense_CSD_GetSensorRaw\000"
 4881      656E7365 
 4881      5F435344 
 4881      5F476574 
 4881      53656E73 
 4882              	.LASF46:
 4883 011f 696E7465 		.ascii	"interruptState\000"
 4883      72727570 
 4883      74537461 
 4883      746500
 4884              	.LASF15:
 4885 012e 72656738 		.ascii	"reg8\000"
 4885      00
 4886              	.LASF94:
 4887 0133 77696467 		.ascii	"widgetsNum\000"
 4887      6574734E 
 4887      756D00
 4888              	.LASF113:
 4889 013e 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 4889      656E7365 
 4889      5F435344 
 4889      5F776964 
 4889      6765744E 
 4890              	.LASF45:
 4891 0158 70696E48 		.ascii	"pinHSIOMShift\000"
 4891      53494F4D 
 4891      53686966 
 4891      7400
 4892              	.LASF112:
 4893 0166 43617053 		.ascii	"CapSense_CSD_sampleClkDividerVal\000"
 4893      656E7365 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 129


 4893      5F435344 
 4893      5F73616D 
 4893      706C6543 
 4894              	.LASF92:
 4895 0187 43617053 		.ascii	"CapSense_CSD_SetUnscannedSensorState\000"
 4895      656E7365 
 4895      5F435344 
 4895      5F536574 
 4895      556E7363 
 4896              	.LASF91:
 4897 01ac 61766756 		.ascii	"avgVal\000"
 4897      616C00
 4898              	.LASF44:
 4899 01b3 70696E4D 		.ascii	"pinModeShift\000"
 4899      6F646553 
 4899      68696674 
 4899      00
 4900              	.LASF104:
 4901 01c0 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 4901      656E7365 
 4901      5F435344 
 4901      5F73656E 
 4901      736F7252 
 4902              	.LASF50:
 4903 01d7 696E6163 		.ascii	"inactiveConnect\000"
 4903      74697665 
 4903      436F6E6E 
 4903      65637400 
 4904              	.LASF87:
 4905 01e7 43617053 		.ascii	"CapSense_CSD_SetIDACRange\000"
 4905      656E7365 
 4905      5F435344 
 4905      5F536574 
 4905      49444143 
 4906              	.LASF68:
 4907 0201 43617053 		.ascii	"CapSense_CSD_GetBitValue\000"
 4907      656E7365 
 4907      5F435344 
 4907      5F476574 
 4907      42697456 
 4908              	.LASF12:
 4909 021a 666C6F61 		.ascii	"float\000"
 4909      7400
 4910              	.LASF33:
 4911 0220 43617053 		.ascii	"CapSense_CSD_Stop\000"
 4911      656E7365 
 4911      5F435344 
 4911      5F53746F 
 4911      7000
 4912              	.LASF7:
 4913 0232 6C6F6E67 		.ascii	"long long unsigned int\000"
 4913      206C6F6E 
 4913      6720756E 
 4913      7369676E 
 4913      65642069 
 4914              	.LASF30:
 4915 0249 77696467 		.ascii	"widget\000"
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 130


 4915      657400
 4916              	.LASF74:
 4917 0250 43617053 		.ascii	"CapSense_CSD_GetSenseClkDivider\000"
 4917      656E7365 
 4917      5F435344 
 4917      5F476574 
 4917      53656E73 
 4918              	.LASF38:
 4919 0270 76616C75 		.ascii	"value\000"
 4919      6500
 4920              	.LASF63:
 4921 0276 43617053 		.ascii	"CapSense_CSD_EnableShieldElectrode\000"
 4921      656E7365 
 4921      5F435344 
 4921      5F456E61 
 4921      626C6553 
 4922              	.LASF47:
 4923 0299 6E657752 		.ascii	"newRegisterValue\000"
 4923      65676973 
 4923      74657256 
 4923      616C7565 
 4923      00
 4924              	.LASF39:
 4925 02aa 43617053 		.ascii	"CapSense_CSD_SetScanResolution\000"
 4925      656E7365 
 4925      5F435344 
 4925      5F536574 
 4925      5363616E 
 4926              	.LASF51:
 4927 02c9 73656E73 		.ascii	"sensorState\000"
 4927      6F725374 
 4927      61746500 
 4928              	.LASF71:
 4929 02d5 6F666673 		.ascii	"offset\000"
 4929      657400
 4930              	.LASF36:
 4931 02dc 43617053 		.ascii	"CapSense_CSD_ReadSensorRaw\000"
 4931      656E7365 
 4931      5F435344 
 4931      5F526561 
 4931      6453656E 
 4932              	.LASF54:
 4933 02f7 7072744E 		.ascii	"prtNumberTmp\000"
 4933      756D6265 
 4933      72546D70 
 4933      00
 4934              	.LASF31:
 4935 0304 73656E73 		.ascii	"sensorsPerWidget\000"
 4935      6F727350 
 4935      65725769 
 4935      64676574 
 4935      00
 4936              	.LASF41:
 4937 0315 43617053 		.ascii	"CapSense_CSD_GetScanResolution\000"
 4937      656E7365 
 4937      5F435344 
 4937      5F476574 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 131


 4937      5363616E 
 4938              	.LASF34:
 4939 0334 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 4939      656E7365 
 4939      5F435344 
 4939      5F536361 
 4939      6E456E61 
 4940              	.LASF90:
 4941 0354 63757253 		.ascii	"curSample\000"
 4941      616D706C 
 4941      6500
 4942              	.LASF84:
 4943 035e 43617053 		.ascii	"CapSense_CSD_SetCompensationIDAC\000"
 4943      656E7365 
 4943      5F435344 
 4943      5F536574 
 4943      436F6D70 
 4944              	.LASF28:
 4945 037f 73656E73 		.ascii	"sensor\000"
 4945      6F7200
 4946              	.LASF119:
 4947 0386 43617053 		.ascii	"CapSense_CSD_maskTable\000"
 4947      656E7365 
 4947      5F435344 
 4947      5F6D6173 
 4947      6B546162 
 4948              	.LASF122:
 4949 039d 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 4949      656E7365 
 4949      5F435344 
 4949      5F6E756D 
 4949      6265724F 
 4950              	.LASF14:
 4951 03ba 63686172 		.ascii	"char\000"
 4951      00
 4952              	.LASF67:
 4953 03bf 43617053 		.ascii	"CapSense_CSD_ReadCurrentScanningSensor\000"
 4953      656E7365 
 4953      5F435344 
 4953      5F526561 
 4953      64437572 
 4954              	.LASF69:
 4955 03e6 7461626C 		.ascii	"table\000"
 4955      6500
 4956              	.LASF10:
 4957 03ec 75696E74 		.ascii	"uint16\000"
 4957      313600
 4958              	.LASF40:
 4959 03f3 7265736F 		.ascii	"resolution\000"
 4959      6C757469 
 4959      6F6E00
 4960              	.LASF55:
 4961 03fe 70696E4E 		.ascii	"pinNumberTmp\000"
 4961      756D6265 
 4961      72546D70 
 4961      00
 4962              	.LASF6:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 132


 4963 040b 6C6F6E67 		.ascii	"long long int\000"
 4963      206C6F6E 
 4963      6720696E 
 4963      7400
 4964              	.LASF118:
 4965 0419 43617053 		.ascii	"CapSense_CSD_portTable\000"
 4965      656E7365 
 4965      5F435344 
 4965      5F706F72 
 4965      74546162 
 4966              	.LASF25:
 4967 0430 656E6162 		.ascii	"enableFlag\000"
 4967      6C65466C 
 4967      616700
 4968              	.LASF62:
 4969 043b 43617053 		.ascii	"CapSense_CSD_PostScan\000"
 4969      656E7365 
 4969      5F435344 
 4969      5F506F73 
 4969      74536361 
 4970              	.LASF96:
 4971 0451 63757272 		.ascii	"currentWidget\000"
 4971      656E7457 
 4971      69646765 
 4971      7400
 4972              	.LASF105:
 4973 045f 43617053 		.ascii	"CapSense_CSD_unscannedSnsDriveMode\000"
 4973      656E7365 
 4973      5F435344 
 4973      5F756E73 
 4973      63616E6E 
 4974              	.LASF23:
 4975 0482 43617053 		.ascii	"CapSense_CSD_Start\000"
 4975      656E7365 
 4975      5F435344 
 4975      5F537461 
 4975      727400
 4976              	.LASF11:
 4977 0495 75696E74 		.ascii	"uint32\000"
 4977      333200
 4978              	.LASF103:
 4979 049c 43617053 		.ascii	"CapSense_CSD_sensorIndex\000"
 4979      656E7365 
 4979      5F435344 
 4979      5F73656E 
 4979      736F7249 
 4980              	.LASF102:
 4981 04b5 43617053 		.ascii	"CapSense_CSD_csdStatusVar\000"
 4981      656E7365 
 4981      5F435344 
 4981      5F637364 
 4981      53746174 
 4982              	.LASF58:
 4983 04cf 70696E4E 		.ascii	"pinNumber\000"
 4983      756D6265 
 4983      7200
 4984              	.LASF124:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 133


 4985 04d9 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4985      4320342E 
 4985      382E3420 
 4985      32303134 
 4985      30353236 
 4986 050c 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4986      20726576 
 4986      6973696F 
 4986      6E203231 
 4986      31333538 
 4987 053f 30202D66 		.ascii	"0 -ffunction-sections\000"
 4987      66756E63 
 4987      74696F6E 
 4987      2D736563 
 4987      74696F6E 
 4988              	.LASF27:
 4989 0555 736E7349 		.ascii	"snsIndex\000"
 4989      6E646578 
 4989      00
 4990              	.LASF29:
 4991 055e 43617053 		.ascii	"CapSense_CSD_ScanWidget\000"
 4991      656E7365 
 4991      5F435344 
 4991      5F536361 
 4991      6E576964 
 4992              	.LASF32:
 4993 0576 6C617374 		.ascii	"lastSensor\000"
 4993      53656E73 
 4993      6F7200
 4994              	.LASF16:
 4995 0581 72656733 		.ascii	"reg32\000"
 4995      3200
 4996              	.LASF59:
 4997 0587 706F7274 		.ascii	"portNumber\000"
 4997      4E756D62 
 4997      657200
 4998              	.LASF98:
 4999 0592 6D617850 		.ascii	"maxPerWidget\000"
 4999      65725769 
 4999      64676574 
 4999      00
 5000              	.LASF107:
 5001 059f 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 5001      656E7365 
 5001      5F435344 
 5001      5F73656E 
 5001      736F7245 
 5002              	.LASF76:
 5003 05bd 73656E73 		.ascii	"senseClk\000"
 5003      65436C6B 
 5003      00
 5004              	.LASF49:
 5005 05c6 43617053 		.ascii	"CapSense_CSD_DisableSensor\000"
 5005      656E7365 
 5005      5F435344 
 5005      5F446973 
 5005      61626C65 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 134


 5006              	.LASF2:
 5007 05e1 73686F72 		.ascii	"short int\000"
 5007      7420696E 
 5007      7400
 5008              	.LASF109:
 5009 05eb 43617053 		.ascii	"CapSense_CSD_compensationIDAC\000"
 5009      656E7365 
 5009      5F435344 
 5009      5F636F6D 
 5009      70656E73 
 5010              	.LASF4:
 5011 0609 6C6F6E67 		.ascii	"long int\000"
 5011      20696E74 
 5011      00
 5012              	.LASF18:
 5013 0612 43617053 		.ascii	"CapSense_CSD_Init\000"
 5013      656E7365 
 5013      5F435344 
 5013      5F496E69 
 5013      7400
 5014              	.LASF123:
 5015 0624 43617053 		.ascii	"CapSense_CSD_csdTrim1\000"
 5015      656E7365 
 5015      5F435344 
 5015      5F637364 
 5015      5472696D 
 5016              	.LASF65:
 5017 063a 64656C61 		.ascii	"delay\000"
 5017      7900
 5018              	.LASF125:
 5019 0640 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSD.c\000"
 5019      6E657261 
 5019      7465645F 
 5019      536F7572 
 5019      63655C50 
 5020              	.LASF93:
 5021 0668 43617053 		.ascii	"CapSense_CSD_NormalizeWidgets\000"
 5021      656E7365 
 5021      5F435344 
 5021      5F4E6F72 
 5021      6D616C69 
 5022              	.LASF116:
 5023 0686 43617053 		.ascii	"CapSense_CSD_prtDRTbl\000"
 5023      656E7365 
 5023      5F435344 
 5023      5F707274 
 5023      44525462 
 5024              	.LASF57:
 5025 069c 43617053 		.ascii	"CapSense_CSD_SetPinDriveMode\000"
 5025      656E7365 
 5025      5F435344 
 5025      5F536574 
 5025      50696E44 
 5026              	.LASF24:
 5027 06b9 43617053 		.ascii	"CapSense_CSD_initVar\000"
 5027      656E7365 
 5027      5F435344 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 135


 5027      5F696E69 
 5027      74566172 
 5028              	.LASF101:
 5029 06ce 43617053 		.ascii	"CapSense_CSD_prescalersTuningDone\000"
 5029      656E7365 
 5029      5F435344 
 5029      5F707265 
 5029      7363616C 
 5030              	.LASF78:
 5031 06f0 43617053 		.ascii	"CapSense_CSD_SetModulatorClkDivider\000"
 5031      656E7365 
 5031      5F435344 
 5031      5F536574 
 5031      4D6F6475 
 5032              	.LASF88:
 5033 0714 69446163 		.ascii	"iDacRange\000"
 5033      52616E67 
 5033      6500
 5034              	.LASF26:
 5035 071e 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 5035      656E7365 
 5035      5F435344 
 5035      5F536361 
 5035      6E53656E 
 5036              	.LASF42:
 5037 0736 43617053 		.ascii	"CapSense_CSD_ClearSensors\000"
 5037      656E7365 
 5037      5F435344 
 5037      5F436C65 
 5037      61725365 
 5038              	.LASF97:
 5039 0750 63757272 		.ascii	"currentSensor\000"
 5039      656E7453 
 5039      656E736F 
 5039      7200
 5040              	.LASF85:
 5041 075e 636F6D70 		.ascii	"compIdacValue\000"
 5041      49646163 
 5041      56616C75 
 5041      6500
 5042              	.LASF99:
 5043 076c 43617053 		.ascii	"CapSense_CSD_lowLevelTuningDone\000"
 5043      656E7365 
 5043      5F435344 
 5043      5F6C6F77 
 5043      4C657665 
 5044              	.LASF82:
 5045 078c 6D6F6449 		.ascii	"modIdacValue\000"
 5045      64616356 
 5045      616C7565 
 5045      00
 5046              	.LASF60:
 5047 0799 43617053 		.ascii	"CapSense_CSD_PreScan\000"
 5047      656E7365 
 5047      5F435344 
 5047      5F507265 
 5047      5363616E 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 136


 5048              	.LASF17:
 5049 07ae 73697A65 		.ascii	"sizetype\000"
 5049      74797065 
 5049      00
 5050              	.LASF5:
 5051 07b7 6C6F6E67 		.ascii	"long unsigned int\000"
 5051      20756E73 
 5051      69676E65 
 5051      6420696E 
 5051      7400
 5052              	.LASF126:
 5053 07c9 433A5C55 		.ascii	"C:\\Users\\gsgill\\Documents\\PSoC Creator\\CapSens"
 5053      73657273 
 5053      5C677367 
 5053      696C6C5C 
 5053      446F6375 
 5054 07f7 655F4353 		.ascii	"e_CSD_P4_Design03\\CapSense_CSD_P4_Design03.cydsn\000"
 5054      445F5034 
 5054      5F446573 
 5054      69676E30 
 5054      335C4361 
 5055              	.LASF121:
 5056 0828 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 5056      656E7365 
 5056      5F435344 
 5056      5F726177 
 5056      44617461 
 5057              	.LASF48:
 5058 0842 706F7274 		.ascii	"port\000"
 5058      00
 5059              	.LASF72:
 5060 0847 656E4D61 		.ascii	"enMask\000"
 5060      736B00
 5061              	.LASF64:
 5062 084e 43617053 		.ascii	"CapSense_CSD_SetShieldDelay\000"
 5062      656E7365 
 5062      5F435344 
 5062      5F536574 
 5062      53686965 
 5063              	.LASF77:
 5064 086a 43617053 		.ascii	"CapSense_CSD_GetModulatorClkDivider\000"
 5064      656E7365 
 5064      5F435344 
 5064      5F476574 
 5064      4D6F6475 
 5065              	.LASF66:
 5066 088e 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 5066      656E7365 
 5066      5F435344 
 5066      5F497342 
 5066      75737900 
 5067              	.LASF1:
 5068 08a2 756E7369 		.ascii	"unsigned char\000"
 5068      676E6564 
 5068      20636861 
 5068      7200
 5069              	.LASF19:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 137


 5070 08b0 43617053 		.ascii	"CapSense_CSD_CsdHwBlockInit\000"
 5070      656E7365 
 5070      5F435344 
 5070      5F437364 
 5070      4877426C 
 5071              	.LASF61:
 5072 08cc 636F756E 		.ascii	"counterResolution\000"
 5072      74657252 
 5072      65736F6C 
 5072      7574696F 
 5072      6E00
 5073              	.LASF120:
 5074 08de 43617053 		.ascii	"CapSense_CSD_pinShiftTbl\000"
 5074      656E7365 
 5074      5F435344 
 5074      5F70696E 
 5074      53686966 
 5075              	.LASF79:
 5076 08f7 6D6F6475 		.ascii	"modulatorClk\000"
 5076      6C61746F 
 5076      72436C6B 
 5076      00
 5077              	.LASF80:
 5078 0904 43617053 		.ascii	"CapSense_CSD_GetModulationIDAC\000"
 5078      656E7365 
 5078      5F435344 
 5078      5F476574 
 5078      4D6F6475 
 5079              	.LASF117:
 5080 0923 43617053 		.ascii	"CapSense_CSD_pcTable\000"
 5080      656E7365 
 5080      5F435344 
 5080      5F706354 
 5080      61626C65 
 5081              	.LASF83:
 5082 0938 43617053 		.ascii	"CapSense_CSD_GetCompensationIDAC\000"
 5082      656E7365 
 5082      5F435344 
 5082      5F476574 
 5082      436F6D70 
 5083              	.LASF106:
 5084 0959 43617053 		.ascii	"CapSense_CSD_sensorEnableMaskBackup\000"
 5084      656E7365 
 5084      5F435344 
 5084      5F73656E 
 5084      736F7245 
 5085              	.LASF0:
 5086 097d 7369676E 		.ascii	"signed char\000"
 5086      65642063 
 5086      68617200 
 5087              	.LASF95:
 5088 0989 64617461 		.ascii	"dataPtr\000"
 5088      50747200 
 5089              	.LASF3:
 5090 0991 73686F72 		.ascii	"short unsigned int\000"
 5090      7420756E 
 5090      7369676E 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 138


 5090      65642069 
 5090      6E7400
 5091              	.LASF86:
 5092 09a4 43617053 		.ascii	"CapSense_CSD_GetIDACRange\000"
 5092      656E7365 
 5092      5F435344 
 5092      5F476574 
 5092      49444143 
 5093              	.LASF81:
 5094 09be 43617053 		.ascii	"CapSense_CSD_SetModulationIDAC\000"
 5094      656E7365 
 5094      5F435344 
 5094      5F536574 
 5094      4D6F6475 
 5095              	.LASF21:
 5096 09dd 6E657752 		.ascii	"newRegValue\000"
 5096      65675661 
 5096      6C756500 
 5097              	.LASF52:
 5098 09e9 43617053 		.ascii	"CapSense_CSD_SetDriveModeAllPins\000"
 5098      656E7365 
 5098      5F435344 
 5098      5F536574 
 5098      44726976 
 5099              	.LASF9:
 5100 0a0a 75696E74 		.ascii	"uint8\000"
 5100      3800
 5101              	.LASF13:
 5102 0a10 646F7562 		.ascii	"double\000"
 5102      6C6500
 5103              	.LASF114:
 5104 0a17 43617053 		.ascii	"CapSense_CSD_prtSelTbl\000"
 5104      656E7365 
 5104      5F435344 
 5104      5F707274 
 5104      53656C54 
 5105              	.LASF20:
 5106 0a2e 63757253 		.ascii	"curSensor\000"
 5106      656E736F 
 5106      7200
 5107              	.LASF37:
 5108 0a38 43617053 		.ascii	"CapSense_CSD_WriteSensorRaw\000"
 5108      656E7365 
 5108      5F435344 
 5108      5F577269 
 5108      74655365 
 5109              	.LASF53:
 5110 0a54 64726976 		.ascii	"driveMode\000"
 5110      654D6F64 
 5110      6500
 5111              	.LASF43:
 5112 0a5e 43617053 		.ascii	"CapSense_CSD_EnableSensor\000"
 5112      656E7365 
 5112      5F435344 
 5112      5F456E61 
 5112      626C6553 
 5113              	.LASF70:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\cc60Ptud.s 			page 139


 5114 0a78 706F7369 		.ascii	"position\000"
 5114      74696F6E 
 5114      00
 5115              	.LASF22:
 5116 0a81 43617053 		.ascii	"CapSense_CSD_Enable\000"
 5116      656E7365 
 5116      5F435344 
 5116      5F456E61 
 5116      626C6500 
 5117              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
