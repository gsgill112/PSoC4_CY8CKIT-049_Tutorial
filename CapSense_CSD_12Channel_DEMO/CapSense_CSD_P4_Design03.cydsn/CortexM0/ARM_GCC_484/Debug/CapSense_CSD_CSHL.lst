ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSD_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_CSD_rawFilterData1,24,4
  18              		.global	CapSense_CSD_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_CSD_sensorBaseline, %object
  22              		.size	CapSense_CSD_sensorBaseline, 24
  23              	CapSense_CSD_sensorBaseline:
  24 0000 00000000 		.space	24
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.global	CapSense_CSD_sensorBaselineLow
  26              		.align	2
  27              		.type	CapSense_CSD_sensorBaselineLow, %object
  28              		.size	CapSense_CSD_sensorBaselineLow, 12
  29              	CapSense_CSD_sensorBaselineLow:
  30 0018 00000000 		.space	12
  30      00000000 
  30      00000000 
  31              		.global	CapSense_CSD_sensorSignal
  32              		.align	2
  33              		.type	CapSense_CSD_sensorSignal, %object
  34              		.size	CapSense_CSD_sensorSignal, 12
  35              	CapSense_CSD_sensorSignal:
  36 0024 00000000 		.space	12
  36      00000000 
  36      00000000 
  37              		.global	CapSense_CSD_sensorOnMask
  38              		.align	2
  39              		.type	CapSense_CSD_sensorOnMask, %object
  40              		.size	CapSense_CSD_sensorOnMask, 2
  41              	CapSense_CSD_sensorOnMask:
  42 0030 0000     		.space	2
  43              		.comm	CapSense_CSD_lowBaselineResetCnt,12,4
  44              		.global	CapSense_CSD_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_CSD_lowBaselineReset, %object
  48              		.size	CapSense_CSD_lowBaselineReset, 12
  49              	CapSense_CSD_lowBaselineReset:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 2


  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
  53 0003 1E       		.byte	30
  54 0004 1E       		.byte	30
  55 0005 1E       		.byte	30
  56 0006 1E       		.byte	30
  57 0007 1E       		.byte	30
  58 0008 1E       		.byte	30
  59 0009 1E       		.byte	30
  60 000a 1E       		.byte	30
  61 000b 1E       		.byte	30
  62              		.global	CapSense_CSD_enableRawFilters
  63              		.type	CapSense_CSD_enableRawFilters, %object
  64              		.size	CapSense_CSD_enableRawFilters, 1
  65              	CapSense_CSD_enableRawFilters:
  66 000c 01       		.byte	1
  67              		.comm	CapSense_CSD_fingerThreshold,1,4
  68              		.comm	CapSense_CSD_noiseThreshold,1,4
  69              		.comm	CapSense_CSD_negativeNoiseThreshold,1,4
  70              		.comm	CapSense_CSD_hysteresis,1,4
  71              		.global	CapSense_CSD_debounce
  72 000d 000000   		.align	2
  73              		.type	CapSense_CSD_debounce, %object
  74              		.size	CapSense_CSD_debounce, 1
  75              	CapSense_CSD_debounce:
  76 0010 01       		.byte	1
  77              		.global	CapSense_CSD_rawDataIndex
  78              		.section	.rodata
  79              		.align	2
  80              		.type	CapSense_CSD_rawDataIndex, %object
  81              		.size	CapSense_CSD_rawDataIndex, 1
  82              	CapSense_CSD_rawDataIndex:
  83 0000 00       		.space	1
  84              		.global	CapSense_CSD_numberOfSensors
  85 0001 000000   		.align	2
  86              		.type	CapSense_CSD_numberOfSensors, %object
  87              		.size	CapSense_CSD_numberOfSensors, 1
  88              	CapSense_CSD_numberOfSensors:
  89 0004 0C       		.byte	12
  90 0005 000000   		.align	2
  91              		.type	CapSense_CSD_centroidMult, %object
  92              		.size	CapSense_CSD_centroidMult, 2
  93              	CapSense_CSD_centroidMult:
  94 0008 8B0B     		.short	2955
  95 000a 0000     		.data
  96 0011 000000   		.align	2
  97              		.type	CapSense_CSD_posFiltersMask, %object
  98              		.size	CapSense_CSD_posFiltersMask, 1
  99              	CapSense_CSD_posFiltersMask:
 100 0014 10       		.byte	16
 101 0015 000000   		.align	2
 102              		.type	CapSense_CSD_posFiltersData, %object
 103              		.size	CapSense_CSD_posFiltersData, 3
 104              	CapSense_CSD_posFiltersData:
 105 0018 01       		.byte	1
 106 0019 00       		.byte	0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 3


 107 001a 00       		.byte	0
 108 001b 00       		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
 109              		.align	2
 110              		.global	CapSense_CSD_BaseInit
 111              		.code	16
 112              		.thumb_func
 113              		.type	CapSense_CSD_BaseInit, %function
 114              	CapSense_CSD_BaseInit:
 115              	.LFB33:
 116              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern void CapSense_CSD_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #elif ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint8 CapSense_CSD_sensorEnableMask[CapSense_CSD_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 4


  48:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	extern uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[CapSense_CSD_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineReset[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	extern CapSense_CSD_CONFIG_TYPE_P4_v2_10 CapSense_CSD_config;
  66:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_fingerThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_noiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_negativeNoiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_hysteresis[CapSense_CSD_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, 
  83:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_rawDataIndex[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_numberOfSensors[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     12u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static const uint16 CapSense_CSD_centroidMult[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     2955u, 
  95:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_posFiltersMask[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0x10u, 
  99:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_posFiltersData[] = {
 102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, 0u, 0u, 
 103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 5


 105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
 110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value. 
 115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and 
 116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and 
 118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an 
 119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store the fraction byte of 
 130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store a difference between 
 132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store a previous sample of 
 134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 117              		.loc 1 143 0
 118              		.cfi_startproc
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 82B0     		sub	sp, sp, #8
 124              		.cfi_def_cfa_offset 16
 125 0004 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 127 0006 7860     		str	r0, [r7, #4]
 144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 6


 151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 128              		.loc 1 160 0
 129 0008 0E4B     		ldr	r3, .L2
 130 000a 7A68     		ldr	r2, [r7, #4]
 131 000c 5200     		lsl	r2, r2, #1
 132 000e D15A     		ldrh	r1, [r2, r3]
 133 0010 0D4B     		ldr	r3, .L2+4
 134 0012 7A68     		ldr	r2, [r7, #4]
 135 0014 5200     		lsl	r2, r2, #1
 136 0016 D152     		strh	r1, [r2, r3]
 161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 137              		.loc 1 161 0
 138 0018 0C4A     		ldr	r2, .L2+8
 139 001a 7B68     		ldr	r3, [r7, #4]
 140 001c D318     		add	r3, r2, r3
 141 001e 0022     		mov	r2, #0
 142 0020 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 143              		.loc 1 162 0
 144 0022 0B4A     		ldr	r2, .L2+12
 145 0024 7B68     		ldr	r3, [r7, #4]
 146 0026 D318     		add	r3, r2, r3
 147 0028 0022     		mov	r2, #0
 148 002a 1A70     		strb	r2, [r3]
 163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
 164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) ||\
 167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)))
 168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) ||\
 173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) ||\
 174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) ||\
 175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) ||\
 176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             
 178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 149              		.loc 1 178 0
 150 002c 054B     		ldr	r3, .L2
 151 002e 7A68     		ldr	r2, [r7, #4]
 152 0030 5200     		lsl	r2, r2, #1
 153 0032 D15A     		ldrh	r1, [r2, r3]
 154 0034 074B     		ldr	r3, .L2+16
 155 0036 7A68     		ldr	r2, [r7, #4]
 156 0038 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 7


 157 003a D152     		strh	r1, [r2, r3]
 179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
 183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             */
 185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 158              		.loc 1 190 0
 159 003c BD46     		mov	sp, r7
 160 003e 02B0     		add	sp, sp, #8
 161              		@ sp needed
 162 0040 80BD     		pop	{r7, pc}
 163              	.L3:
 164 0042 C046     		.align	2
 165              	.L2:
 166 0044 00000000 		.word	CapSense_CSD_sensorRaw
 167 0048 00000000 		.word	CapSense_CSD_sensorBaseline
 168 004c 00000000 		.word	CapSense_CSD_sensorBaselineLow
 169 0050 00000000 		.word	CapSense_CSD_sensorSignal
 170 0054 00000000 		.word	CapSense_CSD_rawFilterData1
 171              		.cfi_endproc
 172              	.LFE33:
 173              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 174              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 175              		.align	2
 176              		.global	CapSense_CSD_InitializeSensorBaseline
 177              		.code	16
 178              		.thumb_func
 179              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 180              	CapSense_CSD_InitializeSensorBaseline:
 181              	.LFB34:
 191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  enabled.
 203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 8


 211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint32 sensor)
 218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 182              		.loc 1 218 0
 183              		.cfi_startproc
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 82B0     		sub	sp, sp, #8
 189              		.cfi_def_cfa_offset 16
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 0006 7860     		str	r0, [r7, #4]
 219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 193              		.loc 1 220 0
 194 0008 7B68     		ldr	r3, [r7, #4]
 195 000a 181C     		mov	r0, r3
 196 000c FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 197              		.loc 1 221 0
 198 0010 C046     		mov	r8, r8
 199              	.L5:
 200              		.loc 1 221 0 is_stmt 0 discriminator 1
 201 0012 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 202 0016 031C     		mov	r3, r0
 203 0018 002B     		cmp	r3, #0
 204 001a FAD1     		bne	.L5
 222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_BaseInit(sensor);
 205              		.loc 1 227 0 is_stmt 1
 206 001c 7B68     		ldr	r3, [r7, #4]
 207 001e 181C     		mov	r0, r3
 208 0020 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 209              		.loc 1 228 0
 210 0024 BD46     		mov	sp, r7
 211 0026 02B0     		add	sp, sp, #8
 212              		@ sp needed
 213 0028 80BD     		pop	{r7, pc}
 214              		.cfi_endproc
 215              	.LFE34:
 216              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 217 002a C046     		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 218              		.align	2
 219              		.global	CapSense_CSD_InitializeAllBaselines
 220              		.code	16
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 9


 221              		.thumb_func
 222              		.type	CapSense_CSD_InitializeAllBaselines, %function
 223              	CapSense_CSD_InitializeAllBaselines:
 224              	.LFB35:
 229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to load the 
 237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning 
 238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 225              		.loc 1 255 0
 226              		.cfi_startproc
 227 0000 80B5     		push	{r7, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 82B0     		sub	sp, sp, #8
 232              		.cfi_def_cfa_offset 16
 233 0004 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 235              		.loc 1 258 0
 236 0006 0023     		mov	r3, #0
 237 0008 7B60     		str	r3, [r7, #4]
 238 000a 06E0     		b	.L7
 239              	.L8:
 259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     	CapSense_CSD_InitializeSensorBaseline(i);
 240              		.loc 1 260 0 discriminator 2
 241 000c 7B68     		ldr	r3, [r7, #4]
 242 000e 181C     		mov	r0, r3
 243 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 244              		.loc 1 258 0 discriminator 2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 10


 245 0014 7B68     		ldr	r3, [r7, #4]
 246 0016 0133     		add	r3, r3, #1
 247 0018 7B60     		str	r3, [r7, #4]
 248              	.L7:
 258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 249              		.loc 1 258 0 is_stmt 0 discriminator 1
 250 001a 7B68     		ldr	r3, [r7, #4]
 251 001c 0B2B     		cmp	r3, #11
 252 001e F5D9     		bls	.L8
 261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 253              		.loc 1 262 0 is_stmt 1
 254 0020 BD46     		mov	sp, r7
 255 0022 02B0     		add	sp, sp, #8
 256              		@ sp needed
 257 0024 80BD     		pop	{r7, pc}
 258              		.cfi_endproc
 259              	.LFE35:
 260              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 261 0026 C046     		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 262              		.align	2
 263              		.global	CapSense_CSD_InitializeEnabledBaselines
 264              		.code	16
 265              		.thumb_func
 266              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 267              	CapSense_CSD_InitializeEnabledBaselines:
 268              	.LFB36:
 263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorRaw[] - used to store the sensors raw data.
 283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 269              		.loc 1 290 0
 270              		.cfi_startproc
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 11


 271 0000 80B5     		push	{r7, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 7, -8
 274              		.cfi_offset 14, -4
 275 0002 82B0     		sub	sp, sp, #8
 276              		.cfi_def_cfa_offset 16
 277 0004 00AF     		add	r7, sp, #0
 278              		.cfi_def_cfa_register 7
 291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 279              		.loc 1 294 0
 280 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 281              		.loc 1 295 0
 282 000a C046     		mov	r8, r8
 283              	.L10:
 284              		.loc 1 295 0 is_stmt 0 discriminator 1
 285 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 286 0010 031C     		mov	r3, r0
 287 0012 002B     		cmp	r3, #0
 288 0014 FAD1     		bne	.L10
 296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 289              		.loc 1 300 0 is_stmt 1
 290 0016 0023     		mov	r3, #0
 291 0018 7B60     		str	r3, [r7, #4]
 292 001a 11E0     		b	.L11
 293              	.L13:
 301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 294              		.loc 1 302 0
 295 001c 0B4A     		ldr	r2, .L14
 296 001e 7B68     		ldr	r3, [r7, #4]
 297 0020 101C     		mov	r0, r2
 298 0022 191C     		mov	r1, r3
 299 0024 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 300 0028 031C     		mov	r3, r0
 301 002a 3B60     		str	r3, [r7]
 303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
 304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(isSensorEnabled != 0u)
 302              		.loc 1 305 0
 303 002c 3B68     		ldr	r3, [r7]
 304 002e 002B     		cmp	r3, #0
 305 0030 03D0     		beq	.L12
 306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Initialize baselines */
 308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(i);
 306              		.loc 1 308 0
 307 0032 7B68     		ldr	r3, [r7, #4]
 308 0034 181C     		mov	r0, r3
 309 0036 FFF7FEFF 		bl	CapSense_CSD_BaseInit
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 12


 310              	.L12:
 300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 311              		.loc 1 300 0
 312 003a 7B68     		ldr	r3, [r7, #4]
 313 003c 0133     		add	r3, r3, #1
 314 003e 7B60     		str	r3, [r7, #4]
 315              	.L11:
 300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 316              		.loc 1 300 0 is_stmt 0 discriminator 1
 317 0040 7B68     		ldr	r3, [r7, #4]
 318 0042 0B2B     		cmp	r3, #11
 319 0044 EAD9     		bls	.L13
 309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }  
 320              		.loc 1 311 0 is_stmt 1
 321 0046 BD46     		mov	sp, r7
 322 0048 02B0     		add	sp, sp, #8
 323              		@ sp needed
 324 004a 80BD     		pop	{r7, pc}
 325              	.L15:
 326              		.align	2
 327              	.L14:
 328 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 329              		.cfi_endproc
 330              	.LFE36:
 331              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 332              		.section	.text.CapSense_CSD_UpdateBaselineNoThreshold,"ax",%progbits
 333              		.align	2
 334              		.global	CapSense_CSD_UpdateBaselineNoThreshold
 335              		.code	16
 336              		.thumb_func
 337              		.type	CapSense_CSD_UpdateBaselineNoThreshold, %function
 338              	CapSense_CSD_UpdateBaselineNoThreshold:
 339              	.LFB37:
 312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateBaselineNoThreshold
 316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor]. 
 323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  than noise threshold.
 327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 13


 334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline value.
 343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store difference between 
 344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateBaselineNoThreshold(uint32 sensor)
 355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 340              		.loc 1 355 0
 341              		.cfi_startproc
 342 0000 90B5     		push	{r4, r7, lr}
 343              		.cfi_def_cfa_offset 12
 344              		.cfi_offset 4, -12
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 87B0     		sub	sp, sp, #28
 348              		.cfi_def_cfa_offset 40
 349 0004 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 351 0006 7860     		str	r0, [r7, #4]
 356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 calc;
 357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint32 sign;
 358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 352              		.loc 1 360 0
 353 0008 3B1C     		mov	r3, r7
 354 000a 0F33     		add	r3, r3, #15
 355 000c 7A49     		ldr	r1, .L29
 356 000e 7A68     		ldr	r2, [r7, #4]
 357 0010 8A18     		add	r2, r1, r2
 358 0012 1278     		ldrb	r2, [r2]
 359 0014 1A70     		strb	r2, [r3]
 361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 360              		.loc 1 361 0
 361 0016 3B1C     		mov	r3, r7
 362 0018 0F33     		add	r3, r3, #15
 363 001a 1A78     		ldrb	r2, [r3]
 364 001c 3B1C     		mov	r3, r7
 365 001e 0E33     		add	r3, r3, #14
 366 0020 7649     		ldr	r1, .L29+4
 367 0022 8A5C     		ldrb	r2, [r1, r2]
 368 0024 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 14


 362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 369              		.loc 1 369 0
 370 0026 3B1C     		mov	r3, r7
 371 0028 1033     		add	r3, r3, #16
 372 002a 754A     		ldr	r2, .L29+8
 373 002c 7968     		ldr	r1, [r7, #4]
 374 002e 4900     		lsl	r1, r1, #1
 375 0030 8A5A     		ldrh	r2, [r1, r2]
 376 0032 1A80     		strh	r2, [r3]
 370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#if (CapSense_CSD_RAW_FILTER_MASK != 0u)
 372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	if(CapSense_CSD_enableRawFilters != 0u)
 377              		.loc 1 372 0
 378 0034 734B     		ldr	r3, .L29+12
 379 0036 1B78     		ldrb	r3, [r3]
 380 0038 002B     		cmp	r3, #0
 381 003a 15D0     		beq	.L17
 373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			tempRaw = filteredRawData;
 376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData1[sensor]
 377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 															CapSense_CSD_rawFilterData2[sensor]);
 378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			tempRaw = filteredRawData;
 383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 															   CapSense_CSD_rawFilterData2[sensor]);
 385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[sensor]);
 390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[sensor]);
 382              		.loc 1 393 0
 383 003c 724B     		ldr	r3, .L29+16
 384 003e 7A68     		ldr	r2, [r7, #4]
 385 0040 5200     		lsl	r2, r2, #1
 386 0042 D35A     		ldrh	r3, [r2, r3]
 387 0044 3C1C     		mov	r4, r7
 388 0046 1034     		add	r4, r4, #16
 389 0048 3A1C     		mov	r2, r7
 390 004a 1032     		add	r2, r2, #16
 391 004c 1288     		ldrh	r2, [r2]
 392 004e 101C     		mov	r0, r2
 393 0050 191C     		mov	r1, r3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 15


 394 0052 FFF7FEFF 		bl	CapSense_CSD_IIR4Filter
 395 0056 031C     		mov	r3, r0
 396 0058 2380     		strh	r3, [r4]
 394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 397              		.loc 1 394 0
 398 005a 6B4B     		ldr	r3, .L29+16
 399 005c 7A68     		ldr	r2, [r7, #4]
 400 005e 5200     		lsl	r2, r2, #1
 401 0060 391C     		mov	r1, r7
 402 0062 1031     		add	r1, r1, #16
 403 0064 0988     		ldrh	r1, [r1]
 404 0066 D152     		strh	r1, [r2, r3]
 405              	.L17:
 395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 				
 396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData1[sensor]
 398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[sensor]);
 402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1[sensor])
 406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			
 408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#else
 409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			/* No Raw filters */
 410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
 413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
 414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_10(&CapSense_CSD_config, (uint8)sensor, CapSense_CSD_sensorRaw);
 406              		.loc 1 415 0
 407 0068 7B68     		ldr	r3, [r7, #4]
 408 006a DAB2     		uxtb	r2, r3
 409 006c 6749     		ldr	r1, .L29+20
 410 006e 644B     		ldr	r3, .L29+8
 411 0070 081C     		mov	r0, r1
 412 0072 111C     		mov	r1, r2
 413 0074 1A1C     		mov	r2, r3
 414 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_10
 416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 415              		.loc 1 420 0
 416 007a 654B     		ldr	r3, .L29+24
 417 007c 7A68     		ldr	r2, [r7, #4]
 418 007e 5200     		lsl	r2, r2, #1
 419 0080 D35A     		ldrh	r3, [r2, r3]
 420 0082 3A1C     		mov	r2, r7
 421 0084 1032     		add	r2, r2, #16
 422 0086 1288     		ldrh	r2, [r2]
 423 0088 9A42     		cmp	r2, r3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 16


 424 008a 12D3     		bcc	.L18
 421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;	
 425              		.loc 1 422 0
 426 008c 614A     		ldr	r2, .L29+28
 427 008e 7B68     		ldr	r3, [r7, #4]
 428 0090 D318     		add	r3, r2, r3
 429 0092 0022     		mov	r2, #0
 430 0094 1A70     		strb	r2, [r3]
 423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 431              		.loc 1 423 0
 432 0096 5E4B     		ldr	r3, .L29+24
 433 0098 7A68     		ldr	r2, [r7, #4]
 434 009a 5200     		lsl	r2, r2, #1
 435 009c D25A     		ldrh	r2, [r2, r3]
 436 009e 3B1C     		mov	r3, r7
 437 00a0 1233     		add	r3, r3, #18
 438 00a2 391C     		mov	r1, r7
 439 00a4 1031     		add	r1, r1, #16
 440 00a6 0988     		ldrh	r1, [r1]
 441 00a8 8A1A     		sub	r2, r1, r2
 442 00aa 1A80     		strh	r2, [r3]
 424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 443              		.loc 1 424 0
 444 00ac 0123     		mov	r3, #1
 445 00ae 7B61     		str	r3, [r7, #20]
 446 00b0 0CE0     		b	.L19
 447              	.L18:
 425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 448              		.loc 1 428 0
 449 00b2 574B     		ldr	r3, .L29+24
 450 00b4 7A68     		ldr	r2, [r7, #4]
 451 00b6 5200     		lsl	r2, r2, #1
 452 00b8 D15A     		ldrh	r1, [r2, r3]
 453 00ba 3B1C     		mov	r3, r7
 454 00bc 1233     		add	r3, r3, #18
 455 00be 3A1C     		mov	r2, r7
 456 00c0 1032     		add	r2, r2, #16
 457 00c2 1288     		ldrh	r2, [r2]
 458 00c4 8A1A     		sub	r2, r1, r2
 459 00c6 1A80     		strh	r2, [r3]
 429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 460              		.loc 1 429 0
 461 00c8 0023     		mov	r3, #0
 462 00ca 7B61     		str	r3, [r7, #20]
 463              	.L19:
 430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_negativeNoiseThreshold[widget]))
 464              		.loc 1 433 0
 465 00cc 7B69     		ldr	r3, [r7, #20]
 466 00ce 002B     		cmp	r3, #0
 467 00d0 28D1     		bne	.L20
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 17


 468              		.loc 1 433 0 is_stmt 0 discriminator 1
 469 00d2 3B1C     		mov	r3, r7
 470 00d4 0F33     		add	r3, r3, #15
 471 00d6 1B78     		ldrb	r3, [r3]
 472 00d8 4F4A     		ldr	r2, .L29+32
 473 00da D35C     		ldrb	r3, [r2, r3]
 474 00dc 3A1C     		mov	r2, r7
 475 00de 1232     		add	r2, r2, #18
 476 00e0 1288     		ldrh	r2, [r2]
 477 00e2 9A42     		cmp	r2, r3
 478 00e4 1ED9     		bls	.L20
 434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#else
 435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */ 
 437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 479              		.loc 1 438 0 is_stmt 1
 480 00e6 4B4A     		ldr	r2, .L29+28
 481 00e8 7B68     		ldr	r3, [r7, #4]
 482 00ea D318     		add	r3, r2, r3
 483 00ec 1A78     		ldrb	r2, [r3]
 484 00ee 4B49     		ldr	r1, .L29+36
 485 00f0 7B68     		ldr	r3, [r7, #4]
 486 00f2 CB18     		add	r3, r1, r3
 487 00f4 1B78     		ldrb	r3, [r3]
 488 00f6 9A42     		cmp	r2, r3
 489 00f8 09D3     		bcc	.L21
 439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 490              		.loc 1 440 0
 491 00fa 7B68     		ldr	r3, [r7, #4]
 492 00fc 181C     		mov	r0, r3
 493 00fe FFF7FEFF 		bl	CapSense_CSD_BaseInit
 441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 494              		.loc 1 441 0
 495 0102 444A     		ldr	r2, .L29+28
 496 0104 7B68     		ldr	r3, [r7, #4]
 497 0106 D318     		add	r3, r2, r3
 498 0108 0022     		mov	r2, #0
 499 010a 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 500              		.loc 1 438 0
 501 010c 4CE0     		b	.L23
 502              	.L21:
 442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
 444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 503              		.loc 1 445 0
 504 010e 414A     		ldr	r2, .L29+28
 505 0110 7B68     		ldr	r3, [r7, #4]
 506 0112 D318     		add	r3, r2, r3
 507 0114 1B78     		ldrb	r3, [r3]
 508 0116 0133     		add	r3, r3, #1
 509 0118 DAB2     		uxtb	r2, r3
 510 011a 3E49     		ldr	r1, .L29+28
 511 011c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 18


 512 011e CB18     		add	r3, r1, r3
 513 0120 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 514              		.loc 1 438 0
 515 0122 41E0     		b	.L23
 516              	.L20:
 446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)			
 452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 517              		.loc 1 453 0
 518 0124 3B1C     		mov	r3, r7
 519 0126 0E33     		add	r3, r3, #14
 520 0128 1B78     		ldrb	r3, [r3]
 521 012a 9BB2     		uxth	r3, r3
 522 012c 3A1C     		mov	r2, r7
 523 012e 1232     		add	r2, r2, #18
 524 0130 1288     		ldrh	r2, [r2]
 525 0132 9A42     		cmp	r2, r3
 526 0134 0CD9     		bls	.L24
 454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 527              		.loc 1 454 0 discriminator 1
 528 0136 3B1C     		mov	r3, r7
 529 0138 0F33     		add	r3, r3, #15
 530 013a 1B78     		ldrb	r3, [r3]
 531 013c 364A     		ldr	r2, .L29+32
 532 013e D35C     		ldrb	r3, [r2, r3]
 453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 533              		.loc 1 453 0 discriminator 1
 534 0140 3A1C     		mov	r2, r7
 535 0142 1232     		add	r2, r2, #18
 536 0144 1288     		ldrh	r2, [r2]
 537 0146 9A42     		cmp	r2, r3
 538 0148 2ED2     		bcs	.L23
 455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			   && (sign == 0u)))
 539              		.loc 1 455 0
 540 014a 7B69     		ldr	r3, [r7, #20]
 541 014c 002B     		cmp	r3, #0
 542 014e 2BD1     		bne	.L23
 543              	.L24:
 456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			{
 457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#else
 458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 				   && (sign == 0u)))
 462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			{
 463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */ 
 464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 544              		.loc 1 466 0
 545 0150 2F4B     		ldr	r3, .L29+24
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 19


 546 0152 7A68     		ldr	r2, [r7, #4]
 547 0154 5200     		lsl	r2, r2, #1
 548 0156 D35A     		ldrh	r3, [r2, r3]
 549 0158 1B02     		lsl	r3, r3, #8
 550 015a BB60     		str	r3, [r7, #8]
 467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 551              		.loc 1 467 0
 552 015c 304A     		ldr	r2, .L29+40
 553 015e 7B68     		ldr	r3, [r7, #4]
 554 0160 D318     		add	r3, r2, r3
 555 0162 1B78     		ldrb	r3, [r3]
 556 0164 BA68     		ldr	r2, [r7, #8]
 557 0166 1343     		orr	r3, r2
 558 0168 BB60     		str	r3, [r7, #8]
 468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 559              		.loc 1 470 0
 560 016a 3B1C     		mov	r3, r7
 561 016c 1033     		add	r3, r3, #16
 562 016e 1B88     		ldrh	r3, [r3]
 563 0170 BA68     		ldr	r2, [r7, #8]
 564 0172 D318     		add	r3, r2, r3
 565 0174 BB60     		str	r3, [r7, #8]
 471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 566              		.loc 1 473 0
 567 0176 264B     		ldr	r3, .L29+24
 568 0178 7A68     		ldr	r2, [r7, #4]
 569 017a 5200     		lsl	r2, r2, #1
 570 017c D35A     		ldrh	r3, [r2, r3]
 571 017e BA68     		ldr	r2, [r7, #8]
 572 0180 D31A     		sub	r3, r2, r3
 573 0182 BB60     		str	r3, [r7, #8]
 474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 574              		.loc 1 476 0
 575 0184 BB68     		ldr	r3, [r7, #8]
 576 0186 1B0A     		lsr	r3, r3, #8
 577 0188 99B2     		uxth	r1, r3
 578 018a 214B     		ldr	r3, .L29+24
 579 018c 7A68     		ldr	r2, [r7, #4]
 580 018e 5200     		lsl	r2, r2, #1
 581 0190 D152     		strh	r1, [r2, r3]
 477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 582              		.loc 1 477 0
 583 0192 BB68     		ldr	r3, [r7, #8]
 584 0194 DAB2     		uxtb	r2, r3
 585 0196 2249     		ldr	r1, .L29+40
 586 0198 7B68     		ldr	r3, [r7, #4]
 587 019a CB18     		add	r3, r1, r3
 588 019c 1A70     		strb	r2, [r3]
 478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 589              		.loc 1 479 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 20


 590 019e 1D4A     		ldr	r2, .L29+28
 591 01a0 7B68     		ldr	r3, [r7, #4]
 592 01a2 D318     		add	r3, r2, r3
 593 01a4 0022     		mov	r2, #0
 594 01a6 1A70     		strb	r2, [r3]
 595              	.L23:
 480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 596              		.loc 1 486 0
 597 01a8 3B1C     		mov	r3, r7
 598 01aa 0E33     		add	r3, r3, #14
 599 01ac 1B78     		ldrb	r3, [r3]
 600 01ae 9BB2     		uxth	r3, r3
 601 01b0 3A1C     		mov	r2, r7
 602 01b2 1232     		add	r2, r2, #18
 603 01b4 1288     		ldrh	r2, [r2]
 604 01b6 9A42     		cmp	r2, r3
 605 01b8 16D9     		bls	.L25
 606              		.loc 1 486 0 is_stmt 0 discriminator 1
 607 01ba 7B69     		ldr	r3, [r7, #20]
 608 01bc 002B     		cmp	r3, #0
 609 01be 13D0     		beq	.L25
 487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 610              		.loc 1 490 0 is_stmt 1
 611 01c0 3B1C     		mov	r3, r7
 612 01c2 1233     		add	r3, r3, #18
 613 01c4 1B88     		ldrh	r3, [r3]
 614 01c6 FF2B     		cmp	r3, #255
 615 01c8 05D9     		bls	.L26
 491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 616              		.loc 1 492 0
 617 01ca 164A     		ldr	r2, .L29+44
 618 01cc 7B68     		ldr	r3, [r7, #4]
 619 01ce D318     		add	r3, r2, r3
 620 01d0 FF22     		mov	r2, #255
 621 01d2 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 622              		.loc 1 490 0
 623 01d4 0DE0     		b	.L16
 624              	.L26:
 493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }    
 494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else 
 495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 625              		.loc 1 496 0
 626 01d6 3B1C     		mov	r3, r7
 627 01d8 1233     		add	r3, r3, #18
 628 01da 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 21


 629 01dc DAB2     		uxtb	r2, r3
 630 01de 1149     		ldr	r1, .L29+44
 631 01e0 7B68     		ldr	r3, [r7, #4]
 632 01e2 CB18     		add	r3, r1, r3
 633 01e4 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 634              		.loc 1 490 0
 635 01e6 04E0     		b	.L16
 636              	.L25:
 497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 637              		.loc 1 505 0
 638 01e8 0E4A     		ldr	r2, .L29+44
 639 01ea 7B68     		ldr	r3, [r7, #4]
 640 01ec D318     		add	r3, r2, r3
 641 01ee 0022     		mov	r2, #0
 642 01f0 1A70     		strb	r2, [r3]
 643              	.L16:
 506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 644              		.loc 1 512 0
 645 01f2 BD46     		mov	sp, r7
 646 01f4 07B0     		add	sp, sp, #28
 647              		@ sp needed
 648 01f6 90BD     		pop	{r4, r7, pc}
 649              	.L30:
 650              		.align	2
 651              	.L29:
 652 01f8 00000000 		.word	CapSense_CSD_widgetNumber
 653 01fc 00000000 		.word	CapSense_CSD_noiseThreshold
 654 0200 00000000 		.word	CapSense_CSD_sensorRaw
 655 0204 00000000 		.word	CapSense_CSD_enableRawFilters
 656 0208 00000000 		.word	CapSense_CSD_rawFilterData1
 657 020c 00000000 		.word	CapSense_CSD_config
 658 0210 00000000 		.word	CapSense_CSD_sensorBaseline
 659 0214 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 660 0218 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 661 021c 00000000 		.word	CapSense_CSD_lowBaselineReset
 662 0220 00000000 		.word	CapSense_CSD_sensorBaselineLow
 663 0224 00000000 		.word	CapSense_CSD_sensorSignal
 664              		.cfi_endproc
 665              	.LFE37:
 666              		.size	CapSense_CSD_UpdateBaselineNoThreshold, .-CapSense_CSD_UpdateBaselineNoThreshold
 667              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 668              		.align	2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 22


 669              		.global	CapSense_CSD_UpdateSensorBaseline
 670              		.code	16
 671              		.thumb_func
 672              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 673              	CapSense_CSD_UpdateSensorBaseline:
 674              	.LFB38:
 513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor]. 
 524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  if signal is less than noise threshold.
 528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint32 sensor)
 546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 675              		.loc 1 546 0
 676              		.cfi_startproc
 677 0000 80B5     		push	{r7, lr}
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 681 0002 82B0     		sub	sp, sp, #8
 682              		.cfi_def_cfa_offset 16
 683 0004 00AF     		add	r7, sp, #0
 684              		.cfi_def_cfa_register 7
 685 0006 7860     		str	r0, [r7, #4]
 547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		uint32 widget;
 549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		
 550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		widget = CapSense_CSD_widgetNumber[sensor];
 551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
 552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 23


 553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     	CapSense_CSD_UpdateThresholds(sensor);
 686              		.loc 1 558 0
 687 0008 7B68     		ldr	r3, [r7, #4]
 688 000a 181C     		mov	r0, r3
 689 000c FFF7FEFF 		bl	CapSense_CSD_UpdateThresholds
 559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_UpdateBaselineNoThreshold(sensor);
 690              		.loc 1 561 0
 691 0010 7B68     		ldr	r3, [r7, #4]
 692 0012 181C     		mov	r0, r3
 693 0014 FFF7FEFF 		bl	CapSense_CSD_UpdateBaselineNoThreshold
 562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 694              		.loc 1 567 0
 695 0018 BD46     		mov	sp, r7
 696 001a 02B0     		add	sp, sp, #8
 697              		@ sp needed
 698 001c 80BD     		pop	{r7, pc}
 699              		.cfi_endproc
 700              	.LFE38:
 701              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 702 001e C046     		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 703              		.align	2
 704              		.global	CapSense_CSD_UpdateEnabledBaselines
 705              		.code	16
 706              		.thumb_func
 707              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 708              	CapSense_CSD_UpdateEnabledBaselines:
 709              	.LFB39:
 568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors.
 578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 24


 586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 710              		.loc 1 600 0
 711              		.cfi_startproc
 712 0000 80B5     		push	{r7, lr}
 713              		.cfi_def_cfa_offset 8
 714              		.cfi_offset 7, -8
 715              		.cfi_offset 14, -4
 716 0002 82B0     		sub	sp, sp, #8
 717              		.cfi_def_cfa_offset 16
 718 0004 00AF     		add	r7, sp, #0
 719              		.cfi_def_cfa_register 7
 601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 720              		.loc 1 604 0
 721 0006 0023     		mov	r3, #0
 722 0008 7B60     		str	r3, [r7, #4]
 723 000a 11E0     		b	.L33
 724              	.L35:
 605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 725              		.loc 1 606 0
 726 000c 0B4A     		ldr	r2, .L36
 727 000e 7B68     		ldr	r3, [r7, #4]
 728 0010 101C     		mov	r0, r2
 729 0012 191C     		mov	r1, r3
 730 0014 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 731 0018 031C     		mov	r3, r0
 732 001a 3B60     		str	r3, [r7]
 607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
 608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 733              		.loc 1 608 0
 734 001c 3B68     		ldr	r3, [r7]
 735 001e 002B     		cmp	r3, #0
 736 0020 03D0     		beq	.L34
 609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 737              		.loc 1 610 0
 738 0022 7B68     		ldr	r3, [r7, #4]
 739 0024 181C     		mov	r0, r3
 740 0026 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 741              	.L34:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 25


 604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 742              		.loc 1 604 0
 743 002a 7B68     		ldr	r3, [r7, #4]
 744 002c 0133     		add	r3, r3, #1
 745 002e 7B60     		str	r3, [r7, #4]
 746              	.L33:
 604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 747              		.loc 1 604 0 is_stmt 0 discriminator 1
 748 0030 7B68     		ldr	r3, [r7, #4]
 749 0032 0B2B     		cmp	r3, #11
 750 0034 EAD9     		bls	.L35
 611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 751              		.loc 1 613 0 is_stmt 1
 752 0036 BD46     		mov	sp, r7
 753 0038 02B0     		add	sp, sp, #8
 754              		@ sp needed
 755 003a 80BD     		pop	{r7, pc}
 756              	.L37:
 757              		.align	2
 758              	.L36:
 759 003c 00000000 		.word	CapSense_CSD_sensorEnableMask
 760              		.cfi_endproc
 761              	.LFE39:
 762              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 763              		.section	.text.CapSense_CSD_UpdateWidgetBaseline,"ax",%progbits
 764              		.align	2
 765              		.global	CapSense_CSD_UpdateWidgetBaseline
 766              		.code	16
 767              		.thumb_func
 768              		.type	CapSense_CSD_UpdateWidgetBaseline, %function
 769              	CapSense_CSD_UpdateWidgetBaseline:
 770              	.LFB40:
 614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateWidgetBaseline
 617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors that belong to widget.
 623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  Widget number.
 626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 26


 637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateWidgetBaseline(uint32 widget)
 645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 771              		.loc 1 645 0
 772              		.cfi_startproc
 773 0000 80B5     		push	{r7, lr}
 774              		.cfi_def_cfa_offset 8
 775              		.cfi_offset 7, -8
 776              		.cfi_offset 14, -4
 777 0002 88B0     		sub	sp, sp, #32
 778              		.cfi_def_cfa_offset 40
 779 0004 00AF     		add	r7, sp, #0
 780              		.cfi_def_cfa_register 7
 781 0006 7860     		str	r0, [r7, #4]
 646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sensorsPerWidget;
 647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 firstSensor;
 648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 lastSensor;
 649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
 652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/* Get number of sensors in widget */
 653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
 782              		.loc 1 653 0
 783 0008 0C23     		mov	r3, #12
 784 000a BB61     		str	r3, [r7, #24]
 654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/* Get first sensor in widget */
 656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	firstSensor = CapSense_CSD_rawDataIndex[widget];
 785              		.loc 1 656 0
 786 000c 0023     		mov	r3, #0
 787 000e 7B61     		str	r3, [r7, #20]
 657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
 658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/* Get last sensor in widget */
 659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget);
 788              		.loc 1 659 0
 789 0010 0023     		mov	r3, #0
 790 0012 1A1C     		mov	r2, r3
 791 0014 BB69     		ldr	r3, [r7, #24]
 792 0016 D318     		add	r3, r2, r3
 793 0018 3B61     		str	r3, [r7, #16]
 660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
 661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 794              		.loc 1 661 0
 795 001a 7B69     		ldr	r3, [r7, #20]
 796 001c FB61     		str	r3, [r7, #28]
 797 001e 11E0     		b	.L39
 798              	.L41:
 662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 799              		.loc 1 663 0
 800 0020 0C4A     		ldr	r2, .L42
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 27


 801 0022 FB69     		ldr	r3, [r7, #28]
 802 0024 101C     		mov	r0, r2
 803 0026 191C     		mov	r1, r3
 804 0028 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 805 002c 031C     		mov	r3, r0
 806 002e FB60     		str	r3, [r7, #12]
 664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
 665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 807              		.loc 1 665 0
 808 0030 FB68     		ldr	r3, [r7, #12]
 809 0032 002B     		cmp	r3, #0
 810 0034 03D0     		beq	.L40
 666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 811              		.loc 1 667 0
 812 0036 FB69     		ldr	r3, [r7, #28]
 813 0038 181C     		mov	r0, r3
 814 003a FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 815              	.L40:
 661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 816              		.loc 1 661 0
 817 003e FB69     		ldr	r3, [r7, #28]
 818 0040 0133     		add	r3, r3, #1
 819 0042 FB61     		str	r3, [r7, #28]
 820              	.L39:
 661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 821              		.loc 1 661 0 is_stmt 0 discriminator 1
 822 0044 FA69     		ldr	r2, [r7, #28]
 823 0046 3B69     		ldr	r3, [r7, #16]
 824 0048 9A42     		cmp	r2, r3
 825 004a E9D3     		bcc	.L41
 668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 826              		.loc 1 670 0 is_stmt 1
 827 004c BD46     		mov	sp, r7
 828 004e 08B0     		add	sp, sp, #32
 829              		@ sp needed
 830 0050 80BD     		pop	{r7, pc}
 831              	.L43:
 832 0052 C046     		.align	2
 833              	.L42:
 834 0054 00000000 		.word	CapSense_CSD_sensorEnableMask
 835              		.cfi_endproc
 836              	.LFE40:
 837              		.size	CapSense_CSD_UpdateWidgetBaseline, .-CapSense_CSD_UpdateWidgetBaseline
 838              		.section	.text.CapSense_CSD_GetBaselineData,"ax",%progbits
 839              		.align	2
 840              		.global	CapSense_CSD_GetBaselineData
 841              		.code	16
 842              		.thumb_func
 843              		.type	CapSense_CSD_GetBaselineData, %function
 844              	CapSense_CSD_GetBaselineData:
 845              	.LFB41:
 671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 28


 674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetBaselineData
 675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the sensor baseline from the component.
 679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with an initial values by scanning
 688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetBaselineData(uint32 sensor)
 694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 846              		.loc 1 694 0
 847              		.cfi_startproc
 848 0000 80B5     		push	{r7, lr}
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 7, -8
 851              		.cfi_offset 14, -4
 852 0002 82B0     		sub	sp, sp, #8
 853              		.cfi_def_cfa_offset 16
 854 0004 00AF     		add	r7, sp, #0
 855              		.cfi_def_cfa_register 7
 856 0006 7860     		str	r0, [r7, #4]
 695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return (CapSense_CSD_sensorBaseline[sensor]);
 857              		.loc 1 695 0
 858 0008 034B     		ldr	r3, .L46
 859 000a 7A68     		ldr	r2, [r7, #4]
 860 000c 5200     		lsl	r2, r2, #1
 861 000e D35A     		ldrh	r3, [r2, r3]
 696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 862              		.loc 1 696 0
 863 0010 181C     		mov	r0, r3
 864 0012 BD46     		mov	sp, r7
 865 0014 02B0     		add	sp, sp, #8
 866              		@ sp needed
 867 0016 80BD     		pop	{r7, pc}
 868              	.L47:
 869              		.align	2
 870              	.L46:
 871 0018 00000000 		.word	CapSense_CSD_sensorBaseline
 872              		.cfi_endproc
 873              	.LFE41:
 874              		.size	CapSense_CSD_GetBaselineData, .-CapSense_CSD_GetBaselineData
 875              		.section	.text.CapSense_CSD_SetBaselineData,"ax",%progbits
 876              		.align	2
 877              		.global	CapSense_CSD_SetBaselineData
 878              		.code	16
 879              		.thumb_func
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 29


 880              		.type	CapSense_CSD_SetBaselineData, %function
 881              	CapSense_CSD_SetBaselineData:
 882              	.LFB42:
 697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetBaselineData
 701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  data:    Sensor baseline.
 709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with initial values by scanning
 715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetBaselineData(uint32 sensor, uint16 data)
 721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 883              		.loc 1 721 0
 884              		.cfi_startproc
 885 0000 80B5     		push	{r7, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 7, -8
 888              		.cfi_offset 14, -4
 889 0002 82B0     		sub	sp, sp, #8
 890              		.cfi_def_cfa_offset 16
 891 0004 00AF     		add	r7, sp, #0
 892              		.cfi_def_cfa_register 7
 893 0006 7860     		str	r0, [r7, #4]
 894 0008 0A1C     		mov	r2, r1
 895 000a BB1C     		add	r3, r7, #2
 896 000c 1A80     		strh	r2, [r3]
 722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	CapSense_CSD_sensorBaseline[sensor] = data;
 897              		.loc 1 722 0
 898 000e 044B     		ldr	r3, .L49
 899 0010 7A68     		ldr	r2, [r7, #4]
 900 0012 5200     		lsl	r2, r2, #1
 901 0014 B91C     		add	r1, r7, #2
 902 0016 0988     		ldrh	r1, [r1]
 903 0018 D152     		strh	r1, [r2, r3]
 723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 904              		.loc 1 723 0
 905 001a BD46     		mov	sp, r7
 906 001c 02B0     		add	sp, sp, #8
 907              		@ sp needed
 908 001e 80BD     		pop	{r7, pc}
 909              	.L50:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 30


 910              		.align	2
 911              	.L49:
 912 0020 00000000 		.word	CapSense_CSD_sensorBaseline
 913              		.cfi_endproc
 914              	.LFE42:
 915              		.size	CapSense_CSD_SetBaselineData, .-CapSense_CSD_SetBaselineData
 916              		.section	.text.CapSense_CSD_GetDiffCountData,"ax",%progbits
 917              		.align	2
 918              		.global	CapSense_CSD_GetDiffCountData
 919              		.code	16
 920              		.thumb_func
 921              		.type	CapSense_CSD_GetDiffCountData, %function
 922              	CapSense_CSD_GetDiffCountData:
 923              	.LFB43:
 724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDiffCountData
 728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function returns the Sensor Signal from the component.
 732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  argument. 
 739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDiffCountData(uint32 sensor)
 748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 924              		.loc 1 748 0
 925              		.cfi_startproc
 926 0000 80B5     		push	{r7, lr}
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 7, -8
 929              		.cfi_offset 14, -4
 930 0002 82B0     		sub	sp, sp, #8
 931              		.cfi_def_cfa_offset 16
 932 0004 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 934 0006 7860     		str	r0, [r7, #4]
 749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return (CapSense_CSD_sensorSignal[sensor]);
 935              		.loc 1 749 0
 936 0008 034A     		ldr	r2, .L53
 937 000a 7B68     		ldr	r3, [r7, #4]
 938 000c D318     		add	r3, r2, r3
 939 000e 1B78     		ldrb	r3, [r3]
 750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 31


 940              		.loc 1 750 0
 941 0010 181C     		mov	r0, r3
 942 0012 BD46     		mov	sp, r7
 943 0014 02B0     		add	sp, sp, #8
 944              		@ sp needed
 945 0016 80BD     		pop	{r7, pc}
 946              	.L54:
 947              		.align	2
 948              	.L53:
 949 0018 00000000 		.word	CapSense_CSD_sensorSignal
 950              		.cfi_endproc
 951              	.LFE43:
 952              		.size	CapSense_CSD_GetDiffCountData, .-CapSense_CSD_GetDiffCountData
 953              		.section	.text.CapSense_CSD_SetDiffCountData,"ax",%progbits
 954              		.align	2
 955              		.global	CapSense_CSD_SetDiffCountData
 956              		.code	16
 957              		.thumb_func
 958              		.type	CapSense_CSD_SetDiffCountData, %function
 959              	CapSense_CSD_SetDiffCountData:
 960              	.LFB44:
 751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetDiffCountData
 755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  value:   Sensor signal.
 763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None. 
 766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetDiffCountData(uint32 sensor, uint8 value)
 775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 961              		.loc 1 775 0
 962              		.cfi_startproc
 963 0000 80B5     		push	{r7, lr}
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 7, -8
 966              		.cfi_offset 14, -4
 967 0002 82B0     		sub	sp, sp, #8
 968              		.cfi_def_cfa_offset 16
 969 0004 00AF     		add	r7, sp, #0
 970              		.cfi_def_cfa_register 7
 971 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 32


 972 0008 0A1C     		mov	r2, r1
 973 000a FB1C     		add	r3, r7, #3
 974 000c 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = value;
 975              		.loc 1 776 0
 976 000e 044A     		ldr	r2, .L56
 977 0010 7B68     		ldr	r3, [r7, #4]
 978 0012 D318     		add	r3, r2, r3
 979 0014 FA1C     		add	r2, r7, #3
 980 0016 1278     		ldrb	r2, [r2]
 981 0018 1A70     		strb	r2, [r3]
 777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 982              		.loc 1 777 0
 983 001a BD46     		mov	sp, r7
 984 001c 02B0     		add	sp, sp, #8
 985              		@ sp needed
 986 001e 80BD     		pop	{r7, pc}
 987              	.L57:
 988              		.align	2
 989              	.L56:
 990 0020 00000000 		.word	CapSense_CSD_sensorSignal
 991              		.cfi_endproc
 992              	.LFE44:
 993              		.size	CapSense_CSD_SetDiffCountData, .-CapSense_CSD_SetDiffCountData
 994              		.section	.text.CapSense_CSD_GetFingerThreshold,"ax",%progbits
 995              		.align	2
 996              		.global	CapSense_CSD_GetFingerThreshold
 997              		.code	16
 998              		.thumb_func
 999              		.type	CapSense_CSD_GetFingerThreshold, %function
 1000              	CapSense_CSD_GetFingerThreshold:
 1001              	.LFB45:
 778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerThreshold
 782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the finger threshold from the component.
 786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal 
 795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerThreshold(uint32 widget)
 802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 33


 1002              		.loc 1 802 0
 1003              		.cfi_startproc
 1004 0000 80B5     		push	{r7, lr}
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 82B0     		sub	sp, sp, #8
 1009              		.cfi_def_cfa_offset 16
 1010 0004 00AF     		add	r7, sp, #0
 1011              		.cfi_def_cfa_register 7
 1012 0006 7860     		str	r0, [r7, #4]
 803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_fingerThreshold[widget]);
 1013              		.loc 1 803 0
 1014 0008 034A     		ldr	r2, .L60
 1015 000a 7B68     		ldr	r3, [r7, #4]
 1016 000c D318     		add	r3, r2, r3
 1017 000e 1B78     		ldrb	r3, [r3]
 804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1018              		.loc 1 804 0
 1019 0010 181C     		mov	r0, r3
 1020 0012 BD46     		mov	sp, r7
 1021 0014 02B0     		add	sp, sp, #8
 1022              		@ sp needed
 1023 0016 80BD     		pop	{r7, pc}
 1024              	.L61:
 1025              		.align	2
 1026              	.L60:
 1027 0018 00000000 		.word	CapSense_CSD_fingerThreshold
 1028              		.cfi_endproc
 1029              	.LFE45:
 1030              		.size	CapSense_CSD_GetFingerThreshold, .-CapSense_CSD_GetFingerThreshold
 1031              		.section	.text.CapSense_CSD_GetNoiseThreshold,"ax",%progbits
 1032              		.align	2
 1033              		.global	CapSense_CSD_GetNoiseThreshold
 1034              		.code	16
 1035              		.thumb_func
 1036              		.type	CapSense_CSD_GetNoiseThreshold, %function
 1037              	CapSense_CSD_GetNoiseThreshold:
 1038              	.LFB46:
 805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNoiseThreshold
 809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the noise threshold from the component.
 813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal 
 822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 34


 823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNoiseThreshold(uint32 widget)
 829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1039              		.loc 1 829 0
 1040              		.cfi_startproc
 1041 0000 80B5     		push	{r7, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 82B0     		sub	sp, sp, #8
 1046              		.cfi_def_cfa_offset 16
 1047 0004 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
 1049 0006 7860     		str	r0, [r7, #4]
 830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return (CapSense_CSD_noiseThreshold[widget]);
 1050              		.loc 1 830 0
 1051 0008 034A     		ldr	r2, .L64
 1052 000a 7B68     		ldr	r3, [r7, #4]
 1053 000c D318     		add	r3, r2, r3
 1054 000e 1B78     		ldrb	r3, [r3]
 831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1055              		.loc 1 831 0
 1056 0010 181C     		mov	r0, r3
 1057 0012 BD46     		mov	sp, r7
 1058 0014 02B0     		add	sp, sp, #8
 1059              		@ sp needed
 1060 0016 80BD     		pop	{r7, pc}
 1061              	.L65:
 1062              		.align	2
 1063              	.L64:
 1064 0018 00000000 		.word	CapSense_CSD_noiseThreshold
 1065              		.cfi_endproc
 1066              	.LFE46:
 1067              		.size	CapSense_CSD_GetNoiseThreshold, .-CapSense_CSD_GetNoiseThreshold
 1068              		.section	.text.CapSense_CSD_GetFingerHysteresis,"ax",%progbits
 1069              		.align	2
 1070              		.global	CapSense_CSD_GetFingerHysteresis
 1071              		.code	16
 1072              		.thumb_func
 1073              		.type	CapSense_CSD_GetFingerHysteresis, %function
 1074              	CapSense_CSD_GetFingerHysteresis:
 1075              	.LFB47:
 832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerHysteresis
 836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 839:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the Hysteresis value from the component.
 840:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 841:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 842:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 35


 843:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 844:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 845:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 846:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 847:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 848:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value 
 849:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   for each widget.
 850:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 851:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 852:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 853:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 854:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 855:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 856:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerHysteresis(uint32 widget)
 857:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1076              		.loc 1 857 0
 1077              		.cfi_startproc
 1078 0000 80B5     		push	{r7, lr}
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 7, -8
 1081              		.cfi_offset 14, -4
 1082 0002 82B0     		sub	sp, sp, #8
 1083              		.cfi_def_cfa_offset 16
 1084 0004 00AF     		add	r7, sp, #0
 1085              		.cfi_def_cfa_register 7
 1086 0006 7860     		str	r0, [r7, #4]
 858:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_hysteresis[widget]);
 1087              		.loc 1 858 0
 1088 0008 034A     		ldr	r2, .L68
 1089 000a 7B68     		ldr	r3, [r7, #4]
 1090 000c D318     		add	r3, r2, r3
 1091 000e 1B78     		ldrb	r3, [r3]
 859:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1092              		.loc 1 859 0
 1093 0010 181C     		mov	r0, r3
 1094 0012 BD46     		mov	sp, r7
 1095 0014 02B0     		add	sp, sp, #8
 1096              		@ sp needed
 1097 0016 80BD     		pop	{r7, pc}
 1098              	.L69:
 1099              		.align	2
 1100              	.L68:
 1101 0018 00000000 		.word	CapSense_CSD_hysteresis
 1102              		.cfi_endproc
 1103              	.LFE47:
 1104              		.size	CapSense_CSD_GetFingerHysteresis, .-CapSense_CSD_GetFingerHysteresis
 1105              		.section	.text.CapSense_CSD_GetNegativeNoiseThreshold,"ax",%progbits
 1106              		.align	2
 1107              		.global	CapSense_CSD_GetNegativeNoiseThreshold
 1108              		.code	16
 1109              		.thumb_func
 1110              		.type	CapSense_CSD_GetNegativeNoiseThreshold, %function
 1111              	CapSense_CSD_GetNegativeNoiseThreshold:
 1112              	.LFB48:
 860:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 861:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 862:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 36


 863:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNegativeNoiseThreshold
 864:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 865:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 866:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 867:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the negative noise threshold from the component.
 868:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 869:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters: 
 870:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 871:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 872:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return Value: 
 873:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the negative noise threshold
 874:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 875:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 876:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_negativeNoiseThreshold - This variable specifies the negative 
 877:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 878:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   to the raw count level.
 879:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
 880:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 881:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 882:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 883:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNegativeNoiseThreshold(uint32 widget)
 885:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1113              		.loc 1 885 0
 1114              		.cfi_startproc
 1115 0000 80B5     		push	{r7, lr}
 1116              		.cfi_def_cfa_offset 8
 1117              		.cfi_offset 7, -8
 1118              		.cfi_offset 14, -4
 1119 0002 82B0     		sub	sp, sp, #8
 1120              		.cfi_def_cfa_offset 16
 1121 0004 00AF     		add	r7, sp, #0
 1122              		.cfi_def_cfa_register 7
 1123 0006 7860     		str	r0, [r7, #4]
 886:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 887:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_negativeNoiseThreshold[widget]);
 1124              		.loc 1 887 0
 1125 0008 034A     		ldr	r2, .L72
 1126 000a 7B68     		ldr	r3, [r7, #4]
 1127 000c D318     		add	r3, r2, r3
 1128 000e 1B78     		ldrb	r3, [r3]
 888:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
 889:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_NEGATIVE_NOISE_THRESHOLD);
 890:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */ 
 891:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1129              		.loc 1 891 0
 1130 0010 181C     		mov	r0, r3
 1131 0012 BD46     		mov	sp, r7
 1132 0014 02B0     		add	sp, sp, #8
 1133              		@ sp needed
 1134 0016 80BD     		pop	{r7, pc}
 1135              	.L73:
 1136              		.align	2
 1137              	.L72:
 1138 0018 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1139              		.cfi_endproc
 1140              	.LFE48:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 37


 1141              		.size	CapSense_CSD_GetNegativeNoiseThreshold, .-CapSense_CSD_GetNegativeNoiseThreshold
 1142              		.section	.text.CapSense_CSD_SetFingerThreshold,"ax",%progbits
 1143              		.align	2
 1144              		.global	CapSense_CSD_SetFingerThreshold
 1145              		.code	16
 1146              		.thumb_func
 1147              		.type	CapSense_CSD_SetFingerThreshold, %function
 1148              	CapSense_CSD_SetFingerThreshold:
 1149              	.LFB49:
 892:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 893:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 894:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 895:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
 896:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetFingerThreshold
 897:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
 898:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 899:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
 900:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 901:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 902:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters: 
 903:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  sensorNumber:  widget index. 
 904:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 905:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 906:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
 907:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 908:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 909:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
 910:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_fingerThreshold[] - This array contains the level of signal 
 911:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 912:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
 913:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
 914:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 915:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 916:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
 917:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetFingerThreshold(uint32 widget, uint8 value)
 918:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{	
 1150              		.loc 1 918 0
 1151              		.cfi_startproc
 1152 0000 80B5     		push	{r7, lr}
 1153              		.cfi_def_cfa_offset 8
 1154              		.cfi_offset 7, -8
 1155              		.cfi_offset 14, -4
 1156 0002 82B0     		sub	sp, sp, #8
 1157              		.cfi_def_cfa_offset 16
 1158 0004 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 1160 0006 7860     		str	r0, [r7, #4]
 1161 0008 0A1C     		mov	r2, r1
 1162 000a FB1C     		add	r3, r7, #3
 1163 000c 1A70     		strb	r2, [r3]
 919:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_fingerThreshold[widget] = value;
 1164              		.loc 1 919 0
 1165 000e 044A     		ldr	r2, .L75
 1166 0010 7B68     		ldr	r3, [r7, #4]
 1167 0012 D318     		add	r3, r2, r3
 1168 0014 FA1C     		add	r2, r7, #3
 1169 0016 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 38


 1170 0018 1A70     		strb	r2, [r3]
 920:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 1171              		.loc 1 920 0
 1172 001a BD46     		mov	sp, r7
 1173 001c 02B0     		add	sp, sp, #8
 1174              		@ sp needed
 1175 001e 80BD     		pop	{r7, pc}
 1176              	.L76:
 1177              		.align	2
 1178              	.L75:
 1179 0020 00000000 		.word	CapSense_CSD_fingerThreshold
 1180              		.cfi_endproc
 1181              	.LFE49:
 1182              		.size	CapSense_CSD_SetFingerThreshold, .-CapSense_CSD_SetFingerThreshold
 1183              		.section	.text.CapSense_CSD_SetNoiseThreshold,"ax",%progbits
 1184              		.align	2
 1185              		.global	CapSense_CSD_SetNoiseThreshold
 1186              		.code	16
 1187              		.thumb_func
 1188              		.type	CapSense_CSD_SetNoiseThreshold, %function
 1189              	CapSense_CSD_SetNoiseThreshold:
 1190              	.LFB50:
 921:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 922:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 923:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
 924:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetNoiseThreshold
 925:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
 926:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 927:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
 928:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 929:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 930:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters:
 931:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  widget:  Sensor index number.
 932:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 933:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 934:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
 935:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 936:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 937:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
 938:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_noiseThreshold[] - This array contains the level of signal 
 939:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 940:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
 941:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
 942:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 943:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 944:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
 945:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetNoiseThreshold(uint32 widget, uint8 value)
 946:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 1191              		.loc 1 946 0
 1192              		.cfi_startproc
 1193 0000 80B5     		push	{r7, lr}
 1194              		.cfi_def_cfa_offset 8
 1195              		.cfi_offset 7, -8
 1196              		.cfi_offset 14, -4
 1197 0002 82B0     		sub	sp, sp, #8
 1198              		.cfi_def_cfa_offset 16
 1199 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 39


 1200              		.cfi_def_cfa_register 7
 1201 0006 7860     		str	r0, [r7, #4]
 1202 0008 0A1C     		mov	r2, r1
 1203 000a FB1C     		add	r3, r7, #3
 1204 000c 1A70     		strb	r2, [r3]
 947:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_noiseThreshold[widget] = value;
 1205              		.loc 1 947 0
 1206 000e 044A     		ldr	r2, .L78
 1207 0010 7B68     		ldr	r3, [r7, #4]
 1208 0012 D318     		add	r3, r2, r3
 1209 0014 FA1C     		add	r2, r7, #3
 1210 0016 1278     		ldrb	r2, [r2]
 1211 0018 1A70     		strb	r2, [r3]
 948:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 1212              		.loc 1 948 0
 1213 001a BD46     		mov	sp, r7
 1214 001c 02B0     		add	sp, sp, #8
 1215              		@ sp needed
 1216 001e 80BD     		pop	{r7, pc}
 1217              	.L79:
 1218              		.align	2
 1219              	.L78:
 1220 0020 00000000 		.word	CapSense_CSD_noiseThreshold
 1221              		.cfi_endproc
 1222              	.LFE50:
 1223              		.size	CapSense_CSD_SetNoiseThreshold, .-CapSense_CSD_SetNoiseThreshold
 1224              		.section	.text.CapSense_CSD_SetFingerHysteresis,"ax",%progbits
 1225              		.align	2
 1226              		.global	CapSense_CSD_SetFingerHysteresis
 1227              		.code	16
 1228              		.thumb_func
 1229              		.type	CapSense_CSD_SetFingerHysteresis, %function
 1230              	CapSense_CSD_SetFingerHysteresis:
 1231              	.LFB51:
 949:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 950:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 951:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
 952:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetFingerHysteresis
 953:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
 954:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 955:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
 956:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 957:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 958:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters: 
 959:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 960:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  widget:  widget number
 961:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 962:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
 963:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 964:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 965:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
 966:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_hysteresis[] - This array contains the hysteresis value for each widget.
 967:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 968:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 969:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
 970:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 971:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 40


 972:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
 973:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetFingerHysteresis(uint32 widget, uint8 value)
 974:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 1232              		.loc 1 974 0
 1233              		.cfi_startproc
 1234 0000 80B5     		push	{r7, lr}
 1235              		.cfi_def_cfa_offset 8
 1236              		.cfi_offset 7, -8
 1237              		.cfi_offset 14, -4
 1238 0002 82B0     		sub	sp, sp, #8
 1239              		.cfi_def_cfa_offset 16
 1240 0004 00AF     		add	r7, sp, #0
 1241              		.cfi_def_cfa_register 7
 1242 0006 7860     		str	r0, [r7, #4]
 1243 0008 0A1C     		mov	r2, r1
 1244 000a FB1C     		add	r3, r7, #3
 1245 000c 1A70     		strb	r2, [r3]
 975:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_hysteresis[widget] = value;
 1246              		.loc 1 975 0
 1247 000e 044A     		ldr	r2, .L81
 1248 0010 7B68     		ldr	r3, [r7, #4]
 1249 0012 D318     		add	r3, r2, r3
 1250 0014 FA1C     		add	r2, r7, #3
 1251 0016 1278     		ldrb	r2, [r2]
 1252 0018 1A70     		strb	r2, [r3]
 976:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 1253              		.loc 1 976 0
 1254 001a BD46     		mov	sp, r7
 1255 001c 02B0     		add	sp, sp, #8
 1256              		@ sp needed
 1257 001e 80BD     		pop	{r7, pc}
 1258              	.L82:
 1259              		.align	2
 1260              	.L81:
 1261 0020 00000000 		.word	CapSense_CSD_hysteresis
 1262              		.cfi_endproc
 1263              	.LFE51:
 1264              		.size	CapSense_CSD_SetFingerHysteresis, .-CapSense_CSD_SetFingerHysteresis
 1265              		.section	.text.CapSense_CSD_SetNegativeNoiseThreshold,"ax",%progbits
 1266              		.align	2
 1267              		.global	CapSense_CSD_SetNegativeNoiseThreshold
 1268              		.code	16
 1269              		.thumb_func
 1270              		.type	CapSense_CSD_SetNegativeNoiseThreshold, %function
 1271              	CapSense_CSD_SetNegativeNoiseThreshold:
 1272              	.LFB52:
 977:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 978:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 979:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
 980:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetNegativeNoiseThreshold
 981:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
 982:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 983:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
 984:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 985:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 986:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters: 
 987:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 41


 988:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  widget: widget number
 989:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 990:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
 991:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
 992:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
 993:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
 994:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_negativeNoiseThreshold  - This parameter specifies the negative 
 995:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 996:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*   the raw count level.
 997:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
 998:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
 999:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1000:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1001:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
1002:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1003:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 1273              		.loc 1 1003 0
 1274              		.cfi_startproc
 1275 0000 80B5     		push	{r7, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 82B0     		sub	sp, sp, #8
 1280              		.cfi_def_cfa_offset 16
 1281 0004 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 1283 0006 7860     		str	r0, [r7, #4]
 1284 0008 0A1C     		mov	r2, r1
 1285 000a FB1C     		add	r3, r7, #3
 1286 000c 1A70     		strb	r2, [r3]
1004:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_negativeNoiseThreshold[widget] = value;
 1287              		.loc 1 1004 0
 1288 000e 044A     		ldr	r2, .L84
 1289 0010 7B68     		ldr	r3, [r7, #4]
 1290 0012 D318     		add	r3, r2, r3
 1291 0014 FA1C     		add	r2, r7, #3
 1292 0016 1278     		ldrb	r2, [r2]
 1293 0018 1A70     		strb	r2, [r3]
1005:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 1294              		.loc 1 1005 0
 1295 001a BD46     		mov	sp, r7
 1296 001c 02B0     		add	sp, sp, #8
 1297              		@ sp needed
 1298 001e 80BD     		pop	{r7, pc}
 1299              	.L85:
 1300              		.align	2
 1301              	.L84:
 1302 0020 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1303              		.cfi_endproc
 1304              	.LFE52:
 1305              		.size	CapSense_CSD_SetNegativeNoiseThreshold, .-CapSense_CSD_SetNegativeNoiseThreshold
 1306              		.section	.text.CapSense_CSD_SetDebounce,"ax",%progbits
 1307              		.align	2
 1308              		.global	CapSense_CSD_SetDebounce
 1309              		.code	16
 1310              		.thumb_func
 1311              		.type	CapSense_CSD_SetDebounce, %function
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 42


 1312              	CapSense_CSD_SetDebounce:
 1313              	.LFB53:
1006:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1007:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1008:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
1009:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetDebounce
1010:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
1011:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1012:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
1013:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the debounce value for a widget.
1014:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1015:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters: 
1016:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value:  Debounce value for widget.
1017:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  widget: widget index.
1018:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1019:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
1020:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1021:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1022:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
1023:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_debounce[] - This array contains the debounce value for each widget.
1024:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
1025:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1026:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
1027:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1028:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1029:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
1030:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetDebounce(uint32 widget, uint8 value)
1031:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 1314              		.loc 1 1031 0
 1315              		.cfi_startproc
 1316 0000 80B5     		push	{r7, lr}
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 7, -8
 1319              		.cfi_offset 14, -4
 1320 0002 82B0     		sub	sp, sp, #8
 1321              		.cfi_def_cfa_offset 16
 1322 0004 00AF     		add	r7, sp, #0
 1323              		.cfi_def_cfa_register 7
 1324 0006 7860     		str	r0, [r7, #4]
 1325 0008 0A1C     		mov	r2, r1
 1326 000a FB1C     		add	r3, r7, #3
 1327 000c 1A70     		strb	r2, [r3]
1032:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_debounce[widget] = value;
 1328              		.loc 1 1032 0
 1329 000e 044A     		ldr	r2, .L87
 1330 0010 7B68     		ldr	r3, [r7, #4]
 1331 0012 D318     		add	r3, r2, r3
 1332 0014 FA1C     		add	r2, r7, #3
 1333 0016 1278     		ldrb	r2, [r2]
 1334 0018 1A70     		strb	r2, [r3]
1033:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 1335              		.loc 1 1033 0
 1336 001a BD46     		mov	sp, r7
 1337 001c 02B0     		add	sp, sp, #8
 1338              		@ sp needed
 1339 001e 80BD     		pop	{r7, pc}
 1340              	.L88:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 43


 1341              		.align	2
 1342              	.L87:
 1343 0020 00000000 		.word	CapSense_CSD_debounce
 1344              		.cfi_endproc
 1345              	.LFE53:
 1346              		.size	CapSense_CSD_SetDebounce, .-CapSense_CSD_SetDebounce
 1347              		.section	.text.CapSense_CSD_SetLowBaselineReset,"ax",%progbits
 1348              		.align	2
 1349              		.global	CapSense_CSD_SetLowBaselineReset
 1350              		.code	16
 1351              		.thumb_func
 1352              		.type	CapSense_CSD_SetLowBaselineReset, %function
 1353              	CapSense_CSD_SetLowBaselineReset:
 1354              	.LFB54:
1034:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1035:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1036:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
1037:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_SetLowBaselineReset
1038:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
1039:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1040:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
1041:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1042:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1043:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters: 
1044:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  value: low baseline reset threshold value.
1045:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  sensor: Sensor index.
1046:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1047:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return Value: 
1048:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1049:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1050:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
1051:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_lowBaselineReset[] - This array contains the Baseline update 
1052:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  threshold value for each sensor.
1053:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
1054:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
1055:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1056:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1057:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
1058:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_SetLowBaselineReset(uint32 sensor, uint8 value)
1059:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 1355              		.loc 1 1059 0
 1356              		.cfi_startproc
 1357 0000 80B5     		push	{r7, lr}
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 7, -8
 1360              		.cfi_offset 14, -4
 1361 0002 82B0     		sub	sp, sp, #8
 1362              		.cfi_def_cfa_offset 16
 1363 0004 00AF     		add	r7, sp, #0
 1364              		.cfi_def_cfa_register 7
 1365 0006 7860     		str	r0, [r7, #4]
 1366 0008 0A1C     		mov	r2, r1
 1367 000a FB1C     		add	r3, r7, #3
 1368 000c 1A70     		strb	r2, [r3]
1060:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_lowBaselineReset[sensor] = value;
 1369              		.loc 1 1060 0
 1370 000e 044A     		ldr	r2, .L90
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 44


 1371 0010 7B68     		ldr	r3, [r7, #4]
 1372 0012 D318     		add	r3, r2, r3
 1373 0014 FA1C     		add	r2, r7, #3
 1374 0016 1278     		ldrb	r2, [r2]
 1375 0018 1A70     		strb	r2, [r3]
1061:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 1376              		.loc 1 1061 0
 1377 001a BD46     		mov	sp, r7
 1378 001c 02B0     		add	sp, sp, #8
 1379              		@ sp needed
 1380 001e 80BD     		pop	{r7, pc}
 1381              	.L91:
 1382              		.align	2
 1383              	.L90:
 1384 0020 00000000 		.word	CapSense_CSD_lowBaselineReset
 1385              		.cfi_endproc
 1386              	.LFE54:
 1387              		.size	CapSense_CSD_SetLowBaselineReset, .-CapSense_CSD_SetLowBaselineReset
 1388              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 1389              		.align	2
 1390              		.global	CapSense_CSD_CheckIsSensorActive
 1391              		.code	16
 1392              		.thumb_func
 1393              		.type	CapSense_CSD_CheckIsSensorActive, %function
 1394              	CapSense_CSD_CheckIsSensorActive:
 1395              	.LFB55:
1062:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1063:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1064:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1065:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1066:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
1067:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1068:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1069:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1070:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_sensorSignal[sensor] array element to the finger
1071:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1072:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1073:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active. 
1074:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1075:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1076:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1077:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function updates the CapSense_CSD_sensorOnMask[] array element.
1078:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1079:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1080:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
1081:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1082:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1083:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1084:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1085:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1086:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - used to store the difference between 
1087:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1088:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store the current debounce 
1089:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1090:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1091:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1092:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store the sensors on/off state.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 45


1093:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors 
1094:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1095:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
1096:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1097:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
1098:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
1099:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
1100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsSensorActive(uint32 sensor)
1105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {	
 1396              		.loc 1 1105 0
 1397              		.cfi_startproc
 1398 0000 80B5     		push	{r7, lr}
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 7, -8
 1401              		.cfi_offset 14, -4
 1402 0002 84B0     		sub	sp, sp, #16
 1403              		.cfi_def_cfa_offset 24
 1404 0004 00AF     		add	r7, sp, #0
 1405              		.cfi_def_cfa_register 7
 1406 0006 7860     		str	r0, [r7, #4]
1106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint8 widget;
1107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint8 debounce;
1108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint8 debounceIndex;
1109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint8 fingerThreshold;
1111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	uint8 hysteresis;
1112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	static uint8 CapSense_CSD_debounceCounter[] = {
1113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, 
1114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
1115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
1118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
1119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 1407              		.loc 1 1119 0
 1408 0008 3B1C     		mov	r3, r7
 1409 000a 0F33     		add	r3, r3, #15
 1410 000c 4549     		ldr	r1, .L101
 1411 000e 7A68     		ldr	r2, [r7, #4]
 1412 0010 8A18     		add	r2, r1, r2
 1413 0012 1278     		ldrb	r2, [r2]
 1414 0014 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
1121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 1415              		.loc 1 1121 0
 1416 0016 3B1C     		mov	r3, r7
 1417 0018 0F33     		add	r3, r3, #15
 1418 001a 1A78     		ldrb	r2, [r3]
 1419 001c 3B1C     		mov	r3, r7
 1420 001e 0E33     		add	r3, r3, #14
 1421 0020 4149     		ldr	r1, .L101+4
 1422 0022 8A5C     		ldrb	r2, [r1, r2]
 1423 0024 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 46


1122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	hysteresis = CapSense_CSD_hysteresis[widget];
 1424              		.loc 1 1122 0
 1425 0026 3B1C     		mov	r3, r7
 1426 0028 0F33     		add	r3, r3, #15
 1427 002a 1A78     		ldrb	r2, [r3]
 1428 002c 3B1C     		mov	r3, r7
 1429 002e 0D33     		add	r3, r3, #13
 1430 0030 3E49     		ldr	r1, .L101+8
 1431 0032 8A5C     		ldrb	r2, [r1, r2]
 1432 0034 1A70     		strb	r2, [r3]
1123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	debounce = CapSense_CSD_debounce[widget];	
 1433              		.loc 1 1123 0
 1434 0036 3B1C     		mov	r3, r7
 1435 0038 0F33     		add	r3, r3, #15
 1436 003a 1A78     		ldrb	r2, [r3]
 1437 003c 3B1C     		mov	r3, r7
 1438 003e 0C33     		add	r3, r3, #12
 1439 0040 3B49     		ldr	r1, .L101+12
 1440 0042 8A5C     		ldrb	r2, [r1, r2]
 1441 0044 1A70     		strb	r2, [r3]
1124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
1125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	    debounceIndex = CapSense_CSD_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1442              		.loc 1 1125 0
 1443 0046 3B1C     		mov	r3, r7
 1444 0048 0B33     		add	r3, r3, #11
 1445 004a 0022     		mov	r2, #0
 1446 004c 1A70     		strb	r2, [r3]
1126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[debounceIndex] = 1u;
 1447              		.loc 1 1126 0
 1448 004e 3B1C     		mov	r3, r7
 1449 0050 0B33     		add	r3, r3, #11
 1450 0052 1B78     		ldrb	r3, [r3]
 1451 0054 374A     		ldr	r2, .L101+16
 1452 0056 0121     		mov	r1, #1
 1453 0058 D154     		strb	r1, [r2, r3]
1127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	
1129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Was on */
1130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if (0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor))
 1454              		.loc 1 1130 0
 1455 005a 374A     		ldr	r2, .L101+20
 1456 005c 7B68     		ldr	r3, [r7, #4]
 1457 005e 101C     		mov	r0, r2
 1458 0060 191C     		mov	r1, r3
 1459 0062 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1460 0066 031C     		mov	r3, r0
 1461 0068 002B     		cmp	r3, #0
 1462 006a 1DD0     		beq	.L93
1131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
1133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1463              		.loc 1 1133 0
 1464 006c 334A     		ldr	r2, .L101+24
 1465 006e 7B68     		ldr	r3, [r7, #4]
 1466 0070 D318     		add	r3, r2, r3
 1467 0072 1B78     		ldrb	r3, [r3]
 1468 0074 1A1C     		mov	r2, r3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 47


 1469 0076 3B1C     		mov	r3, r7
 1470 0078 0E33     		add	r3, r3, #14
 1471 007a 1978     		ldrb	r1, [r3]
 1472 007c 3B1C     		mov	r3, r7
 1473 007e 0D33     		add	r3, r3, #13
 1474 0080 1B78     		ldrb	r3, [r3]
 1475 0082 CB1A     		sub	r3, r1, r3
 1476 0084 9A42     		cmp	r2, r3
 1477 0086 3DDA     		bge	.L95
1134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	   		CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 0u);
 1478              		.loc 1 1135 0
 1479 0088 2B4A     		ldr	r2, .L101+20
 1480 008a 7B68     		ldr	r3, [r7, #4]
 1481 008c 101C     		mov	r0, r2
 1482 008e 191C     		mov	r1, r3
 1483 0090 0022     		mov	r2, #0
 1484 0092 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1485              		.loc 1 1137 0
 1486 0096 3B1C     		mov	r3, r7
 1487 0098 0B33     		add	r3, r3, #11
 1488 009a 1B78     		ldrb	r3, [r3]
 1489 009c 254A     		ldr	r2, .L101+16
 1490 009e 391C     		mov	r1, r7
 1491 00a0 0C31     		add	r1, r1, #12
 1492 00a2 0978     		ldrb	r1, [r1]
 1493 00a4 D154     		strb	r1, [r2, r3]
 1494 00a6 2DE0     		b	.L95
 1495              	.L93:
1138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else    /* Was off */
1141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
1143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1496              		.loc 1 1143 0
 1497 00a8 244A     		ldr	r2, .L101+24
 1498 00aa 7B68     		ldr	r3, [r7, #4]
 1499 00ac D318     		add	r3, r2, r3
 1500 00ae 1B78     		ldrb	r3, [r3]
 1501 00b0 1A1C     		mov	r2, r3
 1502 00b2 3B1C     		mov	r3, r7
 1503 00b4 0E33     		add	r3, r3, #14
 1504 00b6 1978     		ldrb	r1, [r3]
 1505 00b8 3B1C     		mov	r3, r7
 1506 00ba 0D33     		add	r3, r3, #13
 1507 00bc 1B78     		ldrb	r3, [r3]
 1508 00be CB18     		add	r3, r1, r3
 1509 00c0 9A42     		cmp	r2, r3
 1510 00c2 17DB     		blt	.L96
1144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			CapSense_CSD_debounceCounter[debounceIndex]--;
 1511              		.loc 1 1145 0
 1512 00c4 3B1C     		mov	r3, r7
 1513 00c6 0B33     		add	r3, r3, #11
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 48


 1514 00c8 1B78     		ldrb	r3, [r3]
 1515 00ca 1A4A     		ldr	r2, .L101+16
 1516 00cc D25C     		ldrb	r2, [r2, r3]
 1517 00ce 013A     		sub	r2, r2, #1
 1518 00d0 D1B2     		uxtb	r1, r2
 1519 00d2 184A     		ldr	r2, .L101+16
 1520 00d4 D154     		strb	r1, [r2, r3]
1146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
1147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(CapSense_CSD_debounceCounter[debounceIndex] == 0u)
 1521              		.loc 1 1147 0
 1522 00d6 3B1C     		mov	r3, r7
 1523 00d8 0B33     		add	r3, r3, #11
 1524 00da 1B78     		ldrb	r3, [r3]
 1525 00dc 154A     		ldr	r2, .L101+16
 1526 00de D35C     		ldrb	r3, [r2, r3]
 1527 00e0 002B     		cmp	r3, #0
 1528 00e2 0FD1     		bne	.L95
1148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 1u); 
 1529              		.loc 1 1149 0
 1530 00e4 144A     		ldr	r2, .L101+20
 1531 00e6 7B68     		ldr	r3, [r7, #4]
 1532 00e8 101C     		mov	r0, r2
 1533 00ea 191C     		mov	r1, r3
 1534 00ec 0122     		mov	r2, #1
 1535 00ee FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 1536 00f2 07E0     		b	.L95
 1537              	.L96:
1150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1538              		.loc 1 1155 0
 1539 00f4 3B1C     		mov	r3, r7
 1540 00f6 0B33     		add	r3, r3, #11
 1541 00f8 1B78     		ldrb	r3, [r3]
 1542 00fa 0E4A     		ldr	r2, .L101+16
 1543 00fc 391C     		mov	r1, r7
 1544 00fe 0C31     		add	r1, r1, #12
 1545 0100 0978     		ldrb	r1, [r1]
 1546 0102 D154     		strb	r1, [r2, r3]
 1547              	.L95:
1156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return ((uint32)((0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor)) ? 1u : 0u)
 1548              		.loc 1 1159 0
 1549 0104 0C4A     		ldr	r2, .L101+20
 1550 0106 7B68     		ldr	r3, [r7, #4]
 1551 0108 101C     		mov	r0, r2
 1552 010a 191C     		mov	r1, r3
 1553 010c FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1554 0110 031C     		mov	r3, r0
 1555 0112 002B     		cmp	r3, #0
 1556 0114 01D0     		beq	.L98
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 49


 1557              		.loc 1 1159 0 is_stmt 0 discriminator 1
 1558 0116 0123     		mov	r3, #1
 1559 0118 00E0     		b	.L99
 1560              	.L98:
 1561              		.loc 1 1159 0 discriminator 2
 1562 011a 0023     		mov	r3, #0
 1563              	.L99:
1160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1564              		.loc 1 1160 0 is_stmt 1 discriminator 3
 1565 011c 181C     		mov	r0, r3
 1566 011e BD46     		mov	sp, r7
 1567 0120 04B0     		add	sp, sp, #16
 1568              		@ sp needed
 1569 0122 80BD     		pop	{r7, pc}
 1570              	.L102:
 1571              		.align	2
 1572              	.L101:
 1573 0124 00000000 		.word	CapSense_CSD_widgetNumber
 1574 0128 00000000 		.word	CapSense_CSD_fingerThreshold
 1575 012c 00000000 		.word	CapSense_CSD_hysteresis
 1576 0130 00000000 		.word	CapSense_CSD_debounce
 1577 0134 34000000 		.word	CapSense_CSD_debounceCounter.5328
 1578 0138 00000000 		.word	CapSense_CSD_sensorOnMask
 1579 013c 00000000 		.word	CapSense_CSD_sensorSignal
 1580              		.cfi_endproc
 1581              	.LFE55:
 1582              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 1583              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 1584              		.align	2
 1585              		.global	CapSense_CSD_CheckIsWidgetActive
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 1589              	CapSense_CSD_CheckIsWidgetActive:
 1590              	.LFB56:
1161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
1165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  is raised by the hysteresis amount. 
1174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The debounce counter added to the sensor active transition. 
1175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 50


1183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
1187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsWidgetActive(uint32 widget)
1192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1591              		.loc 1 1192 0
 1592              		.cfi_startproc
 1593 0000 80B5     		push	{r7, lr}
 1594              		.cfi_def_cfa_offset 8
 1595              		.cfi_offset 7, -8
 1596              		.cfi_offset 14, -4
 1597 0002 86B0     		sub	sp, sp, #24
 1598              		.cfi_def_cfa_offset 32
 1599 0004 00AF     		add	r7, sp, #0
 1600              		.cfi_def_cfa_register 7
 1601 0006 7860     		str	r0, [r7, #4]
1193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_CSD_rawDataIndex[widget];
 1602              		.loc 1 1193 0
 1603 0008 0023     		mov	r3, #0
 1604 000a 7B61     		str	r3, [r7, #20]
1194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1605              		.loc 1 1194 0
 1606 000c 0C23     		mov	r3, #12
 1607 000e 1A1C     		mov	r2, r3
 1608 0010 7B69     		ldr	r3, [r7, #20]
 1609 0012 D318     		add	r3, r2, r3
 1610 0014 FB60     		str	r3, [r7, #12]
1195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1611              		.loc 1 1195 0
 1612 0016 0023     		mov	r3, #0
 1613 0018 3B61     		str	r3, [r7, #16]
 1614              	.L105:
1196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Check all sensors of widget */
1198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1615              		.loc 1 1200 0
 1616 001a 7B69     		ldr	r3, [r7, #20]
 1617 001c 181C     		mov	r0, r3
 1618 001e FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 1619 0022 031C     		mov	r3, r0
 1620 0024 002B     		cmp	r3, #0
 1621 0026 01D0     		beq	.L104
1201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_IS_ACTIVE;
 1622              		.loc 1 1202 0
 1623 0028 0123     		mov	r3, #1
 1624 002a 3B61     		str	r3, [r7, #16]
 1625              	.L104:
1203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 51


 1626              		.loc 1 1204 0
 1627 002c 7B69     		ldr	r3, [r7, #20]
 1628 002e 0133     		add	r3, r3, #1
 1629 0030 7B61     		str	r3, [r7, #20]
1205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1630              		.loc 1 1206 0
 1631 0032 7A69     		ldr	r2, [r7, #20]
 1632 0034 FB68     		ldr	r3, [r7, #12]
 1633 0036 9A42     		cmp	r2, r3
 1634 0038 EFD3     		bcc	.L105
1207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1635              		.loc 1 1210 0
 1636 003a 3B69     		ldr	r3, [r7, #16]
1211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1637              		.loc 1 1211 0
 1638 003c 181C     		mov	r0, r3
 1639 003e BD46     		mov	sp, r7
 1640 0040 06B0     		add	sp, sp, #24
 1641              		@ sp needed
 1642 0042 80BD     		pop	{r7, pc}
 1643              		.cfi_endproc
 1644              	.LFE56:
 1645              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 1646              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 1647              		.align	2
 1648              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 1649              		.code	16
 1650              		.thumb_func
 1651              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 1652              	CapSense_CSD_CheckIsAnyWidgetActive:
 1653              	.LFB57:
1212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
1216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares all the sensors of the CapSense_CSD_Signal[] array to their finger 
1220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so 
1221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_sensorOnMask[] array is up to date after calling this 
1222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  function.
1223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
1233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 52


1234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsAnyWidgetActive(void)
1238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1654              		.loc 1 1238 0
 1655              		.cfi_startproc
 1656 0000 80B5     		push	{r7, lr}
 1657              		.cfi_def_cfa_offset 8
 1658              		.cfi_offset 7, -8
 1659              		.cfi_offset 14, -4
 1660 0002 82B0     		sub	sp, sp, #8
 1661              		.cfi_def_cfa_offset 16
 1662 0004 00AF     		add	r7, sp, #0
 1663              		.cfi_def_cfa_register 7
1239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	    uint32 i;
1241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1664              		.loc 1 1241 0
 1665 0006 0023     		mov	r3, #0
 1666 0008 3B60     		str	r3, [r7]
1242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1667              		.loc 1 1243 0
 1668 000a 0023     		mov	r3, #0
 1669 000c 7B60     		str	r3, [r7, #4]
 1670 000e 0BE0     		b	.L108
 1671              	.L110:
1244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 1672              		.loc 1 1245 0
 1673 0010 7B68     		ldr	r3, [r7, #4]
 1674 0012 181C     		mov	r0, r3
 1675 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 1676 0018 031C     		mov	r3, r0
 1677 001a 002B     		cmp	r3, #0
 1678 001c 01D0     		beq	.L109
1246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 1679              		.loc 1 1247 0
 1680 001e 0123     		mov	r3, #1
 1681 0020 3B60     		str	r3, [r7]
 1682              	.L109:
1243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1683              		.loc 1 1243 0
 1684 0022 7B68     		ldr	r3, [r7, #4]
 1685 0024 0133     		add	r3, r3, #1
 1686 0026 7B60     		str	r3, [r7, #4]
 1687              	.L108:
1243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1688              		.loc 1 1243 0 is_stmt 0 discriminator 1
 1689 0028 7B68     		ldr	r3, [r7, #4]
 1690 002a 002B     		cmp	r3, #0
 1691 002c F0D0     		beq	.L110
1248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 53


1251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1692              		.loc 1 1253 0 is_stmt 1
 1693 002e 3B68     		ldr	r3, [r7]
1254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1694              		.loc 1 1254 0
 1695 0030 181C     		mov	r0, r3
 1696 0032 BD46     		mov	sp, r7
 1697 0034 02B0     		add	sp, sp, #8
 1698              		@ sp needed
 1699 0036 80BD     		pop	{r7, pc}
 1700              		.cfi_endproc
 1701              	.LFE57:
 1702              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 1703              		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 1704              		.align	2
 1705              		.global	CapSense_CSD_EnableWidget
 1706              		.code	16
 1707              		.thumb_func
 1708              		.type	CapSense_CSD_EnableWidget, %function
 1709              	CapSense_CSD_EnableWidget:
 1710              	.LFB58:
1255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
1259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
1272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
1274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
1276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
1278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
1279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
1280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint32 widget)
1285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1711              		.loc 1 1285 0
 1712              		.cfi_startproc
 1713 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 54


 1714              		.cfi_def_cfa_offset 8
 1715              		.cfi_offset 7, -8
 1716              		.cfi_offset 14, -4
 1717 0002 84B0     		sub	sp, sp, #16
 1718              		.cfi_def_cfa_offset 24
 1719 0004 00AF     		add	r7, sp, #0
 1720              		.cfi_def_cfa_register 7
 1721 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1722              		.loc 1 1287 0
 1723 0008 3B1C     		mov	r3, r7
 1724 000a 0F33     		add	r3, r3, #15
 1725 000c 0022     		mov	r2, #0
 1726 000e 1A70     		strb	r2, [r3]
1288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1727              		.loc 1 1288 0
 1728 0010 0C21     		mov	r1, #12
 1729 0012 3B1C     		mov	r3, r7
 1730 0014 0E33     		add	r3, r3, #14
 1731 0016 3A1C     		mov	r2, r7
 1732 0018 0F32     		add	r2, r2, #15
 1733 001a 1278     		ldrb	r2, [r2]
 1734 001c 8A18     		add	r2, r1, r2
 1735 001e 1A70     		strb	r2, [r3]
 1736              	.L113:
1289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Enable all sensors of widget */
1291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 1u);
 1737              		.loc 1 1293 0 discriminator 1
 1738 0020 3B1C     		mov	r3, r7
 1739 0022 0F33     		add	r3, r3, #15
 1740 0024 1B78     		ldrb	r3, [r3]
 1741 0026 0C4A     		ldr	r2, .L114
 1742 0028 101C     		mov	r0, r2
 1743 002a 191C     		mov	r1, r3
 1744 002c 0122     		mov	r2, #1
 1745 002e FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1746              		.loc 1 1294 0 discriminator 1
 1747 0032 3B1C     		mov	r3, r7
 1748 0034 0F33     		add	r3, r3, #15
 1749 0036 1A78     		ldrb	r2, [r3]
 1750 0038 3B1C     		mov	r3, r7
 1751 003a 0F33     		add	r3, r3, #15
 1752 003c 0132     		add	r2, r2, #1
 1753 003e 1A70     		strb	r2, [r3]
1295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1754              		.loc 1 1296 0 discriminator 1
 1755 0040 3A1C     		mov	r2, r7
 1756 0042 0F32     		add	r2, r2, #15
 1757 0044 3B1C     		mov	r3, r7
 1758 0046 0E33     		add	r3, r3, #14
 1759 0048 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 55


 1760 004a 1B78     		ldrb	r3, [r3]
 1761 004c 9A42     		cmp	r2, r3
 1762 004e E7D3     		bcc	.L113
1297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1763              		.loc 1 1297 0
 1764 0050 BD46     		mov	sp, r7
 1765 0052 04B0     		add	sp, sp, #16
 1766              		@ sp needed
 1767 0054 80BD     		pop	{r7, pc}
 1768              	.L115:
 1769 0056 C046     		.align	2
 1770              	.L114:
 1771 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
 1772              		.cfi_endproc
 1773              	.LFE58:
 1774              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1775              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1776              		.align	2
 1777              		.global	CapSense_CSD_DisableWidget
 1778              		.code	16
 1779              		.thumb_func
 1780              		.type	CapSense_CSD_DisableWidget, %function
 1781              	CapSense_CSD_DisableWidget:
 1782              	.LFB59:
1298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
1302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
1315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
1317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
1319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor isn't scanned by CapSense_CSD_ScanEnabledWidgets().
1321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is scanned by CapSense_CSD_ScanEnabledWidgets().
1322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
1323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint32 widget)
1328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1783              		.loc 1 1328 0
 1784              		.cfi_startproc
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 56


 1785 0000 80B5     		push	{r7, lr}
 1786              		.cfi_def_cfa_offset 8
 1787              		.cfi_offset 7, -8
 1788              		.cfi_offset 14, -4
 1789 0002 84B0     		sub	sp, sp, #16
 1790              		.cfi_def_cfa_offset 24
 1791 0004 00AF     		add	r7, sp, #0
 1792              		.cfi_def_cfa_register 7
 1793 0006 7860     		str	r0, [r7, #4]
1329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1794              		.loc 1 1329 0
 1795 0008 3B1C     		mov	r3, r7
 1796 000a 0F33     		add	r3, r3, #15
 1797 000c 0022     		mov	r2, #0
 1798 000e 1A70     		strb	r2, [r3]
1330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1799              		.loc 1 1330 0
 1800 0010 0C21     		mov	r1, #12
 1801 0012 3B1C     		mov	r3, r7
 1802 0014 0E33     		add	r3, r3, #14
 1803 0016 3A1C     		mov	r2, r7
 1804 0018 0F32     		add	r2, r2, #15
 1805 001a 1278     		ldrb	r2, [r2]
 1806 001c 8A18     		add	r2, r1, r2
 1807 001e 1A70     		strb	r2, [r3]
 1808              	.L117:
1331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****    
1332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Disable all sensors of widget */
1333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 0u);
 1809              		.loc 1 1336 0 discriminator 1
 1810 0020 3B1C     		mov	r3, r7
 1811 0022 0F33     		add	r3, r3, #15
 1812 0024 1B78     		ldrb	r3, [r3]
 1813 0026 0C4A     		ldr	r2, .L118
 1814 0028 101C     		mov	r0, r2
 1815 002a 191C     		mov	r1, r3
 1816 002c 0022     		mov	r2, #0
 1817 002e FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1818              		.loc 1 1337 0 discriminator 1
 1819 0032 3B1C     		mov	r3, r7
 1820 0034 0F33     		add	r3, r3, #15
 1821 0036 1A78     		ldrb	r2, [r3]
 1822 0038 3B1C     		mov	r3, r7
 1823 003a 0F33     		add	r3, r3, #15
 1824 003c 0132     		add	r2, r2, #1
 1825 003e 1A70     		strb	r2, [r3]
1338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1826              		.loc 1 1339 0 discriminator 1
 1827 0040 3A1C     		mov	r2, r7
 1828 0042 0F32     		add	r2, r2, #15
 1829 0044 3B1C     		mov	r3, r7
 1830 0046 0E33     		add	r3, r3, #14
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 57


 1831 0048 1278     		ldrb	r2, [r2]
 1832 004a 1B78     		ldrb	r3, [r3]
 1833 004c 9A42     		cmp	r2, r3
 1834 004e E7D3     		bcc	.L117
1340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1835              		.loc 1 1340 0
 1836 0050 BD46     		mov	sp, r7
 1837 0052 04B0     		add	sp, sp, #16
 1838              		@ sp needed
 1839 0054 80BD     		pop	{r7, pc}
 1840              	.L119:
 1841 0056 C046     		.align	2
 1842              	.L118:
 1843 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
 1844              		.cfi_endproc
 1845              	.LFE59:
 1846              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1847              		.section	.text.CapSense_CSD_FindMaximum,"ax",%progbits
 1848              		.align	2
 1849              		.global	CapSense_CSD_FindMaximum
 1850              		.code	16
 1851              		.thumb_func
 1852              		.type	CapSense_CSD_FindMaximum, %function
 1853              	CapSense_CSD_FindMaximum:
 1854              	.LFB60:
1341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
1346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[] within a defined centroid and 
1351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  ignored.
1353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * 
1357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:  Start index of centroid in CapSense_CSD_sensorSignal[] array.
1359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
1360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
1362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * 
1363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
1368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_startOfSlider[] - contains the index of the first slider element
1369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
1370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects: 
1371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 58


1373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#if (CapSense_CSD_IS_DIPLEX_SLIDER)
1375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *dip
1376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#else 
1377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	#endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1855              		.loc 1 1379 0
 1856              		.cfi_startproc
 1857 0000 80B5     		push	{r7, lr}
 1858              		.cfi_def_cfa_offset 8
 1859              		.cfi_offset 7, -8
 1860              		.cfi_offset 14, -4
 1861 0002 84B0     		sub	sp, sp, #16
 1862              		.cfi_def_cfa_offset 24
 1863 0004 00AF     		add	r7, sp, #0
 1864              		.cfi_def_cfa_register 7
 1865 0006 FB1D     		add	r3, r7, #7
 1866 0008 1870     		strb	r0, [r3]
 1867 000a BB1D     		add	r3, r7, #6
 1868 000c 1970     		strb	r1, [r3]
 1869 000e 7B1D     		add	r3, r7, #5
 1870 0010 1A70     		strb	r2, [r3]
1380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
1381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
1383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No centroid at Start */
1384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
1385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Biggest centroid is zero */
1387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum = CapSense_CSD_MAXIMUM_CENTROID;
 1871              		.loc 1 1390 0
 1872 0012 3B1C     		mov	r3, r7
 1873 0014 0E33     		add	r3, r3, #14
 1874 0016 FF22     		mov	r2, #255
 1875 0018 1A70     		strb	r2, [r3]
1391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		
1392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 temp = 0u;
 1876              		.loc 1 1392 0
 1877 001a 3B1C     		mov	r3, r7
 1878 001c 0D33     		add	r3, r3, #13
 1879 001e 0022     		mov	r2, #0
 1880 0020 1A70     		strb	r2, [r3]
1393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 1881              		.loc 1 1393 0
 1882 0022 FB1D     		add	r3, r7, #7
 1883 0024 1A78     		ldrb	r2, [r3]
 1884 0026 204B     		ldr	r3, .L125
 1885 0028 D318     		add	r3, r2, r3
 1886 002a BB60     		str	r3, [r7, #8]
1394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
1397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 59


1398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Initialize */
1399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 i = 0u;
1400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 
1401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
1402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count <<= 1u;
1403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 while(1u)
1404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 { 
1405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == CapSense_CSD_MAXIMUM_CENTROID)
1408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
1410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
1411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
1414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {          
1420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
1421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* We are at the end of current */
1423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             
1429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
1430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     
1434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     i++; 
1435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
1436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(i == count)
1437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         break;
1439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }            
1440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     
1442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                        We are at the end of current */
1444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Without diplexing */ 
1453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
1454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 60


1455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
1456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Check centroid size */
1458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else                    
1461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
1468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = i;
1470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             else
1472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
1474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }                    
1475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)                    
1476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];                    
1477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
1478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Looking for greater element within centroid */
1479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 maximum = i;
1484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
1485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 } 
1489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 1887              		.loc 1 1490 0
 1888 002c 3B1C     		mov	r3, r7
 1889 002e 0F33     		add	r3, r3, #15
 1890 0030 0022     		mov	r2, #0
 1891 0032 1A70     		strb	r2, [r3]
 1892 0034 2AE0     		b	.L121
 1893              	.L123:
1491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {                      
1492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Looking for greater element within centroid */
1493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1894              		.loc 1 1493 0
 1895 0036 3B1C     		mov	r3, r7
 1896 0038 0F33     		add	r3, r3, #15
 1897 003a 1B78     		ldrb	r3, [r3]
 1898 003c BA68     		ldr	r2, [r7, #8]
 1899 003e D318     		add	r3, r2, r3
 1900 0040 1B78     		ldrb	r3, [r3]
 1901 0042 7A1D     		add	r2, r7, #5
 1902 0044 1278     		ldrb	r2, [r2]
 1903 0046 9A42     		cmp	r2, r3
 1904 0048 19D2     		bcs	.L122
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 61


1494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
 1905              		.loc 1 1495 0
 1906 004a 3B1C     		mov	r3, r7
 1907 004c 0F33     		add	r3, r3, #15
 1908 004e 1B78     		ldrb	r3, [r3]
 1909 0050 BA68     		ldr	r2, [r7, #8]
 1910 0052 D318     		add	r3, r2, r3
 1911 0054 1B78     		ldrb	r3, [r3]
 1912 0056 3A1C     		mov	r2, r7
 1913 0058 0D32     		add	r2, r2, #13
 1914 005a 1278     		ldrb	r2, [r2]
 1915 005c 9A42     		cmp	r2, r3
 1916 005e 0ED2     		bcs	.L122
1496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         maximum = i;
 1917              		.loc 1 1497 0
 1918 0060 3B1C     		mov	r3, r7
 1919 0062 0E33     		add	r3, r3, #14
 1920 0064 3A1C     		mov	r2, r7
 1921 0066 0F32     		add	r2, r2, #15
 1922 0068 1278     		ldrb	r2, [r2]
 1923 006a 1A70     		strb	r2, [r3]
1498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 1924              		.loc 1 1498 0
 1925 006c 3B1C     		mov	r3, r7
 1926 006e 0F33     		add	r3, r3, #15
 1927 0070 1B78     		ldrb	r3, [r3]
 1928 0072 BA68     		ldr	r2, [r7, #8]
 1929 0074 D218     		add	r2, r2, r3
 1930 0076 3B1C     		mov	r3, r7
 1931 0078 0D33     		add	r3, r3, #13
 1932 007a 1278     		ldrb	r2, [r2]
 1933 007c 1A70     		strb	r2, [r3]
 1934              	.L122:
1490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 1935              		.loc 1 1490 0
 1936 007e 3B1C     		mov	r3, r7
 1937 0080 0F33     		add	r3, r3, #15
 1938 0082 1A78     		ldrb	r2, [r3]
 1939 0084 3B1C     		mov	r3, r7
 1940 0086 0F33     		add	r3, r3, #15
 1941 0088 0132     		add	r2, r2, #1
 1942 008a 1A70     		strb	r2, [r3]
 1943              	.L121:
1490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 1944              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1945 008c 3A1C     		mov	r2, r7
 1946 008e 0F32     		add	r2, r2, #15
 1947 0090 BB1D     		add	r3, r7, #6
 1948 0092 1278     		ldrb	r2, [r2]
 1949 0094 1B78     		ldrb	r3, [r3]
 1950 0096 9A42     		cmp	r2, r3
 1951 0098 CDD3     		bcc	.L123
1499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }    
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 62


1502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (maximum);
 1952              		.loc 1 1503 0 is_stmt 1
 1953 009a 3B1C     		mov	r3, r7
 1954 009c 0E33     		add	r3, r3, #14
 1955 009e 1B78     		ldrb	r3, [r3]
1504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1956              		.loc 1 1504 0
 1957 00a0 181C     		mov	r0, r3
 1958 00a2 BD46     		mov	sp, r7
 1959 00a4 04B0     		add	sp, sp, #16
 1960              		@ sp needed
 1961 00a6 80BD     		pop	{r7, pc}
 1962              	.L126:
 1963              		.align	2
 1964              	.L125:
 1965 00a8 00000000 		.word	CapSense_CSD_sensorSignal
 1966              		.cfi_endproc
 1967              	.LFE60:
 1968              		.size	CapSense_CSD_FindMaximum, .-CapSense_CSD_FindMaximum
 1969              		.global	__aeabi_idiv
 1970              		.section	.text.CapSense_CSD_CalcCentroid,"ax",%progbits
 1971              		.align	2
 1972              		.global	CapSense_CSD_CalcCentroid
 1973              		.code	16
 1974              		.thumb_func
 1975              		.type	CapSense_CSD_CalcCentroid, %function
 1976              	CapSense_CSD_CalcCentroid:
 1977              	.LFB61:
1505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
1509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution.
1514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  type:  widget type.
1517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
1518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:   Start index of centroid in CapSense_CSD_sensorSignal[] array.
1520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  API resolution.
1523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * 
1525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the slider.
1527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects: 
1529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
1531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 63


1533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset, 
1534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else								
1536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset, 
1537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1978              		.loc 1 1539 0
 1979              		.cfi_startproc
 1980 0000 90B5     		push	{r4, r7, lr}
 1981              		.cfi_def_cfa_offset 12
 1982              		.cfi_offset 4, -12
 1983              		.cfi_offset 7, -8
 1984              		.cfi_offset 14, -4
 1985 0002 89B0     		sub	sp, sp, #36
 1986              		.cfi_def_cfa_offset 48
 1987 0004 00AF     		add	r7, sp, #0
 1988              		.cfi_def_cfa_register 7
 1989 0006 041C     		mov	r4, r0
 1990 0008 081C     		mov	r0, r1
 1991 000a 111C     		mov	r1, r2
 1992 000c 1A1C     		mov	r2, r3
 1993 000e FB1D     		add	r3, r7, #7
 1994 0010 1C70     		strb	r4, [r3]
 1995 0012 BB1D     		add	r3, r7, #6
 1996 0014 1870     		strb	r0, [r3]
 1997 0016 7B1D     		add	r3, r7, #5
 1998 0018 1970     		strb	r1, [r3]
 1999 001a BB1C     		add	r3, r7, #2
 2000 001c 1A80     		strh	r2, [r3]
1540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posPrev;
1542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posNext;
1543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Helps during centroid calculation */
1546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		    static uint8 CapSense_CSD_centroid[3u];
1548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                
1550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)                
1551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 pos;
1552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 position;
1555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 numerator;
1556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         int32 denominator;
1557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		
1558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		uint8  *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 2001              		.loc 1 1558 0
 2002 001e BB1D     		add	r3, r7, #6
 2003 0020 1A78     		ldrb	r2, [r3]
 2004 0022 5A4B     		ldr	r3, .L137
 2005 0024 D318     		add	r3, r2, r3
 2006 0026 BB61     		str	r3, [r7, #24]
1559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		
1560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 64


1561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             posPrev = 0u;
 2007              		.loc 1 1561 0
 2008 0028 3B1C     		mov	r3, r7
 2009 002a 1F33     		add	r3, r3, #31
 2010 002c 0022     		mov	r2, #0
 2011 002e 1A70     		strb	r2, [r3]
1562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      
1564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  
1573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 { 
1576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)           
1599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u; 
1605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }                    
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 65


1613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     count <<= 1u;                    
1619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else                    
1620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
 2012              		.loc 1 1621 0
 2013 0030 FB1D     		add	r3, r7, #7
 2014 0032 1B78     		ldrb	r3, [r3]
 2015 0034 002B     		cmp	r3, #0
 2016 0036 05D0     		beq	.L128
1622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
 2017              		.loc 1 1623 0
 2018 0038 3B1C     		mov	r3, r7
 2019 003a 1F33     		add	r3, r3, #31
 2020 003c FA1D     		add	r2, r7, #7
 2021 003e 1278     		ldrb	r2, [r2]
 2022 0040 013A     		sub	r2, r2, #1
 2023 0042 1A70     		strb	r2, [r3]
 2024              	.L128:
1624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u;
 2025              		.loc 1 1625 0
 2026 0044 3B1C     		mov	r3, r7
 2027 0046 1733     		add	r3, r3, #23
 2028 0048 FA1D     		add	r2, r7, #7
 2029 004a 1278     		ldrb	r2, [r2]
 2030 004c 0132     		add	r2, r2, #1
 2031 004e 1A70     		strb	r2, [r3]
1626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
1628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
 2032              		.loc 1 1632 0
 2033 0050 FB1D     		add	r3, r7, #7
 2034 0052 1B78     		ldrb	r3, [r3]
 2035 0054 BA69     		ldr	r2, [r7, #24]
 2036 0056 D318     		add	r3, r2, r3
 2037 0058 1A78     		ldrb	r2, [r3]
 2038 005a 4D4B     		ldr	r3, .L137+4
 2039 005c 5A70     		strb	r2, [r3, #1]
1633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     
1635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2040              		.loc 1 1636 0
 2041 005e FB1D     		add	r3, r7, #7
 2042 0060 1B78     		ldrb	r3, [r3]
 2043 0062 002B     		cmp	r3, #0
 2044 0064 0BD1     		bne	.L129
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 66


1637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 { 
1638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 2045              		.loc 1 1638 0
 2046 0066 4A4B     		ldr	r3, .L137+4
 2047 0068 0022     		mov	r2, #0
 2048 006a 1A70     		strb	r2, [r3]
1639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 2049              		.loc 1 1639 0
 2050 006c 3B1C     		mov	r3, r7
 2051 006e 1733     		add	r3, r3, #23
 2052 0070 1B78     		ldrb	r3, [r3]
 2053 0072 BA69     		ldr	r2, [r7, #24]
 2054 0074 D318     		add	r3, r2, r3
 2055 0076 1A78     		ldrb	r2, [r3]
 2056 0078 454B     		ldr	r3, .L137+4
 2057 007a 9A70     		strb	r2, [r3, #2]
 2058 007c 22E0     		b	.L130
 2059              	.L129:
1640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2060              		.loc 1 1641 0
 2061 007e FB1D     		add	r3, r7, #7
 2062 0080 1A78     		ldrb	r2, [r3]
 2063 0082 7B1D     		add	r3, r7, #5
 2064 0084 1B78     		ldrb	r3, [r3]
 2065 0086 013B     		sub	r3, r3, #1
 2066 0088 9A42     		cmp	r2, r3
 2067 008a 0BD1     		bne	.L131
1642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 2068              		.loc 1 1643 0
 2069 008c 3B1C     		mov	r3, r7
 2070 008e 1F33     		add	r3, r3, #31
 2071 0090 1B78     		ldrb	r3, [r3]
 2072 0092 BA69     		ldr	r2, [r7, #24]
 2073 0094 D318     		add	r3, r2, r3
 2074 0096 1A78     		ldrb	r2, [r3]
 2075 0098 3D4B     		ldr	r3, .L137+4
 2076 009a 1A70     		strb	r2, [r3]
1644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 2077              		.loc 1 1644 0
 2078 009c 3C4B     		ldr	r3, .L137+4
 2079 009e 0022     		mov	r2, #0
 2080 00a0 9A70     		strb	r2, [r3, #2]
 2081 00a2 0FE0     		b	.L130
 2082              	.L131:
1645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 2083              		.loc 1 1648 0
 2084 00a4 3B1C     		mov	r3, r7
 2085 00a6 1F33     		add	r3, r3, #31
 2086 00a8 1B78     		ldrb	r3, [r3]
 2087 00aa BA69     		ldr	r2, [r7, #24]
 2088 00ac D318     		add	r3, r2, r3
 2089 00ae 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 67


 2090 00b0 374B     		ldr	r3, .L137+4
 2091 00b2 1A70     		strb	r2, [r3]
1649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 2092              		.loc 1 1649 0
 2093 00b4 3B1C     		mov	r3, r7
 2094 00b6 1733     		add	r3, r3, #23
 2095 00b8 1B78     		ldrb	r3, [r3]
 2096 00ba BA69     		ldr	r2, [r7, #24]
 2097 00bc D318     		add	r3, r2, r3
 2098 00be 1A78     		ldrb	r2, [r3]
 2099 00c0 334B     		ldr	r3, .L137+4
 2100 00c2 9A70     		strb	r2, [r3, #2]
 2101              	.L130:
1650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
 2102              		.loc 1 1658 0
 2103 00c4 324B     		ldr	r3, .L137+4
 2104 00c6 1B78     		ldrb	r3, [r3]
 2105 00c8 3A1C     		mov	r2, r7
 2106 00ca 3032     		add	r2, r2, #48
 2107 00cc 1278     		ldrb	r2, [r2]
 2108 00ce 9A42     		cmp	r2, r3
 2109 00d0 09D2     		bcs	.L132
1659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
 2110              		.loc 1 1660 0
 2111 00d2 2F4B     		ldr	r3, .L137+4
 2112 00d4 1A78     		ldrb	r2, [r3]
 2113 00d6 3B1C     		mov	r3, r7
 2114 00d8 3033     		add	r3, r3, #48
 2115 00da 1B78     		ldrb	r3, [r3]
 2116 00dc D31A     		sub	r3, r2, r3
 2117 00de DAB2     		uxtb	r2, r3
 2118 00e0 2B4B     		ldr	r3, .L137+4
 2119 00e2 1A70     		strb	r2, [r3]
 2120 00e4 02E0     		b	.L133
 2121              	.L132:
1661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 2122              		.loc 1 1664 0
 2123 00e6 2A4B     		ldr	r3, .L137+4
 2124 00e8 0022     		mov	r2, #0
 2125 00ea 1A70     		strb	r2, [r3]
 2126              	.L133:
1665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 68


 2127              		.loc 1 1668 0
 2128 00ec 284B     		ldr	r3, .L137+4
 2129 00ee 5A78     		ldrb	r2, [r3, #1]
 2130 00f0 3B1C     		mov	r3, r7
 2131 00f2 3033     		add	r3, r3, #48
 2132 00f4 1B78     		ldrb	r3, [r3]
 2133 00f6 D31A     		sub	r3, r2, r3
 2134 00f8 DAB2     		uxtb	r2, r3
 2135 00fa 254B     		ldr	r3, .L137+4
 2136 00fc 5A70     		strb	r2, [r3, #1]
1669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
 2137              		.loc 1 1671 0
 2138 00fe 244B     		ldr	r3, .L137+4
 2139 0100 9B78     		ldrb	r3, [r3, #2]
 2140 0102 3A1C     		mov	r2, r7
 2141 0104 3032     		add	r2, r2, #48
 2142 0106 1278     		ldrb	r2, [r2]
 2143 0108 9A42     		cmp	r2, r3
 2144 010a 09D2     		bcs	.L134
1672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
 2145              		.loc 1 1673 0
 2146 010c 204B     		ldr	r3, .L137+4
 2147 010e 9A78     		ldrb	r2, [r3, #2]
 2148 0110 3B1C     		mov	r3, r7
 2149 0112 3033     		add	r3, r3, #48
 2150 0114 1B78     		ldrb	r3, [r3]
 2151 0116 D31A     		sub	r3, r2, r3
 2152 0118 DAB2     		uxtb	r2, r3
 2153 011a 1D4B     		ldr	r3, .L137+4
 2154 011c 9A70     		strb	r2, [r3, #2]
 2155 011e 02E0     		b	.L135
 2156              	.L134:
1674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 2157              		.loc 1 1677 0
 2158 0120 1B4B     		ldr	r3, .L137+4
 2159 0122 0022     		mov	r2, #0
 2160 0124 9A70     		strb	r2, [r3, #2]
 2161              	.L135:
1678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
 2162              		.loc 1 1682 0
 2163 0126 1A4B     		ldr	r3, .L137+4
 2164 0128 9B78     		ldrb	r3, [r3, #2]
 2165 012a 1A1C     		mov	r2, r3
1683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 2166              		.loc 1 1683 0
 2167 012c 184B     		ldr	r3, .L137+4
 2168 012e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 69


1682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
 2169              		.loc 1 1682 0
 2170 0130 D31A     		sub	r3, r2, r3
 2171 0132 3B61     		str	r3, [r7, #16]
1684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] + 
 2172              		.loc 1 1686 0
 2173 0134 164B     		ldr	r3, .L137+4
 2174 0136 1B78     		ldrb	r3, [r3]
 2175 0138 1A1C     		mov	r2, r3
1687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
 2176              		.loc 1 1687 0
 2177 013a 154B     		ldr	r3, .L137+4
 2178 013c 5B78     		ldrb	r3, [r3, #1]
1686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] + 
 2179              		.loc 1 1686 0
 2180 013e D218     		add	r2, r2, r3
1688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
 2181              		.loc 1 1688 0
 2182 0140 134B     		ldr	r3, .L137+4
 2183 0142 9B78     		ldrb	r3, [r3, #2]
1686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] + 
 2184              		.loc 1 1686 0
 2185 0144 D318     		add	r3, r2, r3
 2186 0146 FB60     		str	r3, [r7, #12]
1689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2187              		.loc 1 1691 0
 2188 0148 3B69     		ldr	r3, [r7, #16]
 2189 014a 1B02     		lsl	r3, r3, #8
 2190 014c 181C     		mov	r0, r3
 2191 014e F968     		ldr	r1, [r7, #12]
 2192 0150 FFF7FEFF 		bl	__aeabi_idiv
 2193 0154 031C     		mov	r3, r0
 2194 0156 1A1C     		mov	r2, r3
 2195 0158 FB1D     		add	r3, r7, #7
 2196 015a 1B78     		ldrb	r3, [r3]
 2197 015c 1B02     		lsl	r3, r3, #8
 2198 015e D318     		add	r3, r2, r3
 2199 0160 FB60     		str	r3, [r7, #12]
1692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
 2200              		.loc 1 1701 0
 2201 0162 BB1C     		add	r3, r7, #2
 2202 0164 1B88     		ldrh	r3, [r3]
 2203 0166 1AB2     		sxth	r2, r3
 2204 0168 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 70


 2205 016a 5343     		mul	r3, r2
 2206 016c FB60     		str	r3, [r7, #12]
1702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Round result and put it to uint8 */
1704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
 2207              		.loc 1 1704 0
 2208 016e FB68     		ldr	r3, [r7, #12]
 2209 0170 FE22     		mov	r2, #254
 2210 0172 D201     		lsl	r2, r2, #7
 2211 0174 9B18     		add	r3, r3, r2
 2212 0176 1A0C     		lsr	r2, r3, #16
 2213 0178 3B1C     		mov	r3, r7
 2214 017a 0B33     		add	r3, r3, #11
 2215 017c 1A70     		strb	r2, [r3]
1705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2216              		.loc 1 1706 0
 2217 017e 3B1C     		mov	r3, r7
 2218 0180 0B33     		add	r3, r3, #11
 2219 0182 1B78     		ldrb	r3, [r3]
1707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }    
 2220              		.loc 1 1707 0
 2221 0184 181C     		mov	r0, r3
 2222 0186 BD46     		mov	sp, r7
 2223 0188 09B0     		add	sp, sp, #36
 2224              		@ sp needed
 2225 018a 90BD     		pop	{r4, r7, pc}
 2226              	.L138:
 2227              		.align	2
 2228              	.L137:
 2229 018c 00000000 		.word	CapSense_CSD_sensorSignal
 2230 0190 38000000 		.word	CapSense_CSD_centroid.5380
 2231              		.cfi_endproc
 2232              	.LFE61:
 2233              		.size	CapSense_CSD_CalcCentroid, .-CapSense_CSD_CalcCentroid
 2234              		.section	.text.CapSense_CSD_GetCentroidPos,"ax",%progbits
 2235              		.align	2
 2236              		.global	CapSense_CSD_GetCentroidPos
 2237              		.code	16
 2238              		.thumb_func
 2239              		.type	CapSense_CSD_GetCentroidPos, %function
 2240              	CapSense_CSD_GetCentroidPos:
 2241              	.LFB62:
1708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 71


1722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__LS           5
1726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * 
1727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the linear slider.
1729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
1731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
1732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint32 widget)
1748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2242              		.loc 1 1748 0
 2243              		.cfi_startproc
 2244 0000 90B5     		push	{r4, r7, lr}
 2245              		.cfi_def_cfa_offset 12
 2246              		.cfi_offset 4, -12
 2247              		.cfi_offset 7, -8
 2248              		.cfi_offset 14, -4
 2249 0002 87B0     		sub	sp, sp, #28
 2250              		.cfi_def_cfa_offset 40
 2251 0004 02AF     		add	r7, sp, #8
 2252              		.cfi_def_cfa 7, 32
 2253 0006 7860     		str	r0, [r7, #4]
1749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             const uint8 *diplex;
1751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 
1753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
 2254              		.loc 1 1755 0
 2255 0008 3B1C     		mov	r3, r7
 2256 000a 0D33     		add	r3, r3, #13
 2257 000c 4E49     		ldr	r1, .L145
 2258 000e 7A68     		ldr	r2, [r7, #4]
 2259 0010 8A18     		add	r2, r1, r2
 2260 0012 1278     		ldrb	r2, [r2]
 2261 0014 1A70     		strb	r2, [r3]
1756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];  
 2262              		.loc 1 1756 0
 2263 0016 3B1C     		mov	r3, r7
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 72


 2264 0018 0C33     		add	r3, r3, #12
 2265 001a 4C49     		ldr	r1, .L145+4
 2266 001c 7A68     		ldr	r2, [r7, #4]
 2267 001e 8A18     		add	r2, r1, r2
 2268 0020 1278     		ldrb	r2, [r2]
 2269 0022 1A70     		strb	r2, [r3]
1757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 2270              		.loc 1 1768 0
 2271 0024 3B1C     		mov	r3, r7
 2272 0026 0B33     		add	r3, r3, #11
 2273 0028 0022     		mov	r2, #0
 2274 002a 1A70     		strb	r2, [r3]
1769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 2275              		.loc 1 1769 0
 2276 002c 3B1C     		mov	r3, r7
 2277 002e 0A33     		add	r3, r3, #10
 2278 0030 0C22     		mov	r2, #12
 2279 0032 1A70     		strb	r2, [r3]
1770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
1771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		/* Find Maximum within centroid */      
1784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[widget], d
1786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#else
1787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[widget]);
 2280              		.loc 1 1787 0
 2281 0034 464A     		ldr	r2, .L145+8
 2282 0036 7B68     		ldr	r3, [r7, #4]
 2283 0038 D318     		add	r3, r2, r3
 2284 003a 1B78     		ldrb	r3, [r3]
 2285 003c 3C1C     		mov	r4, r7
 2286 003e 0934     		add	r4, r4, #9
 2287 0040 3A1C     		mov	r2, r7
 2288 0042 0B32     		add	r2, r2, #11
 2289 0044 1178     		ldrb	r1, [r2]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 73


 2290 0046 3A1C     		mov	r2, r7
 2291 0048 0A32     		add	r2, r2, #10
 2292 004a 1278     		ldrb	r2, [r2]
 2293 004c 081C     		mov	r0, r1
 2294 004e 111C     		mov	r1, r2
 2295 0050 1A1C     		mov	r2, r3
 2296 0052 FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 2297 0056 031C     		mov	r3, r0
 2298 0058 2370     		strb	r3, [r4]
1788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
 2299              		.loc 1 1790 0
 2300 005a 3B1C     		mov	r3, r7
 2301 005c 0933     		add	r3, r3, #9
 2302 005e 1B78     		ldrb	r3, [r3]
 2303 0060 FF2B     		cmp	r3, #255
 2304 0062 59D0     		beq	.L140
1791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
 2305              		.loc 1 1793 0
 2306 0064 3B4B     		ldr	r3, .L145+12
 2307 0066 3C49     		ldr	r1, .L145+16
 2308 0068 7A68     		ldr	r2, [r7, #4]
 2309 006a 8A18     		add	r2, r1, r2
 2310 006c 1478     		ldrb	r4, [r2]
 2311 006e 3A1C     		mov	r2, r7
 2312 0070 0932     		add	r2, r2, #9
 2313 0072 1078     		ldrb	r0, [r2]
 2314 0074 3A1C     		mov	r2, r7
 2315 0076 0B32     		add	r2, r2, #11
 2316 0078 1178     		ldrb	r1, [r2]
 2317 007a 3A1C     		mov	r2, r7
 2318 007c 0A32     		add	r2, r2, #10
 2319 007e 1278     		ldrb	r2, [r2]
 2320 0080 0094     		str	r4, [sp]
 2321 0082 FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 2322 0086 031C     		mov	r3, r0
 2323 0088 1A1C     		mov	r2, r3
 2324 008a 3B1C     		mov	r3, r7
 2325 008c 0E33     		add	r3, r3, #14
 2326 008e 1A80     		strh	r2, [r3]
1794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
 2327              		.loc 1 1798 0
 2328 0090 3B1C     		mov	r3, r7
 2329 0092 0C33     		add	r3, r3, #12
 2330 0094 1A78     		ldrb	r2, [r3]
 2331 0096 1F23     		mov	r3, #31
 2332 0098 1340     		and	r3, r2
 2333 009a 4ED0     		beq	.L143
1799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 74


1801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2334              		.loc 1 1801 0
 2335 009c 3B1C     		mov	r3, r7
 2336 009e 0833     		add	r3, r3, #8
 2337 00a0 3A1C     		mov	r2, r7
 2338 00a2 0D32     		add	r2, r2, #13
 2339 00a4 1278     		ldrb	r2, [r2]
 2340 00a6 0132     		add	r2, r2, #1
 2341 00a8 1A70     		strb	r2, [r3]
1802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     
1803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
 2342              		.loc 1 1803 0
 2343 00aa 3B1C     		mov	r3, r7
 2344 00ac 0D33     		add	r3, r3, #13
 2345 00ae 1B78     		ldrb	r3, [r3]
 2346 00b0 254A     		ldr	r2, .L145
 2347 00b2 D35C     		ldrb	r3, [r2, r3]
 2348 00b4 002B     		cmp	r3, #0
 2349 00b6 0FD1     		bne	.L142
1804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
 2350              		.loc 1 1806 0
 2351 00b8 3B1C     		mov	r3, r7
 2352 00ba 0833     		add	r3, r3, #8
 2353 00bc 1B78     		ldrb	r3, [r3]
 2354 00be 3A1C     		mov	r2, r7
 2355 00c0 0E32     		add	r2, r2, #14
 2356 00c2 1288     		ldrh	r2, [r2]
 2357 00c4 D1B2     		uxtb	r1, r2
 2358 00c6 204A     		ldr	r2, .L145
 2359 00c8 D154     		strb	r1, [r2, r3]
1807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
1813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
1823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
 2360              		.loc 1 1823 0
 2361 00ca 3B1C     		mov	r3, r7
 2362 00cc 0D33     		add	r3, r3, #13
 2363 00ce 1B78     		ldrb	r3, [r3]
 2364 00d0 1D4A     		ldr	r2, .L145
 2365 00d2 0121     		mov	r1, #1
 2366 00d4 D154     		strb	r1, [r2, r3]
 2367 00d6 30E0     		b	.L143
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 75


 2368              	.L142:
1824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1839:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1840:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1841:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1842:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1843:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1844:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) 
1845:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1846:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1847:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1848:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1849:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1850:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1851:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1852:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1853:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1854:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1855:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1856:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1857:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1858:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER)) 
1859:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1860:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1861:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1862:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1863:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1864:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1865:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1866:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1867:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1868:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1869:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1870:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1871:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1872:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1873:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1874:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }                                
1875:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1876:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1877:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1878:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1879:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 76


1880:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
 2369              		.loc 1 1880 0
 2370 00d8 3B1C     		mov	r3, r7
 2371 00da 0C33     		add	r3, r3, #12
 2372 00dc 1A78     		ldrb	r2, [r3]
 2373 00de 1023     		mov	r3, #16
 2374 00e0 1340     		and	r3, r2
 2375 00e2 2AD0     		beq	.L143
1881:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1882:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1883:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
 2376              		.loc 1 1883 0
 2377 00e4 3B1C     		mov	r3, r7
 2378 00e6 0833     		add	r3, r3, #8
 2379 00e8 1B78     		ldrb	r3, [r3]
 2380 00ea 174A     		ldr	r2, .L145
 2381 00ec D35C     		ldrb	r3, [r2, r3]
1882:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
 2382              		.loc 1 1882 0
 2383 00ee 3C1C     		mov	r4, r7
 2384 00f0 0E34     		add	r4, r4, #14
 2385 00f2 3A1C     		mov	r2, r7
 2386 00f4 0E32     		add	r2, r2, #14
 2387 00f6 1288     		ldrh	r2, [r2]
 2388 00f8 101C     		mov	r0, r2
 2389 00fa 191C     		mov	r1, r3
 2390 00fc FFF7FEFF 		bl	CapSense_CSD_JitterFilter
 2391 0100 031C     		mov	r3, r0
 2392 0102 2380     		strh	r3, [r4]
1884:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
 2393              		.loc 1 1884 0
 2394 0104 3B1C     		mov	r3, r7
 2395 0106 0833     		add	r3, r3, #8
 2396 0108 1B78     		ldrb	r3, [r3]
 2397 010a 3A1C     		mov	r2, r7
 2398 010c 0E32     		add	r2, r2, #14
 2399 010e 1288     		ldrh	r2, [r2]
 2400 0110 D1B2     		uxtb	r1, r2
 2401 0112 0D4A     		ldr	r2, .L145
 2402 0114 D154     		strb	r1, [r2, r3]
 2403 0116 10E0     		b	.L143
 2404              	.L140:
1885:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1886:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1887:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1888:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1889:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1890:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1891:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1892:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1893:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1894:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1895:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1896:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found */
1897:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 2405              		.loc 1 1897 0
 2406 0118 3B1C     		mov	r3, r7
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 77


 2407 011a 0E33     		add	r3, r3, #14
 2408 011c 0122     		mov	r2, #1
 2409 011e 5242     		neg	r2, r2
 2410 0120 1A80     		strh	r2, [r3]
1898:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1899:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1900:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
1901:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
 2411              		.loc 1 1901 0
 2412 0122 3B1C     		mov	r3, r7
 2413 0124 0C33     		add	r3, r3, #12
 2414 0126 1A78     		ldrb	r2, [r3]
 2415 0128 1F23     		mov	r3, #31
 2416 012a 1340     		and	r3, r2
 2417 012c 05D0     		beq	.L143
1902:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1903:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
 2418              		.loc 1 1903 0
 2419 012e 3B1C     		mov	r3, r7
 2420 0130 0D33     		add	r3, r3, #13
 2421 0132 1B78     		ldrb	r3, [r3]
 2422 0134 044A     		ldr	r2, .L145
 2423 0136 0021     		mov	r1, #0
 2424 0138 D154     		strb	r1, [r2, r3]
 2425              	.L143:
1904:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1905:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1906:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1907:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1908:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1909:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2426              		.loc 1 1909 0
 2427 013a 3B1C     		mov	r3, r7
 2428 013c 0E33     		add	r3, r3, #14
 2429 013e 1B88     		ldrh	r3, [r3]
1910:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2430              		.loc 1 1910 0
 2431 0140 181C     		mov	r0, r3
 2432 0142 BD46     		mov	sp, r7
 2433 0144 05B0     		add	sp, sp, #20
 2434              		@ sp needed
 2435 0146 90BD     		pop	{r4, r7, pc}
 2436              	.L146:
 2437              		.align	2
 2438              	.L145:
 2439 0148 18000000 		.word	CapSense_CSD_posFiltersData
 2440 014c 14000000 		.word	CapSense_CSD_posFiltersMask
 2441 0150 00000000 		.word	CapSense_CSD_fingerThreshold
 2442 0154 8B0B0000 		.word	2955
 2443 0158 00000000 		.word	CapSense_CSD_noiseThreshold
 2444              		.cfi_endproc
 2445              	.LFE62:
 2446              		.size	CapSense_CSD_GetCentroidPos, .-CapSense_CSD_GetCentroidPos
 2447              		.section	.text.CapSense_CSD_GetRadialCentroidPos,"ax",%progbits
 2448              		.align	2
 2449              		.global	CapSense_CSD_GetRadialCentroidPos
 2450              		.code	16
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 78


 2451              		.thumb_func
 2452              		.type	CapSense_CSD_GetRadialCentroidPos, %function
 2453              	CapSense_CSD_GetRadialCentroidPos:
 2454              	.LFB63:
1911:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
1912:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1913:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1914:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1915:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1916:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1917:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1918:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1919:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1920:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1921:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1922:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1923:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1924:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1925:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1926:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1927:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1928:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__RS           5
1929:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * 
1930:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1931:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the radial slider.
1932:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
1934:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
1935:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
1936:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1937:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1938:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1939:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1940:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1941:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1942:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1943:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1944:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1945:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1946:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1947:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1948:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1949:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1950:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint32 widget)
1951:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2455              		.loc 1 1951 0
 2456              		.cfi_startproc
 2457 0000 90B5     		push	{r4, r7, lr}
 2458              		.cfi_def_cfa_offset 12
 2459              		.cfi_offset 4, -12
 2460              		.cfi_offset 7, -8
 2461              		.cfi_offset 14, -4
 2462 0002 87B0     		sub	sp, sp, #28
 2463              		.cfi_def_cfa_offset 40
 2464 0004 02AF     		add	r7, sp, #8
 2465              		.cfi_def_cfa 7, 32
 2466 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 79


1952:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1953:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1954:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1955:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget]; 
1956:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1957:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1958:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1959:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1960:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1961:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1962:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1963:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1964:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1965:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1966:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1967:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 2467              		.loc 1 1967 0
 2468 0008 3B1C     		mov	r3, r7
 2469 000a 0D33     		add	r3, r3, #13
 2470 000c 0022     		mov	r2, #0
 2471 000e 1A70     		strb	r2, [r3]
1968:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 2472              		.loc 1 1968 0
 2473 0010 3B1C     		mov	r3, r7
 2474 0012 0C33     		add	r3, r3, #12
 2475 0014 0C22     		mov	r2, #12
 2476 0016 1A70     		strb	r2, [r3]
1969:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1970:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		/* Find Maximum within centroid */      
1971:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1972:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[widget], 0
1973:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#else
1974:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 			maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[widget]);
 2477              		.loc 1 1974 0
 2478 0018 1D4A     		ldr	r2, .L151
 2479 001a 7B68     		ldr	r3, [r7, #4]
 2480 001c D318     		add	r3, r2, r3
 2481 001e 1B78     		ldrb	r3, [r3]
 2482 0020 3C1C     		mov	r4, r7
 2483 0022 0B34     		add	r4, r4, #11
 2484 0024 3A1C     		mov	r2, r7
 2485 0026 0D32     		add	r2, r2, #13
 2486 0028 1178     		ldrb	r1, [r2]
 2487 002a 3A1C     		mov	r2, r7
 2488 002c 0C32     		add	r2, r2, #12
 2489 002e 1278     		ldrb	r2, [r2]
 2490 0030 081C     		mov	r0, r1
 2491 0032 111C     		mov	r1, r2
 2492 0034 1A1C     		mov	r2, r3
 2493 0036 FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 2494 003a 031C     		mov	r3, r0
 2495 003c 2370     		strb	r3, [r4]
1975:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		#endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1976:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
1977:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != CapSense_CSD_MAXIMUM_CENTROID)
 2496              		.loc 1 1977 0
 2497 003e 3B1C     		mov	r3, r7
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 80


 2498 0040 0B33     		add	r3, r3, #11
 2499 0042 1B78     		ldrb	r3, [r3]
 2500 0044 FF2B     		cmp	r3, #255
 2501 0046 16D0     		beq	.L148
1978:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1979:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1980:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
 2502              		.loc 1 1980 0
 2503 0048 124B     		ldr	r3, .L151+4
 2504 004a 1349     		ldr	r1, .L151+8
 2505 004c 7A68     		ldr	r2, [r7, #4]
 2506 004e 8A18     		add	r2, r1, r2
 2507 0050 1478     		ldrb	r4, [r2]
 2508 0052 3A1C     		mov	r2, r7
 2509 0054 0B32     		add	r2, r2, #11
 2510 0056 1078     		ldrb	r0, [r2]
 2511 0058 3A1C     		mov	r2, r7
 2512 005a 0D32     		add	r2, r2, #13
 2513 005c 1178     		ldrb	r1, [r2]
 2514 005e 3A1C     		mov	r2, r7
 2515 0060 0C32     		add	r2, r2, #12
 2516 0062 1278     		ldrb	r2, [r2]
 2517 0064 0094     		str	r4, [sp]
 2518 0066 FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 2519 006a 031C     		mov	r3, r0
 2520 006c 1A1C     		mov	r2, r3
 2521 006e 3B1C     		mov	r3, r7
 2522 0070 0E33     		add	r3, r3, #14
 2523 0072 1A80     		strh	r2, [r3]
 2524 0074 04E0     		b	.L149
 2525              	.L148:
1981:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1982:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1983:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1984:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1985:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1986:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1987:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1988:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1989:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     
1990:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1991:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1992:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1993:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1994:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1995:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1996:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1997:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1998:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1999:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  || 
2000:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2001:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2002:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
2003:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2004:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2005:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2006:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 81


2007:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2008:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2009:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
2010:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2011:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2012:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
2013:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2014:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
2015:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2016:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2017:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2018:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2019:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
2020:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2021:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2022:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = 
2023:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
2024:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2025:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2026:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & 
2027:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2028:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2029:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2030:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
2031:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2032:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2033:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2034:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2035:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position, 
2036:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2037:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2038:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
2039:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2040:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2041:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2042:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2044:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2045:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2046:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2047:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2048:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
2049:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2050:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2051:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2052:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & 
2053:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2055:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2056:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2057:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2058:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2059:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
2060:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2061:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2062:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2063:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 82


2064:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2065:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2066:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2067:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2068:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2069:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2070:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position, 
2071:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
2072:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2073:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2074:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
2075:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2076:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2077:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2078:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2079:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2080:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2081:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2082:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2083:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2084:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found?? */
2085:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 2526              		.loc 1 2085 0
 2527 0076 3B1C     		mov	r3, r7
 2528 0078 0E33     		add	r3, r3, #14
 2529 007a 0122     		mov	r2, #1
 2530 007c 5242     		neg	r2, r2
 2531 007e 1A80     		strh	r2, [r3]
 2532              	.L149:
2086:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2087:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2088:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2089:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2090:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2091:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2092:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2093:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2094:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2095:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2096:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2533              		.loc 1 2096 0
 2534 0080 3B1C     		mov	r3, r7
 2535 0082 0E33     		add	r3, r3, #14
 2536 0084 1B88     		ldrh	r3, [r3]
2097:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2537              		.loc 1 2097 0
 2538 0086 181C     		mov	r0, r3
 2539 0088 BD46     		mov	sp, r7
 2540 008a 05B0     		add	sp, sp, #20
 2541              		@ sp needed
 2542 008c 90BD     		pop	{r4, r7, pc}
 2543              	.L152:
 2544 008e C046     		.align	2
 2545              	.L151:
 2546 0090 00000000 		.word	CapSense_CSD_fingerThreshold
 2547 0094 8B0B0000 		.word	2955
 2548 0098 00000000 		.word	CapSense_CSD_noiseThreshold
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 83


 2549              		.cfi_endproc
 2550              	.LFE63:
 2551              		.size	CapSense_CSD_GetRadialCentroidPos, .-CapSense_CSD_GetRadialCentroidPos
 2552              		.section	.text.CapSense_CSD_MedianFilter,"ax",%progbits
 2553              		.align	2
 2554              		.global	CapSense_CSD_MedianFilter
 2555              		.code	16
 2556              		.thumb_func
 2557              		.type	CapSense_CSD_MedianFilter, %function
 2558              	CapSense_CSD_MedianFilter:
 2559              	.LFB64:
2098:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
2099:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
2104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
2112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  customizer.
2114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number. 
2117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__TP            5
2119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
2122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
2123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
2124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   calculations.
2135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetTouchCentroidPos(uint32 widget, uint16* pos)
2138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
2141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
2142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
2143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 84


2144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint16 tempPos;
2149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
2150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
2151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
2152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxX;
2154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxY;
2155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posX;
2156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posY;
2157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 touch = 0u;
2158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
2159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
2160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
2162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
2164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
2165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
2166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (MaxX != CapSense_CSD_MAXIMUM_CENTROID)
2169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
2171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
2172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
2174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
2177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (MaxY != CapSense_CSD_MAXIMUM_CENTROID)
2181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
2183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 touch = 1u;
2184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 
2185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
2186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(MaxY, offset, count, 
2187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
2188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 
2189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
2190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
2191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
2192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 
2193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(MaxX, offset, count, 
2194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
2195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
2196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
2198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Calculate position to store filters data */
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 85


2201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
2203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         
2204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Init filters */
2207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
2208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
2209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
2211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
2212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
2213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
2216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
2219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
2220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
2224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             
2227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
2230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Do filtering */
2232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
2237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = 
2240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     
2243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
2245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = 
2248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 
2252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
2253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
2257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 86


2258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
2261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = 
2264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     
2267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY, 
2269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = 
2272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX, 
2284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
2285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     
2287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY, 
2288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 
2292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
2293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
2300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
2304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 
2308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
2309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     {
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 87


2315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX, 
2316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
2318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         
2319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY, 
2320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
2322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     }
2323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
2324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Save positions */
2331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
2332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
2333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(touch == 0u)
2338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (touch);
2348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) )
2355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
2357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Median filter function. 
2361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  median value.
2363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 88


2372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2560              		.loc 1 2380 0
 2561              		.cfi_startproc
 2562 0000 80B5     		push	{r7, lr}
 2563              		.cfi_def_cfa_offset 8
 2564              		.cfi_offset 7, -8
 2565              		.cfi_offset 14, -4
 2566 0002 84B0     		sub	sp, sp, #16
 2567              		.cfi_def_cfa_offset 24
 2568 0004 00AF     		add	r7, sp, #0
 2569              		.cfi_def_cfa_register 7
 2570 0006 BB1D     		add	r3, r7, #6
 2571 0008 1880     		strh	r0, [r3]
 2572 000a 3B1D     		add	r3, r7, #4
 2573 000c 1980     		strh	r1, [r3]
 2574 000e BB1C     		add	r3, r7, #2
 2575 0010 1A80     		strh	r2, [r3]
2381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 tmp;
2382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2576              		.loc 1 2383 0
 2577 0012 BA1D     		add	r2, r7, #6
 2578 0014 3B1D     		add	r3, r7, #4
 2579 0016 1288     		ldrh	r2, [r2]
 2580 0018 1B88     		ldrh	r3, [r3]
 2581 001a 9A42     		cmp	r2, r3
 2582 001c 0DD9     		bls	.L154
2384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tmp = x2;
 2583              		.loc 1 2385 0
 2584 001e 3B1C     		mov	r3, r7
 2585 0020 0E33     		add	r3, r3, #14
 2586 0022 3A1D     		add	r2, r7, #4
 2587 0024 1288     		ldrh	r2, [r2]
 2588 0026 1A80     		strh	r2, [r3]
2386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x1;
 2589              		.loc 1 2386 0
 2590 0028 3B1D     		add	r3, r7, #4
 2591 002a BA1D     		add	r2, r7, #6
 2592 002c 1288     		ldrh	r2, [r2]
 2593 002e 1A80     		strh	r2, [r3]
2387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1 = tmp;
 2594              		.loc 1 2387 0
 2595 0030 BB1D     		add	r3, r7, #6
 2596 0032 3A1C     		mov	r2, r7
 2597 0034 0E32     		add	r2, r2, #14
 2598 0036 1288     		ldrh	r2, [r2]
 2599 0038 1A80     		strh	r2, [r3]
 2600              	.L154:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 89


2388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x2 > x3)
 2601              		.loc 1 2390 0
 2602 003a 3A1D     		add	r2, r7, #4
 2603 003c BB1C     		add	r3, r7, #2
 2604 003e 1288     		ldrh	r2, [r2]
 2605 0040 1B88     		ldrh	r3, [r3]
 2606 0042 9A42     		cmp	r2, r3
 2607 0044 03D9     		bls	.L155
2391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x3;
 2608              		.loc 1 2392 0
 2609 0046 3B1D     		add	r3, r7, #4
 2610 0048 BA1C     		add	r2, r7, #2
 2611 004a 1288     		ldrh	r2, [r2]
 2612 004c 1A80     		strh	r2, [r3]
 2613              	.L155:
2393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2614              		.loc 1 2395 0
 2615 004e 3B1D     		add	r3, r7, #4
 2616 0050 BA1D     		add	r2, r7, #6
 2617 0052 1288     		ldrh	r2, [r2]
 2618 0054 1B88     		ldrh	r3, [r3]
 2619 0056 98B2     		uxth	r0, r3
 2620 0058 91B2     		uxth	r1, r2
 2621 005a 8842     		cmp	r0, r1
 2622 005c 00D2     		bcs	.L156
 2623 005e 131C     		add	r3, r2, #0
 2624              	.L156:
 2625 0060 9BB2     		uxth	r3, r3
2396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2626              		.loc 1 2396 0
 2627 0062 181C     		mov	r0, r3
 2628 0064 BD46     		mov	sp, r7
 2629 0066 04B0     		add	sp, sp, #16
 2630              		@ sp needed
 2631 0068 80BD     		pop	{r7, pc}
 2632              		.cfi_endproc
 2633              	.LFE64:
 2634              		.size	CapSense_CSD_MedianFilter, .-CapSense_CSD_MedianFilter
 2635 006a C046     		.section	.text.CapSense_CSD_IIR4Filter,"ax",%progbits
 2636              		.align	2
 2637              		.global	CapSense_CSD_IIR4Filter
 2638              		.code	16
 2639              		.thumb_func
 2640              		.type	CapSense_CSD_IIR4Filter, %function
 2641              	CapSense_CSD_IIR4Filter:
 2642              	.LFB65:
2397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) ) */
2400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) || \
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 90


2403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER)) )
2404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
2406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Averaging filter function.
2410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
2412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) || \
2435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) ) */
2436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
2442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 91


2460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
2462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
2468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
2469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
2480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a filtered value.
2491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
2500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2643              		.loc 1 2500 0
 2644              		.cfi_startproc
 2645 0000 80B5     		push	{r7, lr}
 2646              		.cfi_def_cfa_offset 8
 2647              		.cfi_offset 7, -8
 2648              		.cfi_offset 14, -4
 2649 0002 84B0     		sub	sp, sp, #16
 2650              		.cfi_def_cfa_offset 24
 2651 0004 00AF     		add	r7, sp, #0
 2652              		.cfi_def_cfa_register 7
 2653 0006 0A1C     		mov	r2, r1
 2654 0008 BB1D     		add	r3, r7, #6
 2655 000a 011C     		add	r1, r0, #0
 2656 000c 1980     		strh	r1, [r3]
 2657 000e 3B1D     		add	r3, r7, #4
 2658 0010 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 92


2501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2659              		.loc 1 2504 0
 2660 0012 BB1D     		add	r3, r7, #6
 2661 0014 1A88     		ldrh	r2, [r3]
 2662 0016 3B1D     		add	r3, r7, #4
 2663 0018 1B88     		ldrh	r3, [r3]
 2664 001a D318     		add	r3, r2, r3
 2665 001c FB60     		str	r3, [r7, #12]
2505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2666              		.loc 1 2505 0
 2667 001e 3B1D     		add	r3, r7, #4
 2668 0020 1B88     		ldrh	r3, [r3]
 2669 0022 5B00     		lsl	r3, r3, #1
 2670 0024 FA68     		ldr	r2, [r7, #12]
 2671 0026 D318     		add	r3, r2, r3
 2672 0028 FB60     		str	r3, [r7, #12]
2506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
 2673              		.loc 1 2506 0
 2674 002a FB68     		ldr	r3, [r7, #12]
 2675 002c 9B08     		lsr	r3, r3, #2
 2676 002e FB60     		str	r3, [r7, #12]
2507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
 2677              		.loc 1 2508 0
 2678 0030 FB68     		ldr	r3, [r7, #12]
 2679 0032 9BB2     		uxth	r3, r3
2509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2680              		.loc 1 2509 0
 2681 0034 181C     		mov	r0, r3
 2682 0036 BD46     		mov	sp, r7
 2683 0038 04B0     		add	sp, sp, #16
 2684              		@ sp needed
 2685 003a 80BD     		pop	{r7, pc}
 2686              		.cfi_endproc
 2687              	.LFE65:
 2688              		.size	CapSense_CSD_IIR4Filter, .-CapSense_CSD_IIR4Filter
 2689              		.section	.text.CapSense_CSD_JitterFilter,"ax",%progbits
 2690              		.align	2
 2691              		.global	CapSense_CSD_JitterFilter
 2692              		.code	16
 2693              		.thumb_func
 2694              		.type	CapSense_CSD_JitterFilter, %function
 2695              	CapSense_CSD_JitterFilter:
 2696              	.LFB66:
2510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) || \
2517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)))  
2518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: uint16 CapSense_CSD_JitterFilter
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 93


2520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Jitter filter function.
2524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_JitterFilter(uint16 x1, uint16 x2)
2540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2697              		.loc 1 2540 0
 2698              		.cfi_startproc
 2699 0000 80B5     		push	{r7, lr}
 2700              		.cfi_def_cfa_offset 8
 2701              		.cfi_offset 7, -8
 2702              		.cfi_offset 14, -4
 2703 0002 82B0     		sub	sp, sp, #8
 2704              		.cfi_def_cfa_offset 16
 2705 0004 00AF     		add	r7, sp, #0
 2706              		.cfi_def_cfa_register 7
 2707 0006 0A1C     		mov	r2, r1
 2708 0008 BB1D     		add	r3, r7, #6
 2709 000a 011C     		add	r1, r0, #0
 2710 000c 1980     		strh	r1, [r3]
 2711 000e 3B1D     		add	r3, r7, #4
 2712 0010 1A80     		strh	r2, [r3]
2541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2713              		.loc 1 2541 0
 2714 0012 BA1D     		add	r2, r7, #6
 2715 0014 3B1D     		add	r3, r7, #4
 2716 0016 1288     		ldrh	r2, [r2]
 2717 0018 1B88     		ldrh	r3, [r3]
 2718 001a 9A42     		cmp	r2, r3
 2719 001c 05D9     		bls	.L161
2542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1--;
 2720              		.loc 1 2543 0
 2721 001e BB1D     		add	r3, r7, #6
 2722 0020 1A88     		ldrh	r2, [r3]
 2723 0022 BB1D     		add	r3, r7, #6
 2724 0024 013A     		sub	r2, r2, #1
 2725 0026 1A80     		strh	r2, [r3]
 2726 0028 0AE0     		b	.L162
 2727              	.L161:
2544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 94


2546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (x1 < x2)
 2728              		.loc 1 2547 0
 2729 002a BA1D     		add	r2, r7, #6
 2730 002c 3B1D     		add	r3, r7, #4
 2731 002e 1288     		ldrh	r2, [r2]
 2732 0030 1B88     		ldrh	r3, [r3]
 2733 0032 9A42     		cmp	r2, r3
 2734 0034 04D2     		bcs	.L162
2548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 x1++;
 2735              		.loc 1 2549 0
 2736 0036 BB1D     		add	r3, r7, #6
 2737 0038 1A88     		ldrh	r2, [r3]
 2738 003a BB1D     		add	r3, r7, #6
 2739 003c 0132     		add	r2, r2, #1
 2740 003e 1A80     		strh	r2, [r3]
 2741              	.L162:
2550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
2553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return x1;
 2742              		.loc 1 2553 0
 2743 0040 BB1D     		add	r3, r7, #6
 2744 0042 1B88     		ldrh	r3, [r3]
2554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2745              		.loc 1 2554 0
 2746 0044 181C     		mov	r0, r3
 2747 0046 BD46     		mov	sp, r7
 2748 0048 02B0     		add	sp, sp, #8
 2749              		@ sp needed
 2750 004a 80BD     		pop	{r7, pc}
 2751              		.cfi_endproc
 2752              	.LFE66:
 2753              		.size	CapSense_CSD_JitterFilter, .-CapSense_CSD_JitterFilter
 2754              		.section	.text.CapSense_CSD_GetWidgetNumber,"ax",%progbits
 2755              		.align	2
 2756              		.global	CapSense_CSD_GetWidgetNumber
 2757              		.code	16
 2758              		.thumb_func
 2759              		.type	CapSense_CSD_GetWidgetNumber, %function
 2760              	CapSense_CSD_GetWidgetNumber:
 2761              	.LFB67:
2555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	   *    (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))
2562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR8Filter
2564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 95


2569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR8Filter(uint16 x1, uint16 x2)
2585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 3u;
2592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
2593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)) */
2596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
2599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR16Filter
2601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None.
2616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR16Filter(uint16 x1, uint16 x2)
2622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 96


2626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 4u;
2629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         
2630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) */
2633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT))
2636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetMatrixButtonPos
2639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  button widget.
2644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number;
2647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           stored:
2649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[0] - column position;
2650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[1] - raw position.
2651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  cases.
2655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_sensorSignal[ ] - used to store a difference between the current value of 
2659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  raw data and a previous value of the baseline.
2660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetMatrixButtonPos(uint32 widget, uint8* pos)
2666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
2668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 retVal = 0u;
2669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 row_sig_max = 0u;
2670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 col_sig_max = 0u;
2671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 row_ind = 0u;
2672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 col_ind = 0u;
2673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(widget) == 1u)
2675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget]; i < (CapSense_CSD_rawDataIndex[widget] + \
2678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget]); i++)
2679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > col_sig_max)
2681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_ind = i;
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 97


2683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_sig_max = CapSense_CSD_sensorSignal[i];
2684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget+1u]; i < (CapSense_CSD_rawDataIndex[widget+1u]
2689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget+1u]); i++)
2690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > row_sig_max)
2692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_ind = i;
2694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_sig_max = CapSense_CSD_sensorSignal[i];
2695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if((col_sig_max >= CapSense_CSD_fingerThreshold[widget]) && \
2699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                (row_sig_max >= CapSense_CSD_fingerThreshold[widget+1u]))
2700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = col_ind - CapSense_CSD_rawDataIndex[widget];
2702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = row_ind - CapSense_CSD_rawDataIndex[widget+1u];
2703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 retVal = 1u;
2704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (retVal);
2707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)) */
2710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetWidgetNumber
2713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be 
2720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor. 
2724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
2727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
2728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_GetWidgetNumber(uint32 sensor)
2733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2762              		.loc 1 2733 0
 2763              		.cfi_startproc
 2764 0000 80B5     		push	{r7, lr}
 2765              		.cfi_def_cfa_offset 8
 2766              		.cfi_offset 7, -8
 2767              		.cfi_offset 14, -4
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 98


 2768 0002 82B0     		sub	sp, sp, #8
 2769              		.cfi_def_cfa_offset 16
 2770 0004 00AF     		add	r7, sp, #0
 2771              		.cfi_def_cfa_register 7
 2772 0006 7860     		str	r0, [r7, #4]
2734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return((uint32)CapSense_CSD_widgetNumber[sensor]);
 2773              		.loc 1 2734 0
 2774 0008 034A     		ldr	r2, .L166
 2775 000a 7B68     		ldr	r3, [r7, #4]
 2776 000c D318     		add	r3, r2, r3
 2777 000e 1B78     		ldrb	r3, [r3]
2735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2778              		.loc 1 2735 0
 2779 0010 181C     		mov	r0, r3
 2780 0012 BD46     		mov	sp, r7
 2781 0014 02B0     		add	sp, sp, #8
 2782              		@ sp needed
 2783 0016 80BD     		pop	{r7, pc}
 2784              	.L167:
 2785              		.align	2
 2786              	.L166:
 2787 0018 00000000 		.word	CapSense_CSD_widgetNumber
 2788              		.cfi_endproc
 2789              	.LFE67:
 2790              		.size	CapSense_CSD_GetWidgetNumber, .-CapSense_CSD_GetWidgetNumber
 2791              		.section	.text.CapSense_CSD_GetLowBaselineReset,"ax",%progbits
 2792              		.align	2
 2793              		.global	CapSense_CSD_GetLowBaselineReset
 2794              		.code	16
 2795              		.thumb_func
 2796              		.type	CapSense_CSD_GetLowBaselineReset, %function
 2797              	CapSense_CSD_GetLowBaselineReset:
 2798              	.LFB68:
2736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetLowBaselineReset
2739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be 
2746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  low baseline reset threshold value a sensor.
2750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_lowBaselineReset[]  - stores low baseline reset values.
2753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
2754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetLowBaselineReset(uint32 sensor)
2759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 99


 2799              		.loc 1 2759 0
 2800              		.cfi_startproc
 2801 0000 80B5     		push	{r7, lr}
 2802              		.cfi_def_cfa_offset 8
 2803              		.cfi_offset 7, -8
 2804              		.cfi_offset 14, -4
 2805 0002 82B0     		sub	sp, sp, #8
 2806              		.cfi_def_cfa_offset 16
 2807 0004 00AF     		add	r7, sp, #0
 2808              		.cfi_def_cfa_register 7
 2809 0006 7860     		str	r0, [r7, #4]
2760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_lowBaselineReset[sensor]);
 2810              		.loc 1 2760 0
 2811 0008 034A     		ldr	r2, .L170
 2812 000a 7B68     		ldr	r3, [r7, #4]
 2813 000c D318     		add	r3, r2, r3
 2814 000e 1B78     		ldrb	r3, [r3]
2761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2815              		.loc 1 2761 0
 2816 0010 181C     		mov	r0, r3
 2817 0012 BD46     		mov	sp, r7
 2818 0014 02B0     		add	sp, sp, #8
 2819              		@ sp needed
 2820 0016 80BD     		pop	{r7, pc}
 2821              	.L171:
 2822              		.align	2
 2823              	.L170:
 2824 0018 00000000 		.word	CapSense_CSD_lowBaselineReset
 2825              		.cfi_endproc
 2826              	.LFE68:
 2827              		.size	CapSense_CSD_GetLowBaselineReset, .-CapSense_CSD_GetLowBaselineReset
 2828              		.section	.text.CapSense_CSD_GetDebounce,"ax",%progbits
 2829              		.align	2
 2830              		.global	CapSense_CSD_GetDebounce
 2831              		.code	16
 2832              		.thumb_func
 2833              		.type	CapSense_CSD_GetDebounce, %function
 2834              	CapSense_CSD_GetDebounce:
 2835              	.LFB69:
2762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDebounce
2765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns a debounce value.
2769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be 
2772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Debounce value 
2776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounce[]  - stores the debounce value.
2779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 100


2780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDebounce(uint32 widget)
2785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2836              		.loc 1 2785 0
 2837              		.cfi_startproc
 2838 0000 80B5     		push	{r7, lr}
 2839              		.cfi_def_cfa_offset 8
 2840              		.cfi_offset 7, -8
 2841              		.cfi_offset 14, -4
 2842 0002 82B0     		sub	sp, sp, #8
 2843              		.cfi_def_cfa_offset 16
 2844 0004 00AF     		add	r7, sp, #0
 2845              		.cfi_def_cfa_register 7
 2846 0006 7860     		str	r0, [r7, #4]
2786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	return(CapSense_CSD_debounce[widget]);
 2847              		.loc 1 2786 0
 2848 0008 034A     		ldr	r2, .L174
 2849 000a 7B68     		ldr	r3, [r7, #4]
 2850 000c D318     		add	r3, r2, r3
 2851 000e 1B78     		ldrb	r3, [r3]
2787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2852              		.loc 1 2787 0
 2853 0010 181C     		mov	r0, r3
 2854 0012 BD46     		mov	sp, r7
 2855 0014 02B0     		add	sp, sp, #8
 2856              		@ sp needed
 2857 0016 80BD     		pop	{r7, pc}
 2858              	.L175:
 2859              		.align	2
 2860              	.L174:
 2861 0018 00000000 		.word	CapSense_CSD_debounce
 2862              		.cfi_endproc
 2863              	.LFE69:
 2864              		.size	CapSense_CSD_GetDebounce, .-CapSense_CSD_GetDebounce
 2865              		.section	.text.CapSense_CSD_EnableRawDataFilters,"ax",%progbits
 2866              		.align	2
 2867              		.global	CapSense_CSD_EnableRawDataFilters
 2868              		.code	16
 2869              		.thumb_func
 2870              		.type	CapSense_CSD_EnableRawDataFilters, %function
 2871              	CapSense_CSD_EnableRawDataFilters:
 2872              	.LFB70:
2788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
2790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
2791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_EnableRawDataFilters
2792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
2793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
2795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters:
2798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 101


2800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return:
2801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
2810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_EnableRawDataFilters(void)
2811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 2873              		.loc 1 2811 0
 2874              		.cfi_startproc
 2875 0000 80B5     		push	{r7, lr}
 2876              		.cfi_def_cfa_offset 8
 2877              		.cfi_offset 7, -8
 2878              		.cfi_offset 14, -4
 2879 0002 00AF     		add	r7, sp, #0
 2880              		.cfi_def_cfa_register 7
2812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
 2881              		.loc 1 2812 0
 2882 0004 024B     		ldr	r3, .L177
 2883 0006 0122     		mov	r2, #1
 2884 0008 1A70     		strb	r2, [r3]
2813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 2885              		.loc 1 2813 0
 2886 000a BD46     		mov	sp, r7
 2887              		@ sp needed
 2888 000c 80BD     		pop	{r7, pc}
 2889              	.L178:
 2890 000e C046     		.align	2
 2891              	.L177:
 2892 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 2893              		.cfi_endproc
 2894              	.LFE70:
 2895              		.size	CapSense_CSD_EnableRawDataFilters, .-CapSense_CSD_EnableRawDataFilters
 2896              		.section	.text.CapSense_CSD_DisableRawDataFilters,"ax",%progbits
 2897              		.align	2
 2898              		.global	CapSense_CSD_DisableRawDataFilters
 2899              		.code	16
 2900              		.thumb_func
 2901              		.type	CapSense_CSD_DisableRawDataFilters, %function
 2902              	CapSense_CSD_DisableRawDataFilters:
 2903              	.LFB71:
2814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	/*******************************************************************************
2816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Function Name: CapSense_CSD_DisableRawDataFilters
2817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	********************************************************************************
2818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Summary:
2820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Parameters:
2823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Return:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 102


2826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Global Variables:
2829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*
2831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* Side Effects:
2832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*  None
2833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	* 
2834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	*******************************************************************************/
2835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	void CapSense_CSD_DisableRawDataFilters(void)
2836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	{
 2904              		.loc 1 2836 0
 2905              		.cfi_startproc
 2906 0000 80B5     		push	{r7, lr}
 2907              		.cfi_def_cfa_offset 8
 2908              		.cfi_offset 7, -8
 2909              		.cfi_offset 14, -4
 2910 0002 00AF     		add	r7, sp, #0
 2911              		.cfi_def_cfa_register 7
2837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 		CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_DISABLED;
 2912              		.loc 1 2837 0
 2913 0004 024B     		ldr	r3, .L180
 2914 0006 0022     		mov	r2, #0
 2915 0008 1A70     		strb	r2, [r3]
2838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 	}
 2916              		.loc 1 2838 0
 2917 000a BD46     		mov	sp, r7
 2918              		@ sp needed
 2919 000c 80BD     		pop	{r7, pc}
 2920              	.L181:
 2921 000e C046     		.align	2
 2922              	.L180:
 2923 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 2924              		.cfi_endproc
 2925              	.LFE71:
 2926              		.size	CapSense_CSD_DisableRawDataFilters, .-CapSense_CSD_DisableRawDataFilters
 2927              		.bss
 2928 0032 0000     		.align	2
 2929              	CapSense_CSD_debounceCounter.5328:
 2930 0034 00       		.space	1
 2931 0035 000000   		.align	2
 2932              	CapSense_CSD_centroid.5380:
 2933 0038 000000   		.space	3
 2934 003b 00       		.text
 2935              	.Letext0:
 2936              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2937              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_CSD_PVT.h"
 2938              		.section	.debug_info,"",%progbits
 2939              	.Ldebug_info0:
 2940 0000 090E0000 		.4byte	0xe09
 2941 0004 0400     		.2byte	0x4
 2942 0006 00000000 		.4byte	.Ldebug_abbrev0
 2943 000a 04       		.byte	0x4
 2944 000b 01       		.uleb128 0x1
 2945 000c C9060000 		.4byte	.LASF137
 2946 0010 01       		.byte	0x1
 2947 0011 0B010000 		.4byte	.LASF138
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 103


 2948 0015 40090000 		.4byte	.LASF139
 2949 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2950 001d 00000000 		.4byte	0
 2951 0021 00000000 		.4byte	.Ldebug_line0
 2952 0025 02       		.uleb128 0x2
 2953 0026 01       		.byte	0x1
 2954 0027 06       		.byte	0x6
 2955 0028 F70A0000 		.4byte	.LASF0
 2956 002c 02       		.uleb128 0x2
 2957 002d 01       		.byte	0x1
 2958 002e 08       		.byte	0x8
 2959 002f 3E0A0000 		.4byte	.LASF1
 2960 0033 02       		.uleb128 0x2
 2961 0034 02       		.byte	0x2
 2962 0035 05       		.byte	0x5
 2963 0036 E4070000 		.4byte	.LASF2
 2964 003a 02       		.uleb128 0x2
 2965 003b 02       		.byte	0x2
 2966 003c 07       		.byte	0x7
 2967 003d 030B0000 		.4byte	.LASF3
 2968 0041 02       		.uleb128 0x2
 2969 0042 04       		.byte	0x4
 2970 0043 05       		.byte	0x5
 2971 0044 EE070000 		.4byte	.LASF4
 2972 0048 02       		.uleb128 0x2
 2973 0049 04       		.byte	0x4
 2974 004a 07       		.byte	0x7
 2975 004b E8080000 		.4byte	.LASF5
 2976 004f 02       		.uleb128 0x2
 2977 0050 08       		.byte	0x8
 2978 0051 05       		.byte	0x5
 2979 0052 21050000 		.4byte	.LASF6
 2980 0056 02       		.uleb128 0x2
 2981 0057 08       		.byte	0x8
 2982 0058 07       		.byte	0x7
 2983 0059 C1020000 		.4byte	.LASF7
 2984 005d 03       		.uleb128 0x3
 2985 005e 04       		.byte	0x4
 2986 005f 05       		.byte	0x5
 2987 0060 696E7400 		.ascii	"int\000"
 2988 0064 02       		.uleb128 0x2
 2989 0065 04       		.byte	0x4
 2990 0066 07       		.byte	0x7
 2991 0067 9B000000 		.4byte	.LASF8
 2992 006b 04       		.uleb128 0x4
 2993 006c 870B0000 		.4byte	.LASF9
 2994 0070 02       		.byte	0x2
 2995 0071 A1       		.byte	0xa1
 2996 0072 2C000000 		.4byte	0x2c
 2997 0076 04       		.uleb128 0x4
 2998 0077 8D040000 		.4byte	.LASF10
 2999 007b 02       		.byte	0x2
 3000 007c A2       		.byte	0xa2
 3001 007d 3A000000 		.4byte	0x3a
 3002 0081 04       		.uleb128 0x4
 3003 0082 25060000 		.4byte	.LASF11
 3004 0086 02       		.byte	0x2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 104


 3005 0087 A3       		.byte	0xa3
 3006 0088 48000000 		.4byte	0x48
 3007 008c 04       		.uleb128 0x4
 3008 008d 05010000 		.4byte	.LASF12
 3009 0091 02       		.byte	0x2
 3010 0092 A5       		.byte	0xa5
 3011 0093 33000000 		.4byte	0x33
 3012 0097 04       		.uleb128 0x4
 3013 0098 4B020000 		.4byte	.LASF13
 3014 009c 02       		.byte	0x2
 3015 009d A6       		.byte	0xa6
 3016 009e 41000000 		.4byte	0x41
 3017 00a2 02       		.uleb128 0x2
 3018 00a3 04       		.byte	0x4
 3019 00a4 04       		.byte	0x4
 3020 00a5 45020000 		.4byte	.LASF14
 3021 00a9 02       		.uleb128 0x2
 3022 00aa 08       		.byte	0x8
 3023 00ab 04       		.byte	0x4
 3024 00ac 8D0B0000 		.4byte	.LASF15
 3025 00b0 02       		.uleb128 0x2
 3026 00b1 01       		.byte	0x1
 3027 00b2 08       		.byte	0x8
 3028 00b3 6D040000 		.4byte	.LASF16
 3029 00b7 02       		.uleb128 0x2
 3030 00b8 04       		.byte	0x4
 3031 00b9 07       		.byte	0x7
 3032 00ba DF080000 		.4byte	.LASF17
 3033 00be 05       		.uleb128 0x5
 3034 00bf 38       		.byte	0x38
 3035 00c0 03       		.byte	0x3
 3036 00c1 2F       		.byte	0x2f
 3037 00c2 6F010000 		.4byte	0x16f
 3038 00c6 06       		.uleb128 0x6
 3039 00c7 99040000 		.4byte	.LASF18
 3040 00cb 03       		.byte	0x3
 3041 00cc 31       		.byte	0x31
 3042 00cd 6F010000 		.4byte	0x16f
 3043 00d1 00       		.byte	0
 3044 00d2 06       		.uleb128 0x6
 3045 00d3 D5070000 		.4byte	.LASF19
 3046 00d7 03       		.byte	0x3
 3047 00d8 32       		.byte	0x32
 3048 00d9 6F010000 		.4byte	0x16f
 3049 00dd 04       		.byte	0x4
 3050 00de 06       		.uleb128 0x6
 3051 00df B60A0000 		.4byte	.LASF20
 3052 00e3 03       		.byte	0x3
 3053 00e4 33       		.byte	0x33
 3054 00e5 6F010000 		.4byte	0x16f
 3055 00e9 08       		.byte	0x8
 3056 00ea 06       		.uleb128 0x6
 3057 00eb 170A0000 		.4byte	.LASF21
 3058 00ef 03       		.byte	0x3
 3059 00f0 34       		.byte	0x34
 3060 00f1 6F010000 		.4byte	0x16f
 3061 00f5 0C       		.byte	0xc
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 105


 3062 00f6 06       		.uleb128 0x6
 3063 00f7 ED0A0000 		.4byte	.LASF22
 3064 00fb 03       		.byte	0x3
 3065 00fc 35       		.byte	0x35
 3066 00fd 6F010000 		.4byte	0x16f
 3067 0101 10       		.byte	0x10
 3068 0102 06       		.uleb128 0x6
 3069 0103 5D080000 		.4byte	.LASF23
 3070 0107 03       		.byte	0x3
 3071 0108 36       		.byte	0x36
 3072 0109 75010000 		.4byte	0x175
 3073 010d 14       		.byte	0x14
 3074 010e 06       		.uleb128 0x6
 3075 010f 57020000 		.4byte	.LASF24
 3076 0113 03       		.byte	0x3
 3077 0114 37       		.byte	0x37
 3078 0115 80010000 		.4byte	0x180
 3079 0119 18       		.byte	0x18
 3080 011a 06       		.uleb128 0x6
 3081 011b 57010000 		.4byte	.LASF25
 3082 011f 03       		.byte	0x3
 3083 0120 38       		.byte	0x38
 3084 0121 75010000 		.4byte	0x175
 3085 0125 1C       		.byte	0x1c
 3086 0126 06       		.uleb128 0x6
 3087 0127 22000000 		.4byte	.LASF26
 3088 012b 03       		.byte	0x3
 3089 012c 39       		.byte	0x39
 3090 012d 75010000 		.4byte	0x175
 3091 0131 20       		.byte	0x20
 3092 0132 06       		.uleb128 0x6
 3093 0133 9C050000 		.4byte	.LASF27
 3094 0137 03       		.byte	0x3
 3095 0138 3A       		.byte	0x3a
 3096 0139 95010000 		.4byte	0x195
 3097 013d 24       		.byte	0x24
 3098 013e 06       		.uleb128 0x6
 3099 013f 70050000 		.4byte	.LASF28
 3100 0143 03       		.byte	0x3
 3101 0144 3B       		.byte	0x3b
 3102 0145 A6010000 		.4byte	0x1a6
 3103 0149 28       		.byte	0x28
 3104 014a 06       		.uleb128 0x6
 3105 014b 94030000 		.4byte	.LASF29
 3106 014f 03       		.byte	0x3
 3107 0150 3C       		.byte	0x3c
 3108 0151 95010000 		.4byte	0x195
 3109 0155 2C       		.byte	0x2c
 3110 0156 06       		.uleb128 0x6
 3111 0157 32000000 		.4byte	.LASF30
 3112 015b 03       		.byte	0x3
 3113 015c 3D       		.byte	0x3d
 3114 015d C0010000 		.4byte	0x1c0
 3115 0161 30       		.byte	0x30
 3116 0162 06       		.uleb128 0x6
 3117 0163 300B0000 		.4byte	.LASF31
 3118 0167 03       		.byte	0x3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 106


 3119 0168 3E       		.byte	0x3e
 3120 0169 DB010000 		.4byte	0x1db
 3121 016d 34       		.byte	0x34
 3122 016e 00       		.byte	0
 3123 016f 07       		.uleb128 0x7
 3124 0170 04       		.byte	0x4
 3125 0171 6B000000 		.4byte	0x6b
 3126 0175 07       		.uleb128 0x7
 3127 0176 04       		.byte	0x4
 3128 0177 7B010000 		.4byte	0x17b
 3129 017b 08       		.uleb128 0x8
 3130 017c 6B000000 		.4byte	0x6b
 3131 0180 07       		.uleb128 0x7
 3132 0181 04       		.byte	0x4
 3133 0182 81000000 		.4byte	0x81
 3134 0186 09       		.uleb128 0x9
 3135 0187 76000000 		.4byte	0x76
 3136 018b 95010000 		.4byte	0x195
 3137 018f 0A       		.uleb128 0xa
 3138 0190 81000000 		.4byte	0x81
 3139 0194 00       		.byte	0
 3140 0195 07       		.uleb128 0x7
 3141 0196 04       		.byte	0x4
 3142 0197 86010000 		.4byte	0x186
 3143 019b 0B       		.uleb128 0xb
 3144 019c A6010000 		.4byte	0x1a6
 3145 01a0 0A       		.uleb128 0xa
 3146 01a1 81000000 		.4byte	0x81
 3147 01a5 00       		.byte	0
 3148 01a6 07       		.uleb128 0x7
 3149 01a7 04       		.byte	0x4
 3150 01a8 9B010000 		.4byte	0x19b
 3151 01ac 09       		.uleb128 0x9
 3152 01ad 81000000 		.4byte	0x81
 3153 01b1 C0010000 		.4byte	0x1c0
 3154 01b5 0A       		.uleb128 0xa
 3155 01b6 75010000 		.4byte	0x175
 3156 01ba 0A       		.uleb128 0xa
 3157 01bb 81000000 		.4byte	0x81
 3158 01bf 00       		.byte	0
 3159 01c0 07       		.uleb128 0x7
 3160 01c1 04       		.byte	0x4
 3161 01c2 AC010000 		.4byte	0x1ac
 3162 01c6 0B       		.uleb128 0xb
 3163 01c7 DB010000 		.4byte	0x1db
 3164 01cb 0A       		.uleb128 0xa
 3165 01cc 6F010000 		.4byte	0x16f
 3166 01d0 0A       		.uleb128 0xa
 3167 01d1 81000000 		.4byte	0x81
 3168 01d5 0A       		.uleb128 0xa
 3169 01d6 81000000 		.4byte	0x81
 3170 01da 00       		.byte	0
 3171 01db 07       		.uleb128 0x7
 3172 01dc 04       		.byte	0x4
 3173 01dd C6010000 		.4byte	0x1c6
 3174 01e1 04       		.uleb128 0x4
 3175 01e2 96020000 		.4byte	.LASF32
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 107


 3176 01e6 03       		.byte	0x3
 3177 01e7 3F       		.byte	0x3f
 3178 01e8 BE000000 		.4byte	0xbe
 3179 01ec 05       		.uleb128 0x5
 3180 01ed 0C       		.byte	0xc
 3181 01ee 03       		.byte	0x3
 3182 01ef 41       		.byte	0x41
 3183 01f0 3D020000 		.4byte	0x23d
 3184 01f4 06       		.uleb128 0x6
 3185 01f5 04040000 		.4byte	.LASF33
 3186 01f9 03       		.byte	0x3
 3187 01fa 43       		.byte	0x43
 3188 01fb 6B000000 		.4byte	0x6b
 3189 01ff 00       		.byte	0
 3190 0200 06       		.uleb128 0x6
 3191 0201 64010000 		.4byte	.LASF34
 3192 0205 03       		.byte	0x3
 3193 0206 44       		.byte	0x44
 3194 0207 6B000000 		.4byte	0x6b
 3195 020b 01       		.byte	0x1
 3196 020c 06       		.uleb128 0x6
 3197 020d A8000000 		.4byte	.LASF35
 3198 0211 03       		.byte	0x3
 3199 0212 45       		.byte	0x45
 3200 0213 6B000000 		.4byte	0x6b
 3201 0217 02       		.byte	0x2
 3202 0218 06       		.uleb128 0x6
 3203 0219 40040000 		.4byte	.LASF36
 3204 021d 03       		.byte	0x3
 3205 021e 46       		.byte	0x46
 3206 021f 76000000 		.4byte	0x76
 3207 0223 04       		.byte	0x4
 3208 0224 06       		.uleb128 0x6
 3209 0225 A9070000 		.4byte	.LASF37
 3210 0229 03       		.byte	0x3
 3211 022a 47       		.byte	0x47
 3212 022b 76000000 		.4byte	0x76
 3213 022f 06       		.byte	0x6
 3214 0230 06       		.uleb128 0x6
 3215 0231 16090000 		.4byte	.LASF38
 3216 0235 03       		.byte	0x3
 3217 0236 48       		.byte	0x48
 3218 0237 3D020000 		.4byte	0x23d
 3219 023b 08       		.byte	0x8
 3220 023c 00       		.byte	0
 3221 023d 07       		.uleb128 0x7
 3222 023e 04       		.byte	0x4
 3223 023f 43020000 		.4byte	0x243
 3224 0243 08       		.uleb128 0x8
 3225 0244 E1010000 		.4byte	0x1e1
 3226 0248 04       		.uleb128 0x4
 3227 0249 00000000 		.4byte	.LASF39
 3228 024d 03       		.byte	0x3
 3229 024e 49       		.byte	0x49
 3230 024f EC010000 		.4byte	0x1ec
 3231 0253 0C       		.uleb128 0xc
 3232 0254 41000000 		.4byte	.LASF40
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 108


 3233 0258 01       		.byte	0x1
 3234 0259 8E       		.byte	0x8e
 3235 025a 00000000 		.4byte	.LFB33
 3236 025e 58000000 		.4byte	.LFE33-.LFB33
 3237 0262 01       		.uleb128 0x1
 3238 0263 9C       		.byte	0x9c
 3239 0264 77020000 		.4byte	0x277
 3240 0268 0D       		.uleb128 0xd
 3241 0269 39040000 		.4byte	.LASF42
 3242 026d 01       		.byte	0x1
 3243 026e 8E       		.byte	0x8e
 3244 026f 81000000 		.4byte	0x81
 3245 0273 02       		.uleb128 0x2
 3246 0274 91       		.byte	0x91
 3247 0275 74       		.sleb128 -12
 3248 0276 00       		.byte	0
 3249 0277 0E       		.uleb128 0xe
 3250 0278 760A0000 		.4byte	.LASF41
 3251 027c 01       		.byte	0x1
 3252 027d D9       		.byte	0xd9
 3253 027e 00000000 		.4byte	.LFB34
 3254 0282 2A000000 		.4byte	.LFE34-.LFB34
 3255 0286 01       		.uleb128 0x1
 3256 0287 9C       		.byte	0x9c
 3257 0288 9B020000 		.4byte	0x29b
 3258 028c 0D       		.uleb128 0xd
 3259 028d 39040000 		.4byte	.LASF42
 3260 0291 01       		.byte	0x1
 3261 0292 D9       		.byte	0xd9
 3262 0293 81000000 		.4byte	0x81
 3263 0297 02       		.uleb128 0x2
 3264 0298 91       		.byte	0x91
 3265 0299 74       		.sleb128 -12
 3266 029a 00       		.byte	0
 3267 029b 0E       		.uleb128 0xe
 3268 029c 5B0B0000 		.4byte	.LASF43
 3269 02a0 01       		.byte	0x1
 3270 02a1 FE       		.byte	0xfe
 3271 02a2 00000000 		.4byte	.LFB35
 3272 02a6 26000000 		.4byte	.LFE35-.LFB35
 3273 02aa 01       		.uleb128 0x1
 3274 02ab 9C       		.byte	0x9c
 3275 02ac BE020000 		.4byte	0x2be
 3276 02b0 0F       		.uleb128 0xf
 3277 02b1 6900     		.ascii	"i\000"
 3278 02b3 01       		.byte	0x1
 3279 02b4 0001     		.2byte	0x100
 3280 02b6 81000000 		.4byte	0x81
 3281 02ba 02       		.uleb128 0x2
 3282 02bb 91       		.byte	0x91
 3283 02bc 74       		.sleb128 -12
 3284 02bd 00       		.byte	0
 3285 02be 10       		.uleb128 0x10
 3286 02bf C0000000 		.4byte	.LASF44
 3287 02c3 01       		.byte	0x1
 3288 02c4 2101     		.2byte	0x121
 3289 02c6 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 109


 3290 02ca 50000000 		.4byte	.LFE36-.LFB36
 3291 02ce 01       		.uleb128 0x1
 3292 02cf 9C       		.byte	0x9c
 3293 02d0 F1020000 		.4byte	0x2f1
 3294 02d4 0F       		.uleb128 0xf
 3295 02d5 6900     		.ascii	"i\000"
 3296 02d7 01       		.byte	0x1
 3297 02d8 2301     		.2byte	0x123
 3298 02da 81000000 		.4byte	0x81
 3299 02de 02       		.uleb128 0x2
 3300 02df 91       		.byte	0x91
 3301 02e0 74       		.sleb128 -12
 3302 02e1 11       		.uleb128 0x11
 3303 02e2 7E000000 		.4byte	.LASF45
 3304 02e6 01       		.byte	0x1
 3305 02e7 2401     		.2byte	0x124
 3306 02e9 81000000 		.4byte	0x81
 3307 02ed 02       		.uleb128 0x2
 3308 02ee 91       		.byte	0x91
 3309 02ef 70       		.sleb128 -16
 3310 02f0 00       		.byte	0
 3311 02f1 10       		.uleb128 0x10
 3312 02f2 9B080000 		.4byte	.LASF46
 3313 02f6 01       		.byte	0x1
 3314 02f7 6201     		.2byte	0x162
 3315 02f9 00000000 		.4byte	.LFB37
 3316 02fd 28020000 		.4byte	.LFE37-.LFB37
 3317 0301 01       		.uleb128 0x1
 3318 0302 9C       		.byte	0x9c
 3319 0303 71030000 		.4byte	0x371
 3320 0307 12       		.uleb128 0x12
 3321 0308 39040000 		.4byte	.LASF42
 3322 030c 01       		.byte	0x1
 3323 030d 6201     		.2byte	0x162
 3324 030f 81000000 		.4byte	0x81
 3325 0313 02       		.uleb128 0x2
 3326 0314 91       		.byte	0x91
 3327 0315 5C       		.sleb128 -36
 3328 0316 11       		.uleb128 0x11
 3329 0317 8F030000 		.4byte	.LASF47
 3330 031b 01       		.byte	0x1
 3331 031c 6401     		.2byte	0x164
 3332 031e 81000000 		.4byte	0x81
 3333 0322 02       		.uleb128 0x2
 3334 0323 91       		.byte	0x91
 3335 0324 60       		.sleb128 -32
 3336 0325 11       		.uleb128 0x11
 3337 0326 83030000 		.4byte	.LASF48
 3338 032a 01       		.byte	0x1
 3339 032b 6501     		.2byte	0x165
 3340 032d 81000000 		.4byte	0x81
 3341 0331 02       		.uleb128 0x2
 3342 0332 91       		.byte	0x91
 3343 0333 6C       		.sleb128 -20
 3344 0334 11       		.uleb128 0x11
 3345 0335 7F0B0000 		.4byte	.LASF49
 3346 0339 01       		.byte	0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 110


 3347 033a 6601     		.2byte	0x166
 3348 033c 76000000 		.4byte	0x76
 3349 0340 02       		.uleb128 0x2
 3350 0341 91       		.byte	0x91
 3351 0342 6A       		.sleb128 -22
 3352 0343 11       		.uleb128 0x11
 3353 0344 C9030000 		.4byte	.LASF50
 3354 0348 01       		.byte	0x1
 3355 0349 6701     		.2byte	0x167
 3356 034b 76000000 		.4byte	0x76
 3357 034f 02       		.uleb128 0x2
 3358 0350 91       		.byte	0x91
 3359 0351 68       		.sleb128 -24
 3360 0352 11       		.uleb128 0x11
 3361 0353 D8020000 		.4byte	.LASF51
 3362 0357 01       		.byte	0x1
 3363 0358 6801     		.2byte	0x168
 3364 035a 6B000000 		.4byte	0x6b
 3365 035e 02       		.uleb128 0x2
 3366 035f 91       		.byte	0x91
 3367 0360 67       		.sleb128 -25
 3368 0361 11       		.uleb128 0x11
 3369 0362 B5090000 		.4byte	.LASF52
 3370 0366 01       		.byte	0x1
 3371 0367 6901     		.2byte	0x169
 3372 0369 6B000000 		.4byte	0x6b
 3373 036d 02       		.uleb128 0x2
 3374 036e 91       		.byte	0x91
 3375 036f 66       		.sleb128 -26
 3376 0370 00       		.byte	0
 3377 0371 10       		.uleb128 0x10
 3378 0372 8B060000 		.4byte	.LASF53
 3379 0376 01       		.byte	0x1
 3380 0377 2102     		.2byte	0x221
 3381 0379 00000000 		.4byte	.LFB38
 3382 037d 1E000000 		.4byte	.LFE38-.LFB38
 3383 0381 01       		.uleb128 0x1
 3384 0382 9C       		.byte	0x9c
 3385 0383 97030000 		.4byte	0x397
 3386 0387 12       		.uleb128 0x12
 3387 0388 39040000 		.4byte	.LASF42
 3388 038c 01       		.byte	0x1
 3389 038d 2102     		.2byte	0x221
 3390 038f 81000000 		.4byte	0x81
 3391 0393 02       		.uleb128 0x2
 3392 0394 91       		.byte	0x91
 3393 0395 74       		.sleb128 -12
 3394 0396 00       		.byte	0
 3395 0397 10       		.uleb128 0x10
 3396 0398 C3050000 		.4byte	.LASF54
 3397 039c 01       		.byte	0x1
 3398 039d 5702     		.2byte	0x257
 3399 039f 00000000 		.4byte	.LFB39
 3400 03a3 40000000 		.4byte	.LFE39-.LFB39
 3401 03a7 01       		.uleb128 0x1
 3402 03a8 9C       		.byte	0x9c
 3403 03a9 CA030000 		.4byte	0x3ca
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 111


 3404 03ad 0F       		.uleb128 0xf
 3405 03ae 6900     		.ascii	"i\000"
 3406 03b0 01       		.byte	0x1
 3407 03b1 5902     		.2byte	0x259
 3408 03b3 81000000 		.4byte	0x81
 3409 03b7 02       		.uleb128 0x2
 3410 03b8 91       		.byte	0x91
 3411 03b9 74       		.sleb128 -12
 3412 03ba 11       		.uleb128 0x11
 3413 03bb 7E000000 		.4byte	.LASF45
 3414 03bf 01       		.byte	0x1
 3415 03c0 5A02     		.2byte	0x25a
 3416 03c2 81000000 		.4byte	0x81
 3417 03c6 02       		.uleb128 0x2
 3418 03c7 91       		.byte	0x91
 3419 03c8 70       		.sleb128 -16
 3420 03c9 00       		.byte	0
 3421 03ca 10       		.uleb128 0x10
 3422 03cb FE020000 		.4byte	.LASF55
 3423 03cf 01       		.byte	0x1
 3424 03d0 8402     		.2byte	0x284
 3425 03d2 00000000 		.4byte	.LFB40
 3426 03d6 58000000 		.4byte	.LFE40-.LFB40
 3427 03da 01       		.uleb128 0x1
 3428 03db 9C       		.byte	0x9c
 3429 03dc 39040000 		.4byte	0x439
 3430 03e0 12       		.uleb128 0x12
 3431 03e1 D8020000 		.4byte	.LASF51
 3432 03e5 01       		.byte	0x1
 3433 03e6 8402     		.2byte	0x284
 3434 03e8 81000000 		.4byte	0x81
 3435 03ec 02       		.uleb128 0x2
 3436 03ed 91       		.byte	0x91
 3437 03ee 5C       		.sleb128 -36
 3438 03ef 11       		.uleb128 0x11
 3439 03f0 D9030000 		.4byte	.LASF56
 3440 03f4 01       		.byte	0x1
 3441 03f5 8602     		.2byte	0x286
 3442 03f7 81000000 		.4byte	0x81
 3443 03fb 02       		.uleb128 0x2
 3444 03fc 91       		.byte	0x91
 3445 03fd 70       		.sleb128 -16
 3446 03fe 11       		.uleb128 0x11
 3447 03ff F7070000 		.4byte	.LASF57
 3448 0403 01       		.byte	0x1
 3449 0404 8702     		.2byte	0x287
 3450 0406 81000000 		.4byte	0x81
 3451 040a 02       		.uleb128 0x2
 3452 040b 91       		.byte	0x91
 3453 040c 6C       		.sleb128 -20
 3454 040d 11       		.uleb128 0x11
 3455 040e 8A070000 		.4byte	.LASF58
 3456 0412 01       		.byte	0x1
 3457 0413 8802     		.2byte	0x288
 3458 0415 81000000 		.4byte	0x81
 3459 0419 02       		.uleb128 0x2
 3460 041a 91       		.byte	0x91
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 112


 3461 041b 68       		.sleb128 -24
 3462 041c 0F       		.uleb128 0xf
 3463 041d 6900     		.ascii	"i\000"
 3464 041f 01       		.byte	0x1
 3465 0420 8902     		.2byte	0x289
 3466 0422 81000000 		.4byte	0x81
 3467 0426 02       		.uleb128 0x2
 3468 0427 91       		.byte	0x91
 3469 0428 74       		.sleb128 -12
 3470 0429 11       		.uleb128 0x11
 3471 042a 7E000000 		.4byte	.LASF45
 3472 042e 01       		.byte	0x1
 3473 042f 8A02     		.2byte	0x28a
 3474 0431 81000000 		.4byte	0x81
 3475 0435 02       		.uleb128 0x2
 3476 0436 91       		.byte	0x91
 3477 0437 64       		.sleb128 -28
 3478 0438 00       		.byte	0
 3479 0439 13       		.uleb128 0x13
 3480 043a C2080000 		.4byte	.LASF61
 3481 043e 01       		.byte	0x1
 3482 043f B502     		.2byte	0x2b5
 3483 0441 76000000 		.4byte	0x76
 3484 0445 00000000 		.4byte	.LFB41
 3485 0449 1C000000 		.4byte	.LFE41-.LFB41
 3486 044d 01       		.uleb128 0x1
 3487 044e 9C       		.byte	0x9c
 3488 044f 63040000 		.4byte	0x463
 3489 0453 12       		.uleb128 0x12
 3490 0454 39040000 		.4byte	.LASF42
 3491 0458 01       		.byte	0x1
 3492 0459 B502     		.2byte	0x2b5
 3493 045b 81000000 		.4byte	0x81
 3494 045f 02       		.uleb128 0x2
 3495 0460 91       		.byte	0x91
 3496 0461 74       		.sleb128 -12
 3497 0462 00       		.byte	0
 3498 0463 14       		.uleb128 0x14
 3499 0464 E8000000 		.4byte	.LASF59
 3500 0468 01       		.byte	0x1
 3501 0469 D002     		.2byte	0x2d0
 3502 046b 00000000 		.4byte	.LFB42
 3503 046f 24000000 		.4byte	.LFE42-.LFB42
 3504 0473 01       		.uleb128 0x1
 3505 0474 9C       		.byte	0x9c
 3506 0475 98040000 		.4byte	0x498
 3507 0479 12       		.uleb128 0x12
 3508 047a 39040000 		.4byte	.LASF42
 3509 047e 01       		.byte	0x1
 3510 047f D002     		.2byte	0x2d0
 3511 0481 81000000 		.4byte	0x81
 3512 0485 02       		.uleb128 0x2
 3513 0486 91       		.byte	0x91
 3514 0487 74       		.sleb128 -12
 3515 0488 12       		.uleb128 0x12
 3516 0489 94040000 		.4byte	.LASF60
 3517 048d 01       		.byte	0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 113


 3518 048e D002     		.2byte	0x2d0
 3519 0490 76000000 		.4byte	0x76
 3520 0494 02       		.uleb128 0x2
 3521 0495 91       		.byte	0x91
 3522 0496 72       		.sleb128 -14
 3523 0497 00       		.byte	0
 3524 0498 13       		.uleb128 0x13
 3525 0499 3F080000 		.4byte	.LASF62
 3526 049d 01       		.byte	0x1
 3527 049e EB02     		.2byte	0x2eb
 3528 04a0 6B000000 		.4byte	0x6b
 3529 04a4 00000000 		.4byte	.LFB43
 3530 04a8 1C000000 		.4byte	.LFE43-.LFB43
 3531 04ac 01       		.uleb128 0x1
 3532 04ad 9C       		.byte	0x9c
 3533 04ae C2040000 		.4byte	0x4c2
 3534 04b2 12       		.uleb128 0x12
 3535 04b3 39040000 		.4byte	.LASF42
 3536 04b7 01       		.byte	0x1
 3537 04b8 EB02     		.2byte	0x2eb
 3538 04ba 81000000 		.4byte	0x81
 3539 04be 02       		.uleb128 0x2
 3540 04bf 91       		.byte	0x91
 3541 04c0 74       		.sleb128 -12
 3542 04c1 00       		.byte	0
 3543 04c2 14       		.uleb128 0x14
 3544 04c3 6D060000 		.4byte	.LASF63
 3545 04c7 01       		.byte	0x1
 3546 04c8 0603     		.2byte	0x306
 3547 04ca 00000000 		.4byte	.LFB44
 3548 04ce 24000000 		.4byte	.LFE44-.LFB44
 3549 04d2 01       		.uleb128 0x1
 3550 04d3 9C       		.byte	0x9c
 3551 04d4 F7040000 		.4byte	0x4f7
 3552 04d8 12       		.uleb128 0x12
 3553 04d9 39040000 		.4byte	.LASF42
 3554 04dd 01       		.byte	0x1
 3555 04de 0603     		.2byte	0x306
 3556 04e0 81000000 		.4byte	0x81
 3557 04e4 02       		.uleb128 0x2
 3558 04e5 91       		.byte	0x91
 3559 04e6 74       		.sleb128 -12
 3560 04e7 12       		.uleb128 0x12
 3561 04e8 20030000 		.4byte	.LASF64
 3562 04ec 01       		.byte	0x1
 3563 04ed 0603     		.2byte	0x306
 3564 04ef 6B000000 		.4byte	0x6b
 3565 04f3 02       		.uleb128 0x2
 3566 04f4 91       		.byte	0x91
 3567 04f5 73       		.sleb128 -13
 3568 04f6 00       		.byte	0
 3569 04f7 13       		.uleb128 0x13
 3570 04f8 2F050000 		.4byte	.LASF65
 3571 04fc 01       		.byte	0x1
 3572 04fd 2103     		.2byte	0x321
 3573 04ff 6B000000 		.4byte	0x6b
 3574 0503 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 114


 3575 0507 1C000000 		.4byte	.LFE45-.LFB45
 3576 050b 01       		.uleb128 0x1
 3577 050c 9C       		.byte	0x9c
 3578 050d 21050000 		.4byte	0x521
 3579 0511 12       		.uleb128 0x12
 3580 0512 D8020000 		.4byte	.LASF51
 3581 0516 01       		.byte	0x1
 3582 0517 2103     		.2byte	0x321
 3583 0519 81000000 		.4byte	0x81
 3584 051d 02       		.uleb128 0x2
 3585 051e 91       		.byte	0x91
 3586 051f 74       		.sleb128 -12
 3587 0520 00       		.byte	0
 3588 0521 13       		.uleb128 0x13
 3589 0522 26020000 		.4byte	.LASF66
 3590 0526 01       		.byte	0x1
 3591 0527 3C03     		.2byte	0x33c
 3592 0529 6B000000 		.4byte	0x6b
 3593 052d 00000000 		.4byte	.LFB46
 3594 0531 1C000000 		.4byte	.LFE46-.LFB46
 3595 0535 01       		.uleb128 0x1
 3596 0536 9C       		.byte	0x9c
 3597 0537 4B050000 		.4byte	0x54b
 3598 053b 12       		.uleb128 0x12
 3599 053c D8020000 		.4byte	.LASF51
 3600 0540 01       		.byte	0x1
 3601 0541 3C03     		.2byte	0x33c
 3602 0543 81000000 		.4byte	0x81
 3603 0547 02       		.uleb128 0x2
 3604 0548 91       		.byte	0x91
 3605 0549 74       		.sleb128 -12
 3606 054a 00       		.byte	0
 3607 054b 13       		.uleb128 0x13
 3608 054c 7B050000 		.4byte	.LASF67
 3609 0550 01       		.byte	0x1
 3610 0551 5803     		.2byte	0x358
 3611 0553 6B000000 		.4byte	0x6b
 3612 0557 00000000 		.4byte	.LFB47
 3613 055b 1C000000 		.4byte	.LFE47-.LFB47
 3614 055f 01       		.uleb128 0x1
 3615 0560 9C       		.byte	0x9c
 3616 0561 75050000 		.4byte	0x575
 3617 0565 12       		.uleb128 0x12
 3618 0566 D8020000 		.4byte	.LASF51
 3619 056a 01       		.byte	0x1
 3620 056b 5803     		.2byte	0x358
 3621 056d 81000000 		.4byte	0x81
 3622 0571 02       		.uleb128 0x2
 3623 0572 91       		.byte	0x91
 3624 0573 74       		.sleb128 -12
 3625 0574 00       		.byte	0
 3626 0575 13       		.uleb128 0x13
 3627 0576 A8040000 		.4byte	.LASF68
 3628 057a 01       		.byte	0x1
 3629 057b 7403     		.2byte	0x374
 3630 057d 6B000000 		.4byte	0x6b
 3631 0581 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 115


 3632 0585 1C000000 		.4byte	.LFE48-.LFB48
 3633 0589 01       		.uleb128 0x1
 3634 058a 9C       		.byte	0x9c
 3635 058b 9F050000 		.4byte	0x59f
 3636 058f 12       		.uleb128 0x12
 3637 0590 D8020000 		.4byte	.LASF51
 3638 0594 01       		.byte	0x1
 3639 0595 7403     		.2byte	0x374
 3640 0597 81000000 		.4byte	0x81
 3641 059b 02       		.uleb128 0x2
 3642 059c 91       		.byte	0x91
 3643 059d 74       		.sleb128 -12
 3644 059e 00       		.byte	0
 3645 059f 14       		.uleb128 0x14
 3646 05a0 95010000 		.4byte	.LASF69
 3647 05a4 01       		.byte	0x1
 3648 05a5 9503     		.2byte	0x395
 3649 05a7 00000000 		.4byte	.LFB49
 3650 05ab 24000000 		.4byte	.LFE49-.LFB49
 3651 05af 01       		.uleb128 0x1
 3652 05b0 9C       		.byte	0x9c
 3653 05b1 D4050000 		.4byte	0x5d4
 3654 05b5 12       		.uleb128 0x12
 3655 05b6 D8020000 		.4byte	.LASF51
 3656 05ba 01       		.byte	0x1
 3657 05bb 9503     		.2byte	0x395
 3658 05bd 81000000 		.4byte	0x81
 3659 05c1 02       		.uleb128 0x2
 3660 05c2 91       		.byte	0x91
 3661 05c3 74       		.sleb128 -12
 3662 05c4 12       		.uleb128 0x12
 3663 05c5 20030000 		.4byte	.LASF64
 3664 05c9 01       		.byte	0x1
 3665 05ca 9503     		.2byte	0x395
 3666 05cc 6B000000 		.4byte	0x6b
 3667 05d0 02       		.uleb128 0x2
 3668 05d1 91       		.byte	0x91
 3669 05d2 73       		.sleb128 -13
 3670 05d3 00       		.byte	0
 3671 05d4 14       		.uleb128 0x14
 3672 05d5 DF020000 		.4byte	.LASF70
 3673 05d9 01       		.byte	0x1
 3674 05da B103     		.2byte	0x3b1
 3675 05dc 00000000 		.4byte	.LFB50
 3676 05e0 24000000 		.4byte	.LFE50-.LFB50
 3677 05e4 01       		.uleb128 0x1
 3678 05e5 9C       		.byte	0x9c
 3679 05e6 09060000 		.4byte	0x609
 3680 05ea 12       		.uleb128 0x12
 3681 05eb D8020000 		.4byte	.LASF51
 3682 05ef 01       		.byte	0x1
 3683 05f0 B103     		.2byte	0x3b1
 3684 05f2 81000000 		.4byte	0x81
 3685 05f6 02       		.uleb128 0x2
 3686 05f7 91       		.byte	0x91
 3687 05f8 74       		.sleb128 -12
 3688 05f9 12       		.uleb128 0x12
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 116


 3689 05fa 20030000 		.4byte	.LASF64
 3690 05fe 01       		.byte	0x1
 3691 05ff B103     		.2byte	0x3b1
 3692 0601 6B000000 		.4byte	0x6b
 3693 0605 02       		.uleb128 0x2
 3694 0606 91       		.byte	0x91
 3695 0607 73       		.sleb128 -13
 3696 0608 00       		.byte	0
 3697 0609 14       		.uleb128 0x14
 3698 060a E6090000 		.4byte	.LASF71
 3699 060e 01       		.byte	0x1
 3700 060f CD03     		.2byte	0x3cd
 3701 0611 00000000 		.4byte	.LFB51
 3702 0615 24000000 		.4byte	.LFE51-.LFB51
 3703 0619 01       		.uleb128 0x1
 3704 061a 9C       		.byte	0x9c
 3705 061b 3E060000 		.4byte	0x63e
 3706 061f 12       		.uleb128 0x12
 3707 0620 D8020000 		.4byte	.LASF51
 3708 0624 01       		.byte	0x1
 3709 0625 CD03     		.2byte	0x3cd
 3710 0627 81000000 		.4byte	0x81
 3711 062b 02       		.uleb128 0x2
 3712 062c 91       		.byte	0x91
 3713 062d 74       		.sleb128 -12
 3714 062e 12       		.uleb128 0x12
 3715 062f 20030000 		.4byte	.LASF64
 3716 0633 01       		.byte	0x1
 3717 0634 CD03     		.2byte	0x3cd
 3718 0636 6B000000 		.4byte	0x6b
 3719 063a 02       		.uleb128 0x2
 3720 063b 91       		.byte	0x91
 3721 063c 73       		.sleb128 -13
 3722 063d 00       		.byte	0
 3723 063e 14       		.uleb128 0x14
 3724 063f 26030000 		.4byte	.LASF72
 3725 0643 01       		.byte	0x1
 3726 0644 EA03     		.2byte	0x3ea
 3727 0646 00000000 		.4byte	.LFB52
 3728 064a 24000000 		.4byte	.LFE52-.LFB52
 3729 064e 01       		.uleb128 0x1
 3730 064f 9C       		.byte	0x9c
 3731 0650 73060000 		.4byte	0x673
 3732 0654 12       		.uleb128 0x12
 3733 0655 D8020000 		.4byte	.LASF51
 3734 0659 01       		.byte	0x1
 3735 065a EA03     		.2byte	0x3ea
 3736 065c 81000000 		.4byte	0x81
 3737 0660 02       		.uleb128 0x2
 3738 0661 91       		.byte	0x91
 3739 0662 74       		.sleb128 -12
 3740 0663 12       		.uleb128 0x12
 3741 0664 20030000 		.4byte	.LASF64
 3742 0668 01       		.byte	0x1
 3743 0669 EA03     		.2byte	0x3ea
 3744 066b 6B000000 		.4byte	0x6b
 3745 066f 02       		.uleb128 0x2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 117


 3746 0670 91       		.byte	0x91
 3747 0671 73       		.sleb128 -13
 3748 0672 00       		.byte	0
 3749 0673 14       		.uleb128 0x14
 3750 0674 B0030000 		.4byte	.LASF73
 3751 0678 01       		.byte	0x1
 3752 0679 0604     		.2byte	0x406
 3753 067b 00000000 		.4byte	.LFB53
 3754 067f 24000000 		.4byte	.LFE53-.LFB53
 3755 0683 01       		.uleb128 0x1
 3756 0684 9C       		.byte	0x9c
 3757 0685 A8060000 		.4byte	0x6a8
 3758 0689 12       		.uleb128 0x12
 3759 068a D8020000 		.4byte	.LASF51
 3760 068e 01       		.byte	0x1
 3761 068f 0604     		.2byte	0x406
 3762 0691 81000000 		.4byte	0x81
 3763 0695 02       		.uleb128 0x2
 3764 0696 91       		.byte	0x91
 3765 0697 74       		.sleb128 -12
 3766 0698 12       		.uleb128 0x12
 3767 0699 20030000 		.4byte	.LASF64
 3768 069d 01       		.byte	0x1
 3769 069e 0604     		.2byte	0x406
 3770 06a0 6B000000 		.4byte	0x6b
 3771 06a4 02       		.uleb128 0x2
 3772 06a5 91       		.byte	0x91
 3773 06a6 73       		.sleb128 -13
 3774 06a7 00       		.byte	0
 3775 06a8 14       		.uleb128 0x14
 3776 06a9 45070000 		.4byte	.LASF74
 3777 06ad 01       		.byte	0x1
 3778 06ae 2204     		.2byte	0x422
 3779 06b0 00000000 		.4byte	.LFB54
 3780 06b4 24000000 		.4byte	.LFE54-.LFB54
 3781 06b8 01       		.uleb128 0x1
 3782 06b9 9C       		.byte	0x9c
 3783 06ba DD060000 		.4byte	0x6dd
 3784 06be 12       		.uleb128 0x12
 3785 06bf 39040000 		.4byte	.LASF42
 3786 06c3 01       		.byte	0x1
 3787 06c4 2204     		.2byte	0x422
 3788 06c6 81000000 		.4byte	0x81
 3789 06ca 02       		.uleb128 0x2
 3790 06cb 91       		.byte	0x91
 3791 06cc 74       		.sleb128 -12
 3792 06cd 12       		.uleb128 0x12
 3793 06ce 20030000 		.4byte	.LASF64
 3794 06d2 01       		.byte	0x1
 3795 06d3 2204     		.2byte	0x422
 3796 06d5 6B000000 		.4byte	0x6b
 3797 06d9 02       		.uleb128 0x2
 3798 06da 91       		.byte	0x91
 3799 06db 73       		.sleb128 -13
 3800 06dc 00       		.byte	0
 3801 06dd 15       		.uleb128 0x15
 3802 06de 7A080000 		.4byte	.LASF75
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 118


 3803 06e2 01       		.byte	0x1
 3804 06e3 5004     		.2byte	0x450
 3805 06e5 81000000 		.4byte	0x81
 3806 06e9 00000000 		.4byte	.LFB55
 3807 06ed 40010000 		.4byte	.LFE55-.LFB55
 3808 06f1 01       		.uleb128 0x1
 3809 06f2 9C       		.byte	0x9c
 3810 06f3 64070000 		.4byte	0x764
 3811 06f7 12       		.uleb128 0x12
 3812 06f8 39040000 		.4byte	.LASF42
 3813 06fc 01       		.byte	0x1
 3814 06fd 5004     		.2byte	0x450
 3815 06ff 81000000 		.4byte	0x81
 3816 0703 02       		.uleb128 0x2
 3817 0704 91       		.byte	0x91
 3818 0705 6C       		.sleb128 -20
 3819 0706 11       		.uleb128 0x11
 3820 0707 D8020000 		.4byte	.LASF51
 3821 070b 01       		.byte	0x1
 3822 070c 5204     		.2byte	0x452
 3823 070e 6B000000 		.4byte	0x6b
 3824 0712 02       		.uleb128 0x2
 3825 0713 91       		.byte	0x91
 3826 0714 77       		.sleb128 -9
 3827 0715 11       		.uleb128 0x11
 3828 0716 4F050000 		.4byte	.LASF76
 3829 071a 01       		.byte	0x1
 3830 071b 5304     		.2byte	0x453
 3831 071d 6B000000 		.4byte	0x6b
 3832 0721 02       		.uleb128 0x2
 3833 0722 91       		.byte	0x91
 3834 0723 74       		.sleb128 -12
 3835 0724 11       		.uleb128 0x11
 3836 0725 4C0A0000 		.4byte	.LASF77
 3837 0729 01       		.byte	0x1
 3838 072a 5404     		.2byte	0x454
 3839 072c 6B000000 		.4byte	0x6b
 3840 0730 02       		.uleb128 0x2
 3841 0731 91       		.byte	0x91
 3842 0732 73       		.sleb128 -13
 3843 0733 11       		.uleb128 0x11
 3844 0734 070A0000 		.4byte	.LASF78
 3845 0738 01       		.byte	0x1
 3846 0739 5604     		.2byte	0x456
 3847 073b 6B000000 		.4byte	0x6b
 3848 073f 02       		.uleb128 0x2
 3849 0740 91       		.byte	0x91
 3850 0741 76       		.sleb128 -10
 3851 0742 11       		.uleb128 0x11
 3852 0743 A5030000 		.4byte	.LASF79
 3853 0747 01       		.byte	0x1
 3854 0748 5704     		.2byte	0x457
 3855 074a 6B000000 		.4byte	0x6b
 3856 074e 02       		.uleb128 0x2
 3857 074f 91       		.byte	0x91
 3858 0750 75       		.sleb128 -11
 3859 0751 11       		.uleb128 0x11
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 119


 3860 0752 09020000 		.4byte	.LASF80
 3861 0756 01       		.byte	0x1
 3862 0757 5804     		.2byte	0x458
 3863 0759 64070000 		.4byte	0x764
 3864 075d 05       		.uleb128 0x5
 3865 075e 03       		.byte	0x3
 3866 075f 34000000 		.4byte	CapSense_CSD_debounceCounter.5328
 3867 0763 00       		.byte	0
 3868 0764 16       		.uleb128 0x16
 3869 0765 6B000000 		.4byte	0x6b
 3870 0769 74070000 		.4byte	0x774
 3871 076d 17       		.uleb128 0x17
 3872 076e B7000000 		.4byte	0xb7
 3873 0772 00       		.byte	0
 3874 0773 00       		.byte	0
 3875 0774 15       		.uleb128 0x15
 3876 0775 74010000 		.4byte	.LASF81
 3877 0779 01       		.byte	0x1
 3878 077a A704     		.2byte	0x4a7
 3879 077c 81000000 		.4byte	0x81
 3880 0780 00000000 		.4byte	.LFB56
 3881 0784 44000000 		.4byte	.LFE56-.LFB56
 3882 0788 01       		.uleb128 0x1
 3883 0789 9C       		.byte	0x9c
 3884 078a CB070000 		.4byte	0x7cb
 3885 078e 12       		.uleb128 0x12
 3886 078f D8020000 		.4byte	.LASF51
 3887 0793 01       		.byte	0x1
 3888 0794 A704     		.2byte	0x4a7
 3889 0796 81000000 		.4byte	0x81
 3890 079a 02       		.uleb128 0x2
 3891 079b 91       		.byte	0x91
 3892 079c 64       		.sleb128 -28
 3893 079d 11       		.uleb128 0x11
 3894 079e DA040000 		.4byte	.LASF82
 3895 07a2 01       		.byte	0x1
 3896 07a3 A904     		.2byte	0x4a9
 3897 07a5 81000000 		.4byte	0x81
 3898 07a9 02       		.uleb128 0x2
 3899 07aa 91       		.byte	0x91
 3900 07ab 74       		.sleb128 -12
 3901 07ac 11       		.uleb128 0x11
 3902 07ad 8E000000 		.4byte	.LASF83
 3903 07b1 01       		.byte	0x1
 3904 07b2 AA04     		.2byte	0x4aa
 3905 07b4 81000000 		.4byte	0x81
 3906 07b8 02       		.uleb128 0x2
 3907 07b9 91       		.byte	0x91
 3908 07ba 6C       		.sleb128 -20
 3909 07bb 11       		.uleb128 0x11
 3910 07bc C50A0000 		.4byte	.LASF84
 3911 07c0 01       		.byte	0x1
 3912 07c1 AB04     		.2byte	0x4ab
 3913 07c3 81000000 		.4byte	0x81
 3914 07c7 02       		.uleb128 0x2
 3915 07c8 91       		.byte	0x91
 3916 07c9 70       		.sleb128 -16
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 120


 3917 07ca 00       		.byte	0
 3918 07cb 15       		.uleb128 0x15
 3919 07cc 01060000 		.4byte	.LASF85
 3920 07d0 01       		.byte	0x1
 3921 07d1 D504     		.2byte	0x4d5
 3922 07d3 81000000 		.4byte	0x81
 3923 07d7 00000000 		.4byte	.LFB57
 3924 07db 38000000 		.4byte	.LFE57-.LFB57
 3925 07df 01       		.uleb128 0x1
 3926 07e0 9C       		.byte	0x9c
 3927 07e1 02080000 		.4byte	0x802
 3928 07e5 0F       		.uleb128 0xf
 3929 07e6 6900     		.ascii	"i\000"
 3930 07e8 01       		.byte	0x1
 3931 07e9 D804     		.2byte	0x4d8
 3932 07eb 81000000 		.4byte	0x81
 3933 07ef 02       		.uleb128 0x2
 3934 07f0 91       		.byte	0x91
 3935 07f1 74       		.sleb128 -12
 3936 07f2 11       		.uleb128 0x11
 3937 07f3 C50A0000 		.4byte	.LASF84
 3938 07f7 01       		.byte	0x1
 3939 07f8 D904     		.2byte	0x4d9
 3940 07fa 81000000 		.4byte	0x81
 3941 07fe 02       		.uleb128 0x2
 3942 07ff 91       		.byte	0x91
 3943 0800 70       		.sleb128 -16
 3944 0801 00       		.byte	0
 3945 0802 10       		.uleb128 0x10
 3946 0803 9C0A0000 		.4byte	.LASF86
 3947 0807 01       		.byte	0x1
 3948 0808 0405     		.2byte	0x504
 3949 080a 00000000 		.4byte	.LFB58
 3950 080e 5C000000 		.4byte	.LFE58-.LFB58
 3951 0812 01       		.uleb128 0x1
 3952 0813 9C       		.byte	0x9c
 3953 0814 46080000 		.4byte	0x846
 3954 0818 12       		.uleb128 0x12
 3955 0819 D8020000 		.4byte	.LASF51
 3956 081d 01       		.byte	0x1
 3957 081e 0405     		.2byte	0x504
 3958 0820 81000000 		.4byte	0x81
 3959 0824 02       		.uleb128 0x2
 3960 0825 91       		.byte	0x91
 3961 0826 6C       		.sleb128 -20
 3962 0827 11       		.uleb128 0x11
 3963 0828 DA040000 		.4byte	.LASF82
 3964 082c 01       		.byte	0x1
 3965 082d 0705     		.2byte	0x507
 3966 082f 6B000000 		.4byte	0x6b
 3967 0833 02       		.uleb128 0x2
 3968 0834 91       		.byte	0x91
 3969 0835 77       		.sleb128 -9
 3970 0836 11       		.uleb128 0x11
 3971 0837 8E000000 		.4byte	.LASF83
 3972 083b 01       		.byte	0x1
 3973 083c 0805     		.2byte	0x508
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 121


 3974 083e 6B000000 		.4byte	0x6b
 3975 0842 02       		.uleb128 0x2
 3976 0843 91       		.byte	0x91
 3977 0844 76       		.sleb128 -10
 3978 0845 00       		.byte	0
 3979 0846 10       		.uleb128 0x10
 3980 0847 72040000 		.4byte	.LASF87
 3981 084b 01       		.byte	0x1
 3982 084c 2F05     		.2byte	0x52f
 3983 084e 00000000 		.4byte	.LFB59
 3984 0852 5C000000 		.4byte	.LFE59-.LFB59
 3985 0856 01       		.uleb128 0x1
 3986 0857 9C       		.byte	0x9c
 3987 0858 8A080000 		.4byte	0x88a
 3988 085c 12       		.uleb128 0x12
 3989 085d D8020000 		.4byte	.LASF51
 3990 0861 01       		.byte	0x1
 3991 0862 2F05     		.2byte	0x52f
 3992 0864 81000000 		.4byte	0x81
 3993 0868 02       		.uleb128 0x2
 3994 0869 91       		.byte	0x91
 3995 086a 6C       		.sleb128 -20
 3996 086b 11       		.uleb128 0x11
 3997 086c DA040000 		.4byte	.LASF82
 3998 0870 01       		.byte	0x1
 3999 0871 3105     		.2byte	0x531
 4000 0873 6B000000 		.4byte	0x6b
 4001 0877 02       		.uleb128 0x2
 4002 0878 91       		.byte	0x91
 4003 0879 77       		.sleb128 -9
 4004 087a 11       		.uleb128 0x11
 4005 087b 8E000000 		.4byte	.LASF83
 4006 087f 01       		.byte	0x1
 4007 0880 3205     		.2byte	0x532
 4008 0882 6B000000 		.4byte	0x6b
 4009 0886 02       		.uleb128 0x2
 4010 0887 91       		.byte	0x91
 4011 0888 76       		.sleb128 -10
 4012 0889 00       		.byte	0
 4013 088a 13       		.uleb128 0x13
 4014 088b 940B0000 		.4byte	.LASF88
 4015 088f 01       		.byte	0x1
 4016 0890 6105     		.2byte	0x561
 4017 0892 6B000000 		.4byte	0x6b
 4018 0896 00000000 		.4byte	.LFB60
 4019 089a AC000000 		.4byte	.LFE60-.LFB60
 4020 089e 01       		.uleb128 0x1
 4021 089f 9C       		.byte	0x9c
 4022 08a0 0C090000 		.4byte	0x90c
 4023 08a4 12       		.uleb128 0x12
 4024 08a5 88030000 		.4byte	.LASF89
 4025 08a9 01       		.byte	0x1
 4026 08aa 6105     		.2byte	0x561
 4027 08ac 6B000000 		.4byte	0x6b
 4028 08b0 02       		.uleb128 0x2
 4029 08b1 91       		.byte	0x91
 4030 08b2 6F       		.sleb128 -17
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 122


 4031 08b3 12       		.uleb128 0x12
 4032 08b4 51020000 		.4byte	.LASF90
 4033 08b8 01       		.byte	0x1
 4034 08b9 6105     		.2byte	0x561
 4035 08bb 6B000000 		.4byte	0x6b
 4036 08bf 02       		.uleb128 0x2
 4037 08c0 91       		.byte	0x91
 4038 08c1 6E       		.sleb128 -18
 4039 08c2 12       		.uleb128 0x12
 4040 08c3 070A0000 		.4byte	.LASF78
 4041 08c7 01       		.byte	0x1
 4042 08c8 6105     		.2byte	0x561
 4043 08ca 6B000000 		.4byte	0x6b
 4044 08ce 02       		.uleb128 0x2
 4045 08cf 91       		.byte	0x91
 4046 08d0 6D       		.sleb128 -19
 4047 08d1 0F       		.uleb128 0xf
 4048 08d2 6900     		.ascii	"i\000"
 4049 08d4 01       		.byte	0x1
 4050 08d5 6405     		.2byte	0x564
 4051 08d7 6B000000 		.4byte	0x6b
 4052 08db 02       		.uleb128 0x2
 4053 08dc 91       		.byte	0x91
 4054 08dd 77       		.sleb128 -9
 4055 08de 11       		.uleb128 0x11
 4056 08df E3040000 		.4byte	.LASF91
 4057 08e3 01       		.byte	0x1
 4058 08e4 6E05     		.2byte	0x56e
 4059 08e6 6B000000 		.4byte	0x6b
 4060 08ea 02       		.uleb128 0x2
 4061 08eb 91       		.byte	0x91
 4062 08ec 76       		.sleb128 -10
 4063 08ed 11       		.uleb128 0x11
 4064 08ee 22080000 		.4byte	.LASF92
 4065 08f2 01       		.byte	0x1
 4066 08f3 7005     		.2byte	0x570
 4067 08f5 6B000000 		.4byte	0x6b
 4068 08f9 02       		.uleb128 0x2
 4069 08fa 91       		.byte	0x91
 4070 08fb 75       		.sleb128 -11
 4071 08fc 11       		.uleb128 0x11
 4072 08fd 5F060000 		.4byte	.LASF93
 4073 0901 01       		.byte	0x1
 4074 0902 7105     		.2byte	0x571
 4075 0904 6F010000 		.4byte	0x16f
 4076 0908 02       		.uleb128 0x2
 4077 0909 91       		.byte	0x91
 4078 090a 70       		.sleb128 -16
 4079 090b 00       		.byte	0
 4080 090c 15       		.uleb128 0x15
 4081 090d CC0B0000 		.4byte	.LASF94
 4082 0911 01       		.byte	0x1
 4083 0912 0006     		.2byte	0x600
 4084 0914 6B000000 		.4byte	0x6b
 4085 0918 00000000 		.4byte	.LFB61
 4086 091c 94010000 		.4byte	.LFE61-.LFB61
 4087 0920 01       		.uleb128 0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 123


 4088 0921 9C       		.byte	0x9c
 4089 0922 DE090000 		.4byte	0x9de
 4090 0926 12       		.uleb128 0x12
 4091 0927 E3040000 		.4byte	.LASF91
 4092 092b 01       		.byte	0x1
 4093 092c 0006     		.2byte	0x600
 4094 092e 6B000000 		.4byte	0x6b
 4095 0932 02       		.uleb128 0x2
 4096 0933 91       		.byte	0x91
 4097 0934 57       		.sleb128 -41
 4098 0935 12       		.uleb128 0x12
 4099 0936 88030000 		.4byte	.LASF89
 4100 093a 01       		.byte	0x1
 4101 093b 0006     		.2byte	0x600
 4102 093d 6B000000 		.4byte	0x6b
 4103 0941 02       		.uleb128 0x2
 4104 0942 91       		.byte	0x91
 4105 0943 56       		.sleb128 -42
 4106 0944 12       		.uleb128 0x12
 4107 0945 51020000 		.4byte	.LASF90
 4108 0949 01       		.byte	0x1
 4109 094a 0106     		.2byte	0x601
 4110 094c 6B000000 		.4byte	0x6b
 4111 0950 02       		.uleb128 0x2
 4112 0951 91       		.byte	0x91
 4113 0952 55       		.sleb128 -43
 4114 0953 12       		.uleb128 0x12
 4115 0954 CF040000 		.4byte	.LASF95
 4116 0958 01       		.byte	0x1
 4117 0959 0106     		.2byte	0x601
 4118 095b 76000000 		.4byte	0x76
 4119 095f 02       		.uleb128 0x2
 4120 0960 91       		.byte	0x91
 4121 0961 52       		.sleb128 -46
 4122 0962 12       		.uleb128 0x12
 4123 0963 B5090000 		.4byte	.LASF52
 4124 0967 01       		.byte	0x1
 4125 0968 0106     		.2byte	0x601
 4126 096a 6B000000 		.4byte	0x6b
 4127 096e 02       		.uleb128 0x2
 4128 096f 91       		.byte	0x91
 4129 0970 00       		.sleb128 0
 4130 0971 11       		.uleb128 0x11
 4131 0972 38010000 		.4byte	.LASF96
 4132 0976 01       		.byte	0x1
 4133 0977 0506     		.2byte	0x605
 4134 0979 6B000000 		.4byte	0x6b
 4135 097d 02       		.uleb128 0x2
 4136 097e 91       		.byte	0x91
 4137 097f 6F       		.sleb128 -17
 4138 0980 11       		.uleb128 0x11
 4139 0981 B8000000 		.4byte	.LASF97
 4140 0985 01       		.byte	0x1
 4141 0986 0606     		.2byte	0x606
 4142 0988 6B000000 		.4byte	0x6b
 4143 098c 02       		.uleb128 0x2
 4144 098d 91       		.byte	0x91
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 124


 4145 098e 67       		.sleb128 -25
 4146 098f 11       		.uleb128 0x11
 4147 0990 AD0B0000 		.4byte	.LASF98
 4148 0994 01       		.byte	0x1
 4149 0995 0B06     		.2byte	0x60b
 4150 0997 DE090000 		.4byte	0x9de
 4151 099b 05       		.uleb128 0x5
 4152 099c 03       		.byte	0x3
 4153 099d 38000000 		.4byte	CapSense_CSD_centroid.5380
 4154 09a1 11       		.uleb128 0x11
 4155 09a2 C30B0000 		.4byte	.LASF99
 4156 09a6 01       		.byte	0x1
 4157 09a7 1206     		.2byte	0x612
 4158 09a9 6B000000 		.4byte	0x6b
 4159 09ad 02       		.uleb128 0x2
 4160 09ae 91       		.byte	0x91
 4161 09af 5B       		.sleb128 -37
 4162 09b0 11       		.uleb128 0x11
 4163 09b1 80070000 		.4byte	.LASF100
 4164 09b5 01       		.byte	0x1
 4165 09b6 1306     		.2byte	0x613
 4166 09b8 81000000 		.4byte	0x81
 4167 09bc 02       		.uleb128 0x2
 4168 09bd 91       		.byte	0x91
 4169 09be 60       		.sleb128 -32
 4170 09bf 11       		.uleb128 0x11
 4171 09c0 6E080000 		.4byte	.LASF101
 4172 09c4 01       		.byte	0x1
 4173 09c5 1406     		.2byte	0x614
 4174 09c7 97000000 		.4byte	0x97
 4175 09cb 02       		.uleb128 0x2
 4176 09cc 91       		.byte	0x91
 4177 09cd 5C       		.sleb128 -36
 4178 09ce 11       		.uleb128 0x11
 4179 09cf 5F060000 		.4byte	.LASF93
 4180 09d3 01       		.byte	0x1
 4181 09d4 1606     		.2byte	0x616
 4182 09d6 6F010000 		.4byte	0x16f
 4183 09da 02       		.uleb128 0x2
 4184 09db 91       		.byte	0x91
 4185 09dc 68       		.sleb128 -24
 4186 09dd 00       		.byte	0
 4187 09de 16       		.uleb128 0x16
 4188 09df 6B000000 		.4byte	0x6b
 4189 09e3 EE090000 		.4byte	0x9ee
 4190 09e7 17       		.uleb128 0x17
 4191 09e8 B7000000 		.4byte	0xb7
 4192 09ec 02       		.byte	0x2
 4193 09ed 00       		.byte	0
 4194 09ee 15       		.uleb128 0x15
 4195 09ef 5A0A0000 		.4byte	.LASF102
 4196 09f3 01       		.byte	0x1
 4197 09f4 D306     		.2byte	0x6d3
 4198 09f6 76000000 		.4byte	0x76
 4199 09fa 00000000 		.4byte	.LFB62
 4200 09fe 5C010000 		.4byte	.LFE62-.LFB62
 4201 0a02 01       		.uleb128 0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 125


 4202 0a03 9C       		.byte	0x9c
 4203 0a04 810A0000 		.4byte	0xa81
 4204 0a08 12       		.uleb128 0x12
 4205 0a09 D8020000 		.4byte	.LASF51
 4206 0a0d 01       		.byte	0x1
 4207 0a0e D306     		.2byte	0x6d3
 4208 0a10 81000000 		.4byte	0x81
 4209 0a14 02       		.uleb128 0x2
 4210 0a15 91       		.byte	0x91
 4211 0a16 64       		.sleb128 -28
 4212 0a17 11       		.uleb128 0x11
 4213 0a18 75000000 		.4byte	.LASF103
 4214 0a1c 01       		.byte	0x1
 4215 0a1d DA06     		.2byte	0x6da
 4216 0a1f 6B000000 		.4byte	0x6b
 4217 0a23 02       		.uleb128 0x2
 4218 0a24 91       		.byte	0x91
 4219 0a25 68       		.sleb128 -24
 4220 0a26 11       		.uleb128 0x11
 4221 0a27 50060000 		.4byte	.LASF104
 4222 0a2b 01       		.byte	0x1
 4223 0a2c DB06     		.2byte	0x6db
 4224 0a2e 6B000000 		.4byte	0x6b
 4225 0a32 02       		.uleb128 0x2
 4226 0a33 91       		.byte	0x91
 4227 0a34 6D       		.sleb128 -19
 4228 0a35 11       		.uleb128 0x11
 4229 0a36 66020000 		.4byte	.LASF105
 4230 0a3a 01       		.byte	0x1
 4231 0a3b DC06     		.2byte	0x6dc
 4232 0a3d 6B000000 		.4byte	0x6b
 4233 0a41 02       		.uleb128 0x2
 4234 0a42 91       		.byte	0x91
 4235 0a43 6C       		.sleb128 -20
 4236 0a44 11       		.uleb128 0x11
 4237 0a45 E3040000 		.4byte	.LASF91
 4238 0a49 01       		.byte	0x1
 4239 0a4a E606     		.2byte	0x6e6
 4240 0a4c 6B000000 		.4byte	0x6b
 4241 0a50 02       		.uleb128 0x2
 4242 0a51 91       		.byte	0x91
 4243 0a52 69       		.sleb128 -23
 4244 0a53 11       		.uleb128 0x11
 4245 0a54 C30B0000 		.4byte	.LASF99
 4246 0a58 01       		.byte	0x1
 4247 0a59 E706     		.2byte	0x6e7
 4248 0a5b 76000000 		.4byte	0x76
 4249 0a5f 02       		.uleb128 0x2
 4250 0a60 91       		.byte	0x91
 4251 0a61 6E       		.sleb128 -18
 4252 0a62 11       		.uleb128 0x11
 4253 0a63 88030000 		.4byte	.LASF89
 4254 0a67 01       		.byte	0x1
 4255 0a68 E806     		.2byte	0x6e8
 4256 0a6a 6B000000 		.4byte	0x6b
 4257 0a6e 02       		.uleb128 0x2
 4258 0a6f 91       		.byte	0x91
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 126


 4259 0a70 6B       		.sleb128 -21
 4260 0a71 11       		.uleb128 0x11
 4261 0a72 51020000 		.4byte	.LASF90
 4262 0a76 01       		.byte	0x1
 4263 0a77 E906     		.2byte	0x6e9
 4264 0a79 6B000000 		.4byte	0x6b
 4265 0a7d 02       		.uleb128 0x2
 4266 0a7e 91       		.byte	0x91
 4267 0a7f 6A       		.sleb128 -22
 4268 0a80 00       		.byte	0
 4269 0a81 15       		.uleb128 0x15
 4270 0a82 CB0A0000 		.4byte	.LASF106
 4271 0a86 01       		.byte	0x1
 4272 0a87 9E07     		.2byte	0x79e
 4273 0a89 76000000 		.4byte	0x76
 4274 0a8d 00000000 		.4byte	.LFB63
 4275 0a91 9C000000 		.4byte	.LFE63-.LFB63
 4276 0a95 01       		.uleb128 0x1
 4277 0a96 9C       		.byte	0x9c
 4278 0a97 E70A0000 		.4byte	0xae7
 4279 0a9b 12       		.uleb128 0x12
 4280 0a9c D8020000 		.4byte	.LASF51
 4281 0aa0 01       		.byte	0x1
 4282 0aa1 9E07     		.2byte	0x79e
 4283 0aa3 81000000 		.4byte	0x81
 4284 0aa7 02       		.uleb128 0x2
 4285 0aa8 91       		.byte	0x91
 4286 0aa9 64       		.sleb128 -28
 4287 0aaa 11       		.uleb128 0x11
 4288 0aab E3040000 		.4byte	.LASF91
 4289 0aaf 01       		.byte	0x1
 4290 0ab0 AD07     		.2byte	0x7ad
 4291 0ab2 6B000000 		.4byte	0x6b
 4292 0ab6 02       		.uleb128 0x2
 4293 0ab7 91       		.byte	0x91
 4294 0ab8 6B       		.sleb128 -21
 4295 0ab9 11       		.uleb128 0x11
 4296 0aba C30B0000 		.4byte	.LASF99
 4297 0abe 01       		.byte	0x1
 4298 0abf AE07     		.2byte	0x7ae
 4299 0ac1 76000000 		.4byte	0x76
 4300 0ac5 02       		.uleb128 0x2
 4301 0ac6 91       		.byte	0x91
 4302 0ac7 6E       		.sleb128 -18
 4303 0ac8 11       		.uleb128 0x11
 4304 0ac9 88030000 		.4byte	.LASF89
 4305 0acd 01       		.byte	0x1
 4306 0ace AF07     		.2byte	0x7af
 4307 0ad0 6B000000 		.4byte	0x6b
 4308 0ad4 02       		.uleb128 0x2
 4309 0ad5 91       		.byte	0x91
 4310 0ad6 6D       		.sleb128 -19
 4311 0ad7 11       		.uleb128 0x11
 4312 0ad8 51020000 		.4byte	.LASF90
 4313 0adc 01       		.byte	0x1
 4314 0add B007     		.2byte	0x7b0
 4315 0adf 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 127


 4316 0ae3 02       		.uleb128 0x2
 4317 0ae4 91       		.byte	0x91
 4318 0ae5 6C       		.sleb128 -20
 4319 0ae6 00       		.byte	0
 4320 0ae7 13       		.uleb128 0x13
 4321 0ae8 EB040000 		.4byte	.LASF107
 4322 0aec 01       		.byte	0x1
 4323 0aed 4B09     		.2byte	0x94b
 4324 0aef 76000000 		.4byte	0x76
 4325 0af3 00000000 		.4byte	.LFB64
 4326 0af7 6A000000 		.4byte	.LFE64-.LFB64
 4327 0afb 01       		.uleb128 0x1
 4328 0afc 9C       		.byte	0x9c
 4329 0afd 3B0B0000 		.4byte	0xb3b
 4330 0b01 18       		.uleb128 0x18
 4331 0b02 783100   		.ascii	"x1\000"
 4332 0b05 01       		.byte	0x1
 4333 0b06 4B09     		.2byte	0x94b
 4334 0b08 76000000 		.4byte	0x76
 4335 0b0c 02       		.uleb128 0x2
 4336 0b0d 91       		.byte	0x91
 4337 0b0e 6E       		.sleb128 -18
 4338 0b0f 18       		.uleb128 0x18
 4339 0b10 783200   		.ascii	"x2\000"
 4340 0b13 01       		.byte	0x1
 4341 0b14 4B09     		.2byte	0x94b
 4342 0b16 76000000 		.4byte	0x76
 4343 0b1a 02       		.uleb128 0x2
 4344 0b1b 91       		.byte	0x91
 4345 0b1c 6C       		.sleb128 -20
 4346 0b1d 18       		.uleb128 0x18
 4347 0b1e 783300   		.ascii	"x3\000"
 4348 0b21 01       		.byte	0x1
 4349 0b22 4B09     		.2byte	0x94b
 4350 0b24 76000000 		.4byte	0x76
 4351 0b28 02       		.uleb128 0x2
 4352 0b29 91       		.byte	0x91
 4353 0b2a 6A       		.sleb128 -22
 4354 0b2b 0F       		.uleb128 0xf
 4355 0b2c 746D7000 		.ascii	"tmp\000"
 4356 0b30 01       		.byte	0x1
 4357 0b31 4D09     		.2byte	0x94d
 4358 0b33 76000000 		.4byte	0x76
 4359 0b37 02       		.uleb128 0x2
 4360 0b38 91       		.byte	0x91
 4361 0b39 76       		.sleb128 -10
 4362 0b3a 00       		.byte	0
 4363 0b3b 13       		.uleb128 0x13
 4364 0b3c 58050000 		.4byte	.LASF108
 4365 0b40 01       		.byte	0x1
 4366 0b41 C309     		.2byte	0x9c3
 4367 0b43 76000000 		.4byte	0x76
 4368 0b47 00000000 		.4byte	.LFB65
 4369 0b4b 3C000000 		.4byte	.LFE65-.LFB65
 4370 0b4f 01       		.uleb128 0x1
 4371 0b50 9C       		.byte	0x9c
 4372 0b51 810B0000 		.4byte	0xb81
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 128


 4373 0b55 18       		.uleb128 0x18
 4374 0b56 783100   		.ascii	"x1\000"
 4375 0b59 01       		.byte	0x1
 4376 0b5a C309     		.2byte	0x9c3
 4377 0b5c 76000000 		.4byte	0x76
 4378 0b60 02       		.uleb128 0x2
 4379 0b61 91       		.byte	0x91
 4380 0b62 6E       		.sleb128 -18
 4381 0b63 18       		.uleb128 0x18
 4382 0b64 783200   		.ascii	"x2\000"
 4383 0b67 01       		.byte	0x1
 4384 0b68 C309     		.2byte	0x9c3
 4385 0b6a 76000000 		.4byte	0x76
 4386 0b6e 02       		.uleb128 0x2
 4387 0b6f 91       		.byte	0x91
 4388 0b70 6C       		.sleb128 -20
 4389 0b71 0F       		.uleb128 0xf
 4390 0b72 746D7000 		.ascii	"tmp\000"
 4391 0b76 01       		.byte	0x1
 4392 0b77 C509     		.2byte	0x9c5
 4393 0b79 81000000 		.4byte	0x81
 4394 0b7d 02       		.uleb128 0x2
 4395 0b7e 91       		.byte	0x91
 4396 0b7f 74       		.sleb128 -12
 4397 0b80 00       		.byte	0
 4398 0b81 13       		.uleb128 0x13
 4399 0b82 EA030000 		.4byte	.LASF109
 4400 0b86 01       		.byte	0x1
 4401 0b87 EB09     		.2byte	0x9eb
 4402 0b89 76000000 		.4byte	0x76
 4403 0b8d 00000000 		.4byte	.LFB66
 4404 0b91 4C000000 		.4byte	.LFE66-.LFB66
 4405 0b95 01       		.uleb128 0x1
 4406 0b96 9C       		.byte	0x9c
 4407 0b97 B80B0000 		.4byte	0xbb8
 4408 0b9b 18       		.uleb128 0x18
 4409 0b9c 783100   		.ascii	"x1\000"
 4410 0b9f 01       		.byte	0x1
 4411 0ba0 EB09     		.2byte	0x9eb
 4412 0ba2 76000000 		.4byte	0x76
 4413 0ba6 02       		.uleb128 0x2
 4414 0ba7 91       		.byte	0x91
 4415 0ba8 76       		.sleb128 -10
 4416 0ba9 18       		.uleb128 0x18
 4417 0baa 783200   		.ascii	"x2\000"
 4418 0bad 01       		.byte	0x1
 4419 0bae EB09     		.2byte	0x9eb
 4420 0bb0 76000000 		.4byte	0x76
 4421 0bb4 02       		.uleb128 0x2
 4422 0bb5 91       		.byte	0x91
 4423 0bb6 74       		.sleb128 -12
 4424 0bb7 00       		.byte	0
 4425 0bb8 13       		.uleb128 0x13
 4426 0bb9 A6050000 		.4byte	.LASF110
 4427 0bbd 01       		.byte	0x1
 4428 0bbe AC0A     		.2byte	0xaac
 4429 0bc0 81000000 		.4byte	0x81
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 129


 4430 0bc4 00000000 		.4byte	.LFB67
 4431 0bc8 1C000000 		.4byte	.LFE67-.LFB67
 4432 0bcc 01       		.uleb128 0x1
 4433 0bcd 9C       		.byte	0x9c
 4434 0bce E20B0000 		.4byte	0xbe2
 4435 0bd2 12       		.uleb128 0x12
 4436 0bd3 39040000 		.4byte	.LASF42
 4437 0bd7 01       		.byte	0x1
 4438 0bd8 AC0A     		.2byte	0xaac
 4439 0bda 81000000 		.4byte	0x81
 4440 0bde 02       		.uleb128 0x2
 4441 0bdf 91       		.byte	0x91
 4442 0be0 74       		.sleb128 -12
 4443 0be1 00       		.byte	0
 4444 0be2 13       		.uleb128 0x13
 4445 0be3 1F090000 		.4byte	.LASF111
 4446 0be7 01       		.byte	0x1
 4447 0be8 C60A     		.2byte	0xac6
 4448 0bea 6B000000 		.4byte	0x6b
 4449 0bee 00000000 		.4byte	.LFB68
 4450 0bf2 1C000000 		.4byte	.LFE68-.LFB68
 4451 0bf6 01       		.uleb128 0x1
 4452 0bf7 9C       		.byte	0x9c
 4453 0bf8 0C0C0000 		.4byte	0xc0c
 4454 0bfc 12       		.uleb128 0x12
 4455 0bfd 39040000 		.4byte	.LASF42
 4456 0c01 01       		.byte	0x1
 4457 0c02 C60A     		.2byte	0xac6
 4458 0c04 81000000 		.4byte	0x81
 4459 0c08 02       		.uleb128 0x2
 4460 0c09 91       		.byte	0x91
 4461 0c0a 74       		.sleb128 -12
 4462 0c0b 00       		.byte	0
 4463 0c0c 13       		.uleb128 0x13
 4464 0c0d B5010000 		.4byte	.LASF112
 4465 0c11 01       		.byte	0x1
 4466 0c12 E00A     		.2byte	0xae0
 4467 0c14 6B000000 		.4byte	0x6b
 4468 0c18 00000000 		.4byte	.LFB69
 4469 0c1c 1C000000 		.4byte	.LFE69-.LFB69
 4470 0c20 01       		.uleb128 0x1
 4471 0c21 9C       		.byte	0x9c
 4472 0c22 360C0000 		.4byte	0xc36
 4473 0c26 12       		.uleb128 0x12
 4474 0c27 D8020000 		.4byte	.LASF51
 4475 0c2b 01       		.byte	0x1
 4476 0c2c E00A     		.2byte	0xae0
 4477 0c2e 81000000 		.4byte	0x81
 4478 0c32 02       		.uleb128 0x2
 4479 0c33 91       		.byte	0x91
 4480 0c34 74       		.sleb128 -12
 4481 0c35 00       		.byte	0
 4482 0c36 19       		.uleb128 0x19
 4483 0c37 C4090000 		.4byte	.LASF113
 4484 0c3b 01       		.byte	0x1
 4485 0c3c FA0A     		.2byte	0xafa
 4486 0c3e 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 130


 4487 0c42 14000000 		.4byte	.LFE70-.LFB70
 4488 0c46 01       		.uleb128 0x1
 4489 0c47 9C       		.byte	0x9c
 4490 0c48 19       		.uleb128 0x19
 4491 0c49 16040000 		.4byte	.LASF114
 4492 0c4d 01       		.byte	0x1
 4493 0c4e 130B     		.2byte	0xb13
 4494 0c50 00000000 		.4byte	.LFB71
 4495 0c54 14000000 		.4byte	.LFE71-.LFB71
 4496 0c58 01       		.uleb128 0x1
 4497 0c59 9C       		.byte	0x9c
 4498 0c5a 16       		.uleb128 0x16
 4499 0c5b 76000000 		.4byte	0x76
 4500 0c5f 6A0C0000 		.4byte	0xc6a
 4501 0c63 17       		.uleb128 0x17
 4502 0c64 B7000000 		.4byte	0xb7
 4503 0c68 00       		.byte	0
 4504 0c69 00       		.byte	0
 4505 0c6a 1A       		.uleb128 0x1a
 4506 0c6b 4D030000 		.4byte	.LASF115
 4507 0c6f 01       		.byte	0x1
 4508 0c70 5D       		.byte	0x5d
 4509 0c71 7B0C0000 		.4byte	0xc7b
 4510 0c75 05       		.uleb128 0x5
 4511 0c76 03       		.byte	0x3
 4512 0c77 08000000 		.4byte	CapSense_CSD_centroidMult
 4513 0c7b 08       		.uleb128 0x8
 4514 0c7c 5A0C0000 		.4byte	0xc5a
 4515 0c80 1A       		.uleb128 0x1a
 4516 0c81 3F0B0000 		.4byte	.LASF116
 4517 0c85 01       		.byte	0x1
 4518 0c86 61       		.byte	0x61
 4519 0c87 64070000 		.4byte	0x764
 4520 0c8b 05       		.uleb128 0x5
 4521 0c8c 03       		.byte	0x3
 4522 0c8d 14000000 		.4byte	CapSense_CSD_posFiltersMask
 4523 0c91 1A       		.uleb128 0x1a
 4524 0c92 FA080000 		.4byte	.LASF117
 4525 0c96 01       		.byte	0x1
 4526 0c97 65       		.byte	0x65
 4527 0c98 DE090000 		.4byte	0x9de
 4528 0c9c 05       		.uleb128 0x5
 4529 0c9d 03       		.byte	0x3
 4530 0c9e 18000000 		.4byte	CapSense_CSD_posFiltersData
 4531 0ca2 16       		.uleb128 0x16
 4532 0ca3 76000000 		.4byte	0x76
 4533 0ca7 B20C0000 		.4byte	0xcb2
 4534 0cab 17       		.uleb128 0x17
 4535 0cac B7000000 		.4byte	0xb7
 4536 0cb0 0B       		.byte	0xb
 4537 0cb1 00       		.byte	0
 4538 0cb2 1B       		.uleb128 0x1b
 4539 0cb3 40010000 		.4byte	.LASF118
 4540 0cb7 01       		.byte	0x1
 4541 0cb8 2C       		.byte	0x2c
 4542 0cb9 A20C0000 		.4byte	0xca2
 4543 0cbd 16       		.uleb128 0x16
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 131


 4544 0cbe 6B000000 		.4byte	0x6b
 4545 0cc2 CD0C0000 		.4byte	0xccd
 4546 0cc6 17       		.uleb128 0x17
 4547 0cc7 B7000000 		.4byte	0xb7
 4548 0ccb 01       		.byte	0x1
 4549 0ccc 00       		.byte	0
 4550 0ccd 1B       		.uleb128 0x1b
 4551 0cce B7070000 		.4byte	.LASF119
 4552 0cd2 01       		.byte	0x1
 4553 0cd3 2D       		.byte	0x2d
 4554 0cd4 BD0C0000 		.4byte	0xcbd
 4555 0cd8 16       		.uleb128 0x16
 4556 0cd9 6B000000 		.4byte	0x6b
 4557 0cdd E80C0000 		.4byte	0xce8
 4558 0ce1 17       		.uleb128 0x17
 4559 0ce2 B7000000 		.4byte	0xb7
 4560 0ce6 0B       		.byte	0xb
 4561 0ce7 00       		.byte	0
 4562 0ce8 1B       		.uleb128 0x1b
 4563 0ce9 240A0000 		.4byte	.LASF120
 4564 0ced 01       		.byte	0x1
 4565 0cee 2E       		.byte	0x2e
 4566 0cef F30C0000 		.4byte	0xcf3
 4567 0cf3 08       		.uleb128 0x8
 4568 0cf4 D80C0000 		.4byte	0xcd8
 4569 0cf8 1C       		.uleb128 0x1c
 4570 0cf9 67030000 		.4byte	.LASF121
 4571 0cfd 01       		.byte	0x1
 4572 0cfe 34       		.byte	0x34
 4573 0cff A20C0000 		.4byte	0xca2
 4574 0d03 05       		.uleb128 0x5
 4575 0d04 03       		.byte	0x3
 4576 0d05 00000000 		.4byte	CapSense_CSD_sensorBaseline
 4577 0d09 1C       		.uleb128 0x1c
 4578 0d0a 03080000 		.4byte	.LASF122
 4579 0d0e 01       		.byte	0x1
 4580 0d0f 35       		.byte	0x35
 4581 0d10 D80C0000 		.4byte	0xcd8
 4582 0d14 05       		.uleb128 0x5
 4583 0d15 03       		.byte	0x3
 4584 0d16 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 4585 0d1a 1C       		.uleb128 0x1c
 4586 0d1b 160B0000 		.4byte	.LASF123
 4587 0d1f 01       		.byte	0x1
 4588 0d20 36       		.byte	0x36
 4589 0d21 D80C0000 		.4byte	0xcd8
 4590 0d25 05       		.uleb128 0x5
 4591 0d26 03       		.byte	0x3
 4592 0d27 00000000 		.4byte	CapSense_CSD_sensorSignal
 4593 0d2b 1C       		.uleb128 0x1c
 4594 0d2c E7050000 		.4byte	.LASF124
 4595 0d30 01       		.byte	0x1
 4596 0d31 37       		.byte	0x37
 4597 0d32 BD0C0000 		.4byte	0xcbd
 4598 0d36 05       		.uleb128 0x5
 4599 0d37 03       		.byte	0x3
 4600 0d38 00000000 		.4byte	CapSense_CSD_sensorOnMask
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 132


 4601 0d3c 1C       		.uleb128 0x1c
 4602 0d3d 75020000 		.4byte	.LASF125
 4603 0d41 01       		.byte	0x1
 4604 0d42 39       		.byte	0x39
 4605 0d43 D80C0000 		.4byte	0xcd8
 4606 0d47 05       		.uleb128 0x5
 4607 0d48 03       		.byte	0x3
 4608 0d49 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 4609 0d4d 1C       		.uleb128 0x1c
 4610 0d4e 57000000 		.4byte	.LASF126
 4611 0d52 01       		.byte	0x1
 4612 0d53 3A       		.byte	0x3a
 4613 0d54 D80C0000 		.4byte	0xcd8
 4614 0d58 05       		.uleb128 0x5
 4615 0d59 03       		.byte	0x3
 4616 0d5a 00000000 		.4byte	CapSense_CSD_lowBaselineReset
 4617 0d5e 1C       		.uleb128 0x1c
 4618 0d5f EC010000 		.4byte	.LASF127
 4619 0d63 01       		.byte	0x1
 4620 0d64 49       		.byte	0x49
 4621 0d65 64070000 		.4byte	0x764
 4622 0d69 05       		.uleb128 0x5
 4623 0d6a 03       		.byte	0x3
 4624 0d6b 00000000 		.4byte	CapSense_CSD_fingerThreshold
 4625 0d6f 1C       		.uleb128 0x1c
 4626 0d70 05050000 		.4byte	.LASF128
 4627 0d74 01       		.byte	0x1
 4628 0d75 4B       		.byte	0x4b
 4629 0d76 64070000 		.4byte	0x764
 4630 0d7a 05       		.uleb128 0x5
 4631 0d7b 03       		.byte	0x3
 4632 0d7c 00000000 		.4byte	CapSense_CSD_noiseThreshold
 4633 0d80 1C       		.uleb128 0x1c
 4634 0d81 2C060000 		.4byte	.LASF129
 4635 0d85 01       		.byte	0x1
 4636 0d86 4D       		.byte	0x4d
 4637 0d87 64070000 		.4byte	0x764
 4638 0d8b 05       		.uleb128 0x5
 4639 0d8c 03       		.byte	0x3
 4640 0d8d 00000000 		.4byte	CapSense_CSD_negativeNoiseThreshold
 4641 0d91 1C       		.uleb128 0x1c
 4642 0d92 27080000 		.4byte	.LASF130
 4643 0d96 01       		.byte	0x1
 4644 0d97 4F       		.byte	0x4f
 4645 0d98 64070000 		.4byte	0x764
 4646 0d9c 05       		.uleb128 0x5
 4647 0d9d 03       		.byte	0x3
 4648 0d9e 00000000 		.4byte	CapSense_CSD_hysteresis
 4649 0da2 1C       		.uleb128 0x1c
 4650 0da3 9F090000 		.4byte	.LASF131
 4651 0da7 01       		.byte	0x1
 4652 0da8 51       		.byte	0x51
 4653 0da9 64070000 		.4byte	0x764
 4654 0dad 05       		.uleb128 0x5
 4655 0dae 03       		.byte	0x3
 4656 0daf 00000000 		.4byte	CapSense_CSD_debounce
 4657 0db3 1C       		.uleb128 0x1c
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 133


 4658 0db4 66070000 		.4byte	.LASF132
 4659 0db8 01       		.byte	0x1
 4660 0db9 55       		.byte	0x55
 4661 0dba C40D0000 		.4byte	0xdc4
 4662 0dbe 05       		.uleb128 0x5
 4663 0dbf 03       		.byte	0x3
 4664 0dc0 00000000 		.4byte	CapSense_CSD_rawDataIndex
 4665 0dc4 08       		.uleb128 0x8
 4666 0dc5 64070000 		.4byte	0x764
 4667 0dc9 1C       		.uleb128 0x1c
 4668 0dca 50040000 		.4byte	.LASF133
 4669 0dce 01       		.byte	0x1
 4670 0dcf 59       		.byte	0x59
 4671 0dd0 DA0D0000 		.4byte	0xdda
 4672 0dd4 05       		.uleb128 0x5
 4673 0dd5 03       		.byte	0x3
 4674 0dd6 00000000 		.4byte	CapSense_CSD_numberOfSensors
 4675 0dda 08       		.uleb128 0x8
 4676 0ddb 64070000 		.4byte	0x764
 4677 0ddf 1C       		.uleb128 0x1c
 4678 0de0 AD060000 		.4byte	.LASF134
 4679 0de4 01       		.byte	0x1
 4680 0de5 27       		.byte	0x27
 4681 0de6 A20C0000 		.4byte	0xca2
 4682 0dea 05       		.uleb128 0x5
 4683 0deb 03       		.byte	0x3
 4684 0dec 00000000 		.4byte	CapSense_CSD_rawFilterData1
 4685 0df0 1B       		.uleb128 0x1b
 4686 0df1 95070000 		.4byte	.LASF135
 4687 0df5 01       		.byte	0x1
 4688 0df6 41       		.byte	0x41
 4689 0df7 48020000 		.4byte	0x248
 4690 0dfb 1C       		.uleb128 0x1c
 4691 0dfc CE010000 		.4byte	.LASF136
 4692 0e00 01       		.byte	0x1
 4693 0e01 45       		.byte	0x45
 4694 0e02 6B000000 		.4byte	0x6b
 4695 0e06 05       		.uleb128 0x5
 4696 0e07 03       		.byte	0x3
 4697 0e08 00000000 		.4byte	CapSense_CSD_enableRawFilters
 4698 0e0c 00       		.byte	0
 4699              		.section	.debug_abbrev,"",%progbits
 4700              	.Ldebug_abbrev0:
 4701 0000 01       		.uleb128 0x1
 4702 0001 11       		.uleb128 0x11
 4703 0002 01       		.byte	0x1
 4704 0003 25       		.uleb128 0x25
 4705 0004 0E       		.uleb128 0xe
 4706 0005 13       		.uleb128 0x13
 4707 0006 0B       		.uleb128 0xb
 4708 0007 03       		.uleb128 0x3
 4709 0008 0E       		.uleb128 0xe
 4710 0009 1B       		.uleb128 0x1b
 4711 000a 0E       		.uleb128 0xe
 4712 000b 55       		.uleb128 0x55
 4713 000c 17       		.uleb128 0x17
 4714 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 134


 4715 000e 01       		.uleb128 0x1
 4716 000f 10       		.uleb128 0x10
 4717 0010 17       		.uleb128 0x17
 4718 0011 00       		.byte	0
 4719 0012 00       		.byte	0
 4720 0013 02       		.uleb128 0x2
 4721 0014 24       		.uleb128 0x24
 4722 0015 00       		.byte	0
 4723 0016 0B       		.uleb128 0xb
 4724 0017 0B       		.uleb128 0xb
 4725 0018 3E       		.uleb128 0x3e
 4726 0019 0B       		.uleb128 0xb
 4727 001a 03       		.uleb128 0x3
 4728 001b 0E       		.uleb128 0xe
 4729 001c 00       		.byte	0
 4730 001d 00       		.byte	0
 4731 001e 03       		.uleb128 0x3
 4732 001f 24       		.uleb128 0x24
 4733 0020 00       		.byte	0
 4734 0021 0B       		.uleb128 0xb
 4735 0022 0B       		.uleb128 0xb
 4736 0023 3E       		.uleb128 0x3e
 4737 0024 0B       		.uleb128 0xb
 4738 0025 03       		.uleb128 0x3
 4739 0026 08       		.uleb128 0x8
 4740 0027 00       		.byte	0
 4741 0028 00       		.byte	0
 4742 0029 04       		.uleb128 0x4
 4743 002a 16       		.uleb128 0x16
 4744 002b 00       		.byte	0
 4745 002c 03       		.uleb128 0x3
 4746 002d 0E       		.uleb128 0xe
 4747 002e 3A       		.uleb128 0x3a
 4748 002f 0B       		.uleb128 0xb
 4749 0030 3B       		.uleb128 0x3b
 4750 0031 0B       		.uleb128 0xb
 4751 0032 49       		.uleb128 0x49
 4752 0033 13       		.uleb128 0x13
 4753 0034 00       		.byte	0
 4754 0035 00       		.byte	0
 4755 0036 05       		.uleb128 0x5
 4756 0037 13       		.uleb128 0x13
 4757 0038 01       		.byte	0x1
 4758 0039 0B       		.uleb128 0xb
 4759 003a 0B       		.uleb128 0xb
 4760 003b 3A       		.uleb128 0x3a
 4761 003c 0B       		.uleb128 0xb
 4762 003d 3B       		.uleb128 0x3b
 4763 003e 0B       		.uleb128 0xb
 4764 003f 01       		.uleb128 0x1
 4765 0040 13       		.uleb128 0x13
 4766 0041 00       		.byte	0
 4767 0042 00       		.byte	0
 4768 0043 06       		.uleb128 0x6
 4769 0044 0D       		.uleb128 0xd
 4770 0045 00       		.byte	0
 4771 0046 03       		.uleb128 0x3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 135


 4772 0047 0E       		.uleb128 0xe
 4773 0048 3A       		.uleb128 0x3a
 4774 0049 0B       		.uleb128 0xb
 4775 004a 3B       		.uleb128 0x3b
 4776 004b 0B       		.uleb128 0xb
 4777 004c 49       		.uleb128 0x49
 4778 004d 13       		.uleb128 0x13
 4779 004e 38       		.uleb128 0x38
 4780 004f 0B       		.uleb128 0xb
 4781 0050 00       		.byte	0
 4782 0051 00       		.byte	0
 4783 0052 07       		.uleb128 0x7
 4784 0053 0F       		.uleb128 0xf
 4785 0054 00       		.byte	0
 4786 0055 0B       		.uleb128 0xb
 4787 0056 0B       		.uleb128 0xb
 4788 0057 49       		.uleb128 0x49
 4789 0058 13       		.uleb128 0x13
 4790 0059 00       		.byte	0
 4791 005a 00       		.byte	0
 4792 005b 08       		.uleb128 0x8
 4793 005c 26       		.uleb128 0x26
 4794 005d 00       		.byte	0
 4795 005e 49       		.uleb128 0x49
 4796 005f 13       		.uleb128 0x13
 4797 0060 00       		.byte	0
 4798 0061 00       		.byte	0
 4799 0062 09       		.uleb128 0x9
 4800 0063 15       		.uleb128 0x15
 4801 0064 01       		.byte	0x1
 4802 0065 27       		.uleb128 0x27
 4803 0066 19       		.uleb128 0x19
 4804 0067 49       		.uleb128 0x49
 4805 0068 13       		.uleb128 0x13
 4806 0069 01       		.uleb128 0x1
 4807 006a 13       		.uleb128 0x13
 4808 006b 00       		.byte	0
 4809 006c 00       		.byte	0
 4810 006d 0A       		.uleb128 0xa
 4811 006e 05       		.uleb128 0x5
 4812 006f 00       		.byte	0
 4813 0070 49       		.uleb128 0x49
 4814 0071 13       		.uleb128 0x13
 4815 0072 00       		.byte	0
 4816 0073 00       		.byte	0
 4817 0074 0B       		.uleb128 0xb
 4818 0075 15       		.uleb128 0x15
 4819 0076 01       		.byte	0x1
 4820 0077 27       		.uleb128 0x27
 4821 0078 19       		.uleb128 0x19
 4822 0079 01       		.uleb128 0x1
 4823 007a 13       		.uleb128 0x13
 4824 007b 00       		.byte	0
 4825 007c 00       		.byte	0
 4826 007d 0C       		.uleb128 0xc
 4827 007e 2E       		.uleb128 0x2e
 4828 007f 01       		.byte	0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 136


 4829 0080 3F       		.uleb128 0x3f
 4830 0081 19       		.uleb128 0x19
 4831 0082 03       		.uleb128 0x3
 4832 0083 0E       		.uleb128 0xe
 4833 0084 3A       		.uleb128 0x3a
 4834 0085 0B       		.uleb128 0xb
 4835 0086 3B       		.uleb128 0x3b
 4836 0087 0B       		.uleb128 0xb
 4837 0088 27       		.uleb128 0x27
 4838 0089 19       		.uleb128 0x19
 4839 008a 11       		.uleb128 0x11
 4840 008b 01       		.uleb128 0x1
 4841 008c 12       		.uleb128 0x12
 4842 008d 06       		.uleb128 0x6
 4843 008e 40       		.uleb128 0x40
 4844 008f 18       		.uleb128 0x18
 4845 0090 9742     		.uleb128 0x2117
 4846 0092 19       		.uleb128 0x19
 4847 0093 01       		.uleb128 0x1
 4848 0094 13       		.uleb128 0x13
 4849 0095 00       		.byte	0
 4850 0096 00       		.byte	0
 4851 0097 0D       		.uleb128 0xd
 4852 0098 05       		.uleb128 0x5
 4853 0099 00       		.byte	0
 4854 009a 03       		.uleb128 0x3
 4855 009b 0E       		.uleb128 0xe
 4856 009c 3A       		.uleb128 0x3a
 4857 009d 0B       		.uleb128 0xb
 4858 009e 3B       		.uleb128 0x3b
 4859 009f 0B       		.uleb128 0xb
 4860 00a0 49       		.uleb128 0x49
 4861 00a1 13       		.uleb128 0x13
 4862 00a2 02       		.uleb128 0x2
 4863 00a3 18       		.uleb128 0x18
 4864 00a4 00       		.byte	0
 4865 00a5 00       		.byte	0
 4866 00a6 0E       		.uleb128 0xe
 4867 00a7 2E       		.uleb128 0x2e
 4868 00a8 01       		.byte	0x1
 4869 00a9 3F       		.uleb128 0x3f
 4870 00aa 19       		.uleb128 0x19
 4871 00ab 03       		.uleb128 0x3
 4872 00ac 0E       		.uleb128 0xe
 4873 00ad 3A       		.uleb128 0x3a
 4874 00ae 0B       		.uleb128 0xb
 4875 00af 3B       		.uleb128 0x3b
 4876 00b0 0B       		.uleb128 0xb
 4877 00b1 27       		.uleb128 0x27
 4878 00b2 19       		.uleb128 0x19
 4879 00b3 11       		.uleb128 0x11
 4880 00b4 01       		.uleb128 0x1
 4881 00b5 12       		.uleb128 0x12
 4882 00b6 06       		.uleb128 0x6
 4883 00b7 40       		.uleb128 0x40
 4884 00b8 18       		.uleb128 0x18
 4885 00b9 9642     		.uleb128 0x2116
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 137


 4886 00bb 19       		.uleb128 0x19
 4887 00bc 01       		.uleb128 0x1
 4888 00bd 13       		.uleb128 0x13
 4889 00be 00       		.byte	0
 4890 00bf 00       		.byte	0
 4891 00c0 0F       		.uleb128 0xf
 4892 00c1 34       		.uleb128 0x34
 4893 00c2 00       		.byte	0
 4894 00c3 03       		.uleb128 0x3
 4895 00c4 08       		.uleb128 0x8
 4896 00c5 3A       		.uleb128 0x3a
 4897 00c6 0B       		.uleb128 0xb
 4898 00c7 3B       		.uleb128 0x3b
 4899 00c8 05       		.uleb128 0x5
 4900 00c9 49       		.uleb128 0x49
 4901 00ca 13       		.uleb128 0x13
 4902 00cb 02       		.uleb128 0x2
 4903 00cc 18       		.uleb128 0x18
 4904 00cd 00       		.byte	0
 4905 00ce 00       		.byte	0
 4906 00cf 10       		.uleb128 0x10
 4907 00d0 2E       		.uleb128 0x2e
 4908 00d1 01       		.byte	0x1
 4909 00d2 3F       		.uleb128 0x3f
 4910 00d3 19       		.uleb128 0x19
 4911 00d4 03       		.uleb128 0x3
 4912 00d5 0E       		.uleb128 0xe
 4913 00d6 3A       		.uleb128 0x3a
 4914 00d7 0B       		.uleb128 0xb
 4915 00d8 3B       		.uleb128 0x3b
 4916 00d9 05       		.uleb128 0x5
 4917 00da 27       		.uleb128 0x27
 4918 00db 19       		.uleb128 0x19
 4919 00dc 11       		.uleb128 0x11
 4920 00dd 01       		.uleb128 0x1
 4921 00de 12       		.uleb128 0x12
 4922 00df 06       		.uleb128 0x6
 4923 00e0 40       		.uleb128 0x40
 4924 00e1 18       		.uleb128 0x18
 4925 00e2 9642     		.uleb128 0x2116
 4926 00e4 19       		.uleb128 0x19
 4927 00e5 01       		.uleb128 0x1
 4928 00e6 13       		.uleb128 0x13
 4929 00e7 00       		.byte	0
 4930 00e8 00       		.byte	0
 4931 00e9 11       		.uleb128 0x11
 4932 00ea 34       		.uleb128 0x34
 4933 00eb 00       		.byte	0
 4934 00ec 03       		.uleb128 0x3
 4935 00ed 0E       		.uleb128 0xe
 4936 00ee 3A       		.uleb128 0x3a
 4937 00ef 0B       		.uleb128 0xb
 4938 00f0 3B       		.uleb128 0x3b
 4939 00f1 05       		.uleb128 0x5
 4940 00f2 49       		.uleb128 0x49
 4941 00f3 13       		.uleb128 0x13
 4942 00f4 02       		.uleb128 0x2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 138


 4943 00f5 18       		.uleb128 0x18
 4944 00f6 00       		.byte	0
 4945 00f7 00       		.byte	0
 4946 00f8 12       		.uleb128 0x12
 4947 00f9 05       		.uleb128 0x5
 4948 00fa 00       		.byte	0
 4949 00fb 03       		.uleb128 0x3
 4950 00fc 0E       		.uleb128 0xe
 4951 00fd 3A       		.uleb128 0x3a
 4952 00fe 0B       		.uleb128 0xb
 4953 00ff 3B       		.uleb128 0x3b
 4954 0100 05       		.uleb128 0x5
 4955 0101 49       		.uleb128 0x49
 4956 0102 13       		.uleb128 0x13
 4957 0103 02       		.uleb128 0x2
 4958 0104 18       		.uleb128 0x18
 4959 0105 00       		.byte	0
 4960 0106 00       		.byte	0
 4961 0107 13       		.uleb128 0x13
 4962 0108 2E       		.uleb128 0x2e
 4963 0109 01       		.byte	0x1
 4964 010a 3F       		.uleb128 0x3f
 4965 010b 19       		.uleb128 0x19
 4966 010c 03       		.uleb128 0x3
 4967 010d 0E       		.uleb128 0xe
 4968 010e 3A       		.uleb128 0x3a
 4969 010f 0B       		.uleb128 0xb
 4970 0110 3B       		.uleb128 0x3b
 4971 0111 05       		.uleb128 0x5
 4972 0112 27       		.uleb128 0x27
 4973 0113 19       		.uleb128 0x19
 4974 0114 49       		.uleb128 0x49
 4975 0115 13       		.uleb128 0x13
 4976 0116 11       		.uleb128 0x11
 4977 0117 01       		.uleb128 0x1
 4978 0118 12       		.uleb128 0x12
 4979 0119 06       		.uleb128 0x6
 4980 011a 40       		.uleb128 0x40
 4981 011b 18       		.uleb128 0x18
 4982 011c 9742     		.uleb128 0x2117
 4983 011e 19       		.uleb128 0x19
 4984 011f 01       		.uleb128 0x1
 4985 0120 13       		.uleb128 0x13
 4986 0121 00       		.byte	0
 4987 0122 00       		.byte	0
 4988 0123 14       		.uleb128 0x14
 4989 0124 2E       		.uleb128 0x2e
 4990 0125 01       		.byte	0x1
 4991 0126 3F       		.uleb128 0x3f
 4992 0127 19       		.uleb128 0x19
 4993 0128 03       		.uleb128 0x3
 4994 0129 0E       		.uleb128 0xe
 4995 012a 3A       		.uleb128 0x3a
 4996 012b 0B       		.uleb128 0xb
 4997 012c 3B       		.uleb128 0x3b
 4998 012d 05       		.uleb128 0x5
 4999 012e 27       		.uleb128 0x27
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 139


 5000 012f 19       		.uleb128 0x19
 5001 0130 11       		.uleb128 0x11
 5002 0131 01       		.uleb128 0x1
 5003 0132 12       		.uleb128 0x12
 5004 0133 06       		.uleb128 0x6
 5005 0134 40       		.uleb128 0x40
 5006 0135 18       		.uleb128 0x18
 5007 0136 9742     		.uleb128 0x2117
 5008 0138 19       		.uleb128 0x19
 5009 0139 01       		.uleb128 0x1
 5010 013a 13       		.uleb128 0x13
 5011 013b 00       		.byte	0
 5012 013c 00       		.byte	0
 5013 013d 15       		.uleb128 0x15
 5014 013e 2E       		.uleb128 0x2e
 5015 013f 01       		.byte	0x1
 5016 0140 3F       		.uleb128 0x3f
 5017 0141 19       		.uleb128 0x19
 5018 0142 03       		.uleb128 0x3
 5019 0143 0E       		.uleb128 0xe
 5020 0144 3A       		.uleb128 0x3a
 5021 0145 0B       		.uleb128 0xb
 5022 0146 3B       		.uleb128 0x3b
 5023 0147 05       		.uleb128 0x5
 5024 0148 27       		.uleb128 0x27
 5025 0149 19       		.uleb128 0x19
 5026 014a 49       		.uleb128 0x49
 5027 014b 13       		.uleb128 0x13
 5028 014c 11       		.uleb128 0x11
 5029 014d 01       		.uleb128 0x1
 5030 014e 12       		.uleb128 0x12
 5031 014f 06       		.uleb128 0x6
 5032 0150 40       		.uleb128 0x40
 5033 0151 18       		.uleb128 0x18
 5034 0152 9642     		.uleb128 0x2116
 5035 0154 19       		.uleb128 0x19
 5036 0155 01       		.uleb128 0x1
 5037 0156 13       		.uleb128 0x13
 5038 0157 00       		.byte	0
 5039 0158 00       		.byte	0
 5040 0159 16       		.uleb128 0x16
 5041 015a 01       		.uleb128 0x1
 5042 015b 01       		.byte	0x1
 5043 015c 49       		.uleb128 0x49
 5044 015d 13       		.uleb128 0x13
 5045 015e 01       		.uleb128 0x1
 5046 015f 13       		.uleb128 0x13
 5047 0160 00       		.byte	0
 5048 0161 00       		.byte	0
 5049 0162 17       		.uleb128 0x17
 5050 0163 21       		.uleb128 0x21
 5051 0164 00       		.byte	0
 5052 0165 49       		.uleb128 0x49
 5053 0166 13       		.uleb128 0x13
 5054 0167 2F       		.uleb128 0x2f
 5055 0168 0B       		.uleb128 0xb
 5056 0169 00       		.byte	0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 140


 5057 016a 00       		.byte	0
 5058 016b 18       		.uleb128 0x18
 5059 016c 05       		.uleb128 0x5
 5060 016d 00       		.byte	0
 5061 016e 03       		.uleb128 0x3
 5062 016f 08       		.uleb128 0x8
 5063 0170 3A       		.uleb128 0x3a
 5064 0171 0B       		.uleb128 0xb
 5065 0172 3B       		.uleb128 0x3b
 5066 0173 05       		.uleb128 0x5
 5067 0174 49       		.uleb128 0x49
 5068 0175 13       		.uleb128 0x13
 5069 0176 02       		.uleb128 0x2
 5070 0177 18       		.uleb128 0x18
 5071 0178 00       		.byte	0
 5072 0179 00       		.byte	0
 5073 017a 19       		.uleb128 0x19
 5074 017b 2E       		.uleb128 0x2e
 5075 017c 00       		.byte	0
 5076 017d 3F       		.uleb128 0x3f
 5077 017e 19       		.uleb128 0x19
 5078 017f 03       		.uleb128 0x3
 5079 0180 0E       		.uleb128 0xe
 5080 0181 3A       		.uleb128 0x3a
 5081 0182 0B       		.uleb128 0xb
 5082 0183 3B       		.uleb128 0x3b
 5083 0184 05       		.uleb128 0x5
 5084 0185 27       		.uleb128 0x27
 5085 0186 19       		.uleb128 0x19
 5086 0187 11       		.uleb128 0x11
 5087 0188 01       		.uleb128 0x1
 5088 0189 12       		.uleb128 0x12
 5089 018a 06       		.uleb128 0x6
 5090 018b 40       		.uleb128 0x40
 5091 018c 18       		.uleb128 0x18
 5092 018d 9742     		.uleb128 0x2117
 5093 018f 19       		.uleb128 0x19
 5094 0190 00       		.byte	0
 5095 0191 00       		.byte	0
 5096 0192 1A       		.uleb128 0x1a
 5097 0193 34       		.uleb128 0x34
 5098 0194 00       		.byte	0
 5099 0195 03       		.uleb128 0x3
 5100 0196 0E       		.uleb128 0xe
 5101 0197 3A       		.uleb128 0x3a
 5102 0198 0B       		.uleb128 0xb
 5103 0199 3B       		.uleb128 0x3b
 5104 019a 0B       		.uleb128 0xb
 5105 019b 49       		.uleb128 0x49
 5106 019c 13       		.uleb128 0x13
 5107 019d 02       		.uleb128 0x2
 5108 019e 18       		.uleb128 0x18
 5109 019f 00       		.byte	0
 5110 01a0 00       		.byte	0
 5111 01a1 1B       		.uleb128 0x1b
 5112 01a2 34       		.uleb128 0x34
 5113 01a3 00       		.byte	0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 141


 5114 01a4 03       		.uleb128 0x3
 5115 01a5 0E       		.uleb128 0xe
 5116 01a6 3A       		.uleb128 0x3a
 5117 01a7 0B       		.uleb128 0xb
 5118 01a8 3B       		.uleb128 0x3b
 5119 01a9 0B       		.uleb128 0xb
 5120 01aa 49       		.uleb128 0x49
 5121 01ab 13       		.uleb128 0x13
 5122 01ac 3F       		.uleb128 0x3f
 5123 01ad 19       		.uleb128 0x19
 5124 01ae 3C       		.uleb128 0x3c
 5125 01af 19       		.uleb128 0x19
 5126 01b0 00       		.byte	0
 5127 01b1 00       		.byte	0
 5128 01b2 1C       		.uleb128 0x1c
 5129 01b3 34       		.uleb128 0x34
 5130 01b4 00       		.byte	0
 5131 01b5 03       		.uleb128 0x3
 5132 01b6 0E       		.uleb128 0xe
 5133 01b7 3A       		.uleb128 0x3a
 5134 01b8 0B       		.uleb128 0xb
 5135 01b9 3B       		.uleb128 0x3b
 5136 01ba 0B       		.uleb128 0xb
 5137 01bb 49       		.uleb128 0x49
 5138 01bc 13       		.uleb128 0x13
 5139 01bd 3F       		.uleb128 0x3f
 5140 01be 19       		.uleb128 0x19
 5141 01bf 02       		.uleb128 0x2
 5142 01c0 18       		.uleb128 0x18
 5143 01c1 00       		.byte	0
 5144 01c2 00       		.byte	0
 5145 01c3 00       		.byte	0
 5146              		.section	.debug_aranges,"",%progbits
 5147 0000 4C010000 		.4byte	0x14c
 5148 0004 0200     		.2byte	0x2
 5149 0006 00000000 		.4byte	.Ldebug_info0
 5150 000a 04       		.byte	0x4
 5151 000b 00       		.byte	0
 5152 000c 0000     		.2byte	0
 5153 000e 0000     		.2byte	0
 5154 0010 00000000 		.4byte	.LFB33
 5155 0014 58000000 		.4byte	.LFE33-.LFB33
 5156 0018 00000000 		.4byte	.LFB34
 5157 001c 2A000000 		.4byte	.LFE34-.LFB34
 5158 0020 00000000 		.4byte	.LFB35
 5159 0024 26000000 		.4byte	.LFE35-.LFB35
 5160 0028 00000000 		.4byte	.LFB36
 5161 002c 50000000 		.4byte	.LFE36-.LFB36
 5162 0030 00000000 		.4byte	.LFB37
 5163 0034 28020000 		.4byte	.LFE37-.LFB37
 5164 0038 00000000 		.4byte	.LFB38
 5165 003c 1E000000 		.4byte	.LFE38-.LFB38
 5166 0040 00000000 		.4byte	.LFB39
 5167 0044 40000000 		.4byte	.LFE39-.LFB39
 5168 0048 00000000 		.4byte	.LFB40
 5169 004c 58000000 		.4byte	.LFE40-.LFB40
 5170 0050 00000000 		.4byte	.LFB41
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 142


 5171 0054 1C000000 		.4byte	.LFE41-.LFB41
 5172 0058 00000000 		.4byte	.LFB42
 5173 005c 24000000 		.4byte	.LFE42-.LFB42
 5174 0060 00000000 		.4byte	.LFB43
 5175 0064 1C000000 		.4byte	.LFE43-.LFB43
 5176 0068 00000000 		.4byte	.LFB44
 5177 006c 24000000 		.4byte	.LFE44-.LFB44
 5178 0070 00000000 		.4byte	.LFB45
 5179 0074 1C000000 		.4byte	.LFE45-.LFB45
 5180 0078 00000000 		.4byte	.LFB46
 5181 007c 1C000000 		.4byte	.LFE46-.LFB46
 5182 0080 00000000 		.4byte	.LFB47
 5183 0084 1C000000 		.4byte	.LFE47-.LFB47
 5184 0088 00000000 		.4byte	.LFB48
 5185 008c 1C000000 		.4byte	.LFE48-.LFB48
 5186 0090 00000000 		.4byte	.LFB49
 5187 0094 24000000 		.4byte	.LFE49-.LFB49
 5188 0098 00000000 		.4byte	.LFB50
 5189 009c 24000000 		.4byte	.LFE50-.LFB50
 5190 00a0 00000000 		.4byte	.LFB51
 5191 00a4 24000000 		.4byte	.LFE51-.LFB51
 5192 00a8 00000000 		.4byte	.LFB52
 5193 00ac 24000000 		.4byte	.LFE52-.LFB52
 5194 00b0 00000000 		.4byte	.LFB53
 5195 00b4 24000000 		.4byte	.LFE53-.LFB53
 5196 00b8 00000000 		.4byte	.LFB54
 5197 00bc 24000000 		.4byte	.LFE54-.LFB54
 5198 00c0 00000000 		.4byte	.LFB55
 5199 00c4 40010000 		.4byte	.LFE55-.LFB55
 5200 00c8 00000000 		.4byte	.LFB56
 5201 00cc 44000000 		.4byte	.LFE56-.LFB56
 5202 00d0 00000000 		.4byte	.LFB57
 5203 00d4 38000000 		.4byte	.LFE57-.LFB57
 5204 00d8 00000000 		.4byte	.LFB58
 5205 00dc 5C000000 		.4byte	.LFE58-.LFB58
 5206 00e0 00000000 		.4byte	.LFB59
 5207 00e4 5C000000 		.4byte	.LFE59-.LFB59
 5208 00e8 00000000 		.4byte	.LFB60
 5209 00ec AC000000 		.4byte	.LFE60-.LFB60
 5210 00f0 00000000 		.4byte	.LFB61
 5211 00f4 94010000 		.4byte	.LFE61-.LFB61
 5212 00f8 00000000 		.4byte	.LFB62
 5213 00fc 5C010000 		.4byte	.LFE62-.LFB62
 5214 0100 00000000 		.4byte	.LFB63
 5215 0104 9C000000 		.4byte	.LFE63-.LFB63
 5216 0108 00000000 		.4byte	.LFB64
 5217 010c 6A000000 		.4byte	.LFE64-.LFB64
 5218 0110 00000000 		.4byte	.LFB65
 5219 0114 3C000000 		.4byte	.LFE65-.LFB65
 5220 0118 00000000 		.4byte	.LFB66
 5221 011c 4C000000 		.4byte	.LFE66-.LFB66
 5222 0120 00000000 		.4byte	.LFB67
 5223 0124 1C000000 		.4byte	.LFE67-.LFB67
 5224 0128 00000000 		.4byte	.LFB68
 5225 012c 1C000000 		.4byte	.LFE68-.LFB68
 5226 0130 00000000 		.4byte	.LFB69
 5227 0134 1C000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 143


 5228 0138 00000000 		.4byte	.LFB70
 5229 013c 14000000 		.4byte	.LFE70-.LFB70
 5230 0140 00000000 		.4byte	.LFB71
 5231 0144 14000000 		.4byte	.LFE71-.LFB71
 5232 0148 00000000 		.4byte	0
 5233 014c 00000000 		.4byte	0
 5234              		.section	.debug_ranges,"",%progbits
 5235              	.Ldebug_ranges0:
 5236 0000 00000000 		.4byte	.LFB33
 5237 0004 58000000 		.4byte	.LFE33
 5238 0008 00000000 		.4byte	.LFB34
 5239 000c 2A000000 		.4byte	.LFE34
 5240 0010 00000000 		.4byte	.LFB35
 5241 0014 26000000 		.4byte	.LFE35
 5242 0018 00000000 		.4byte	.LFB36
 5243 001c 50000000 		.4byte	.LFE36
 5244 0020 00000000 		.4byte	.LFB37
 5245 0024 28020000 		.4byte	.LFE37
 5246 0028 00000000 		.4byte	.LFB38
 5247 002c 1E000000 		.4byte	.LFE38
 5248 0030 00000000 		.4byte	.LFB39
 5249 0034 40000000 		.4byte	.LFE39
 5250 0038 00000000 		.4byte	.LFB40
 5251 003c 58000000 		.4byte	.LFE40
 5252 0040 00000000 		.4byte	.LFB41
 5253 0044 1C000000 		.4byte	.LFE41
 5254 0048 00000000 		.4byte	.LFB42
 5255 004c 24000000 		.4byte	.LFE42
 5256 0050 00000000 		.4byte	.LFB43
 5257 0054 1C000000 		.4byte	.LFE43
 5258 0058 00000000 		.4byte	.LFB44
 5259 005c 24000000 		.4byte	.LFE44
 5260 0060 00000000 		.4byte	.LFB45
 5261 0064 1C000000 		.4byte	.LFE45
 5262 0068 00000000 		.4byte	.LFB46
 5263 006c 1C000000 		.4byte	.LFE46
 5264 0070 00000000 		.4byte	.LFB47
 5265 0074 1C000000 		.4byte	.LFE47
 5266 0078 00000000 		.4byte	.LFB48
 5267 007c 1C000000 		.4byte	.LFE48
 5268 0080 00000000 		.4byte	.LFB49
 5269 0084 24000000 		.4byte	.LFE49
 5270 0088 00000000 		.4byte	.LFB50
 5271 008c 24000000 		.4byte	.LFE50
 5272 0090 00000000 		.4byte	.LFB51
 5273 0094 24000000 		.4byte	.LFE51
 5274 0098 00000000 		.4byte	.LFB52
 5275 009c 24000000 		.4byte	.LFE52
 5276 00a0 00000000 		.4byte	.LFB53
 5277 00a4 24000000 		.4byte	.LFE53
 5278 00a8 00000000 		.4byte	.LFB54
 5279 00ac 24000000 		.4byte	.LFE54
 5280 00b0 00000000 		.4byte	.LFB55
 5281 00b4 40010000 		.4byte	.LFE55
 5282 00b8 00000000 		.4byte	.LFB56
 5283 00bc 44000000 		.4byte	.LFE56
 5284 00c0 00000000 		.4byte	.LFB57
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 144


 5285 00c4 38000000 		.4byte	.LFE57
 5286 00c8 00000000 		.4byte	.LFB58
 5287 00cc 5C000000 		.4byte	.LFE58
 5288 00d0 00000000 		.4byte	.LFB59
 5289 00d4 5C000000 		.4byte	.LFE59
 5290 00d8 00000000 		.4byte	.LFB60
 5291 00dc AC000000 		.4byte	.LFE60
 5292 00e0 00000000 		.4byte	.LFB61
 5293 00e4 94010000 		.4byte	.LFE61
 5294 00e8 00000000 		.4byte	.LFB62
 5295 00ec 5C010000 		.4byte	.LFE62
 5296 00f0 00000000 		.4byte	.LFB63
 5297 00f4 9C000000 		.4byte	.LFE63
 5298 00f8 00000000 		.4byte	.LFB64
 5299 00fc 6A000000 		.4byte	.LFE64
 5300 0100 00000000 		.4byte	.LFB65
 5301 0104 3C000000 		.4byte	.LFE65
 5302 0108 00000000 		.4byte	.LFB66
 5303 010c 4C000000 		.4byte	.LFE66
 5304 0110 00000000 		.4byte	.LFB67
 5305 0114 1C000000 		.4byte	.LFE67
 5306 0118 00000000 		.4byte	.LFB68
 5307 011c 1C000000 		.4byte	.LFE68
 5308 0120 00000000 		.4byte	.LFB69
 5309 0124 1C000000 		.4byte	.LFE69
 5310 0128 00000000 		.4byte	.LFB70
 5311 012c 14000000 		.4byte	.LFE70
 5312 0130 00000000 		.4byte	.LFB71
 5313 0134 14000000 		.4byte	.LFE71
 5314 0138 00000000 		.4byte	0
 5315 013c 00000000 		.4byte	0
 5316              		.section	.debug_line,"",%progbits
 5317              	.Ldebug_line0:
 5318 0000 A4040000 		.section	.debug_str,"MS",%progbits,1
 5318      02006600 
 5318      00000201 
 5318      FB0E0D00 
 5318      01010101 
 5319              	.LASF39:
 5320 0000 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_P4_v2_10\000"
 5320      656E7365 
 5320      5F435344 
 5320      5F434F4E 
 5320      4649475F 
 5321              	.LASF26:
 5322 0022 6E756D62 		.ascii	"numberOfSensors\000"
 5322      65724F66 
 5322      53656E73 
 5322      6F727300 
 5323              	.LASF30:
 5324 0032 70747247 		.ascii	"ptrGetBitValue\000"
 5324      65744269 
 5324      7456616C 
 5324      756500
 5325              	.LASF40:
 5326 0041 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 5326      656E7365 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 145


 5326      5F435344 
 5326      5F426173 
 5326      65496E69 
 5327              	.LASF126:
 5328 0057 43617053 		.ascii	"CapSense_CSD_lowBaselineReset\000"
 5328      656E7365 
 5328      5F435344 
 5328      5F6C6F77 
 5328      42617365 
 5329              	.LASF103:
 5330 0075 706F7349 		.ascii	"posIndex\000"
 5330      6E646578 
 5330      00
 5331              	.LASF45:
 5332 007e 69735365 		.ascii	"isSensorEnabled\000"
 5332      6E736F72 
 5332      456E6162 
 5332      6C656400 
 5333              	.LASF83:
 5334 008e 6E756D4F 		.ascii	"numOfSensors\000"
 5334      6653656E 
 5334      736F7273 
 5334      00
 5335              	.LASF8:
 5336 009b 756E7369 		.ascii	"unsigned int\000"
 5336      676E6564 
 5336      20696E74 
 5336      00
 5337              	.LASF35:
 5338 00a8 746F7461 		.ascii	"totalSensorsNum\000"
 5338      6C53656E 
 5338      736F7273 
 5338      4E756D00 
 5339              	.LASF97:
 5340 00b8 706F734E 		.ascii	"posNext\000"
 5340      65787400 
 5341              	.LASF44:
 5342 00c0 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 5342      656E7365 
 5342      5F435344 
 5342      5F496E69 
 5342      7469616C 
 5343              	.LASF59:
 5344 00e8 43617053 		.ascii	"CapSense_CSD_SetBaselineData\000"
 5344      656E7365 
 5344      5F435344 
 5344      5F536574 
 5344      42617365 
 5345              	.LASF12:
 5346 0105 696E7431 		.ascii	"int16\000"
 5346      3600
 5347              	.LASF138:
 5348 010b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c\000"
 5348      6E657261 
 5348      7465645F 
 5348      536F7572 
 5348      63655C50 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 146


 5349              	.LASF96:
 5350 0138 706F7350 		.ascii	"posPrev\000"
 5350      72657600 
 5351              	.LASF118:
 5352 0140 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 5352      656E7365 
 5352      5F435344 
 5352      5F73656E 
 5352      736F7252 
 5353              	.LASF25:
 5354 0157 72617744 		.ascii	"rawDataIndex\000"
 5354      61746149 
 5354      6E646578 
 5354      00
 5355              	.LASF34:
 5356 0164 746F7461 		.ascii	"totalWidgetsNum\000"
 5356      6C576964 
 5356      67657473 
 5356      4E756D00 
 5357              	.LASF81:
 5358 0174 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 5358      656E7365 
 5358      5F435344 
 5358      5F436865 
 5358      636B4973 
 5359              	.LASF69:
 5360 0195 43617053 		.ascii	"CapSense_CSD_SetFingerThreshold\000"
 5360      656E7365 
 5360      5F435344 
 5360      5F536574 
 5360      46696E67 
 5361              	.LASF112:
 5362 01b5 43617053 		.ascii	"CapSense_CSD_GetDebounce\000"
 5362      656E7365 
 5362      5F435344 
 5362      5F476574 
 5362      4465626F 
 5363              	.LASF136:
 5364 01ce 43617053 		.ascii	"CapSense_CSD_enableRawFilters\000"
 5364      656E7365 
 5364      5F435344 
 5364      5F656E61 
 5364      626C6552 
 5365              	.LASF127:
 5366 01ec 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 5366      656E7365 
 5366      5F435344 
 5366      5F66696E 
 5366      67657254 
 5367              	.LASF80:
 5368 0209 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 5368      656E7365 
 5368      5F435344 
 5368      5F646562 
 5368      6F756E63 
 5369              	.LASF66:
 5370 0226 43617053 		.ascii	"CapSense_CSD_GetNoiseThreshold\000"
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 147


 5370      656E7365 
 5370      5F435344 
 5370      5F476574 
 5370      4E6F6973 
 5371              	.LASF14:
 5372 0245 666C6F61 		.ascii	"float\000"
 5372      7400
 5373              	.LASF13:
 5374 024b 696E7433 		.ascii	"int32\000"
 5374      3200
 5375              	.LASF90:
 5376 0251 636F756E 		.ascii	"count\000"
 5376      7400
 5377              	.LASF24:
 5378 0257 7265736F 		.ascii	"resolutionsTbl\000"
 5378      6C757469 
 5378      6F6E7354 
 5378      626C00
 5379              	.LASF105:
 5380 0266 706F7346 		.ascii	"posFiltersMask\000"
 5380      696C7465 
 5380      72734D61 
 5380      736B00
 5381              	.LASF125:
 5382 0275 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 5382      656E7365 
 5382      5F435344 
 5382      5F6C6F77 
 5382      42617365 
 5383              	.LASF32:
 5384 0296 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_POINTERS_P4_v2_10\000"
 5384      656E7365 
 5384      5F435344 
 5384      5F434F4E 
 5384      4649475F 
 5385              	.LASF7:
 5386 02c1 6C6F6E67 		.ascii	"long long unsigned int\000"
 5386      206C6F6E 
 5386      6720756E 
 5386      7369676E 
 5386      65642069 
 5387              	.LASF51:
 5388 02d8 77696467 		.ascii	"widget\000"
 5388      657400
 5389              	.LASF70:
 5390 02df 43617053 		.ascii	"CapSense_CSD_SetNoiseThreshold\000"
 5390      656E7365 
 5390      5F435344 
 5390      5F536574 
 5390      4E6F6973 
 5391              	.LASF55:
 5392 02fe 43617053 		.ascii	"CapSense_CSD_UpdateWidgetBaseline\000"
 5392      656E7365 
 5392      5F435344 
 5392      5F557064 
 5392      61746557 
 5393              	.LASF64:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 148


 5394 0320 76616C75 		.ascii	"value\000"
 5394      6500
 5395              	.LASF72:
 5396 0326 43617053 		.ascii	"CapSense_CSD_SetNegativeNoiseThreshold\000"
 5396      656E7365 
 5396      5F435344 
 5396      5F536574 
 5396      4E656761 
 5397              	.LASF115:
 5398 034d 43617053 		.ascii	"CapSense_CSD_centroidMult\000"
 5398      656E7365 
 5398      5F435344 
 5398      5F63656E 
 5398      74726F69 
 5399              	.LASF121:
 5400 0367 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 5400      656E7365 
 5400      5F435344 
 5400      5F73656E 
 5400      736F7242 
 5401              	.LASF48:
 5402 0383 7369676E 		.ascii	"sign\000"
 5402      00
 5403              	.LASF89:
 5404 0388 6F666673 		.ascii	"offset\000"
 5404      657400
 5405              	.LASF47:
 5406 038f 63616C63 		.ascii	"calc\000"
 5406      00
 5407              	.LASF29:
 5408 0394 70747252 		.ascii	"ptrReadSensorRaw\000"
 5408      65616453 
 5408      656E736F 
 5408      72526177 
 5408      00
 5409              	.LASF79:
 5410 03a5 68797374 		.ascii	"hysteresis\000"
 5410      65726573 
 5410      697300
 5411              	.LASF73:
 5412 03b0 43617053 		.ascii	"CapSense_CSD_SetDebounce\000"
 5412      656E7365 
 5412      5F435344 
 5412      5F536574 
 5412      4465626F 
 5413              	.LASF50:
 5414 03c9 66696C74 		.ascii	"filteredRawData\000"
 5414      65726564 
 5414      52617744 
 5414      61746100 
 5415              	.LASF56:
 5416 03d9 73656E73 		.ascii	"sensorsPerWidget\000"
 5416      6F727350 
 5416      65725769 
 5416      64676574 
 5416      00
 5417              	.LASF109:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 149


 5418 03ea 43617053 		.ascii	"CapSense_CSD_JitterFilter\000"
 5418      656E7365 
 5418      5F435344 
 5418      5F4A6974 
 5418      74657246 
 5419              	.LASF33:
 5420 0404 746F7461 		.ascii	"totalScanslotsNum\000"
 5420      6C536361 
 5420      6E736C6F 
 5420      74734E75 
 5420      6D00
 5421              	.LASF114:
 5422 0416 43617053 		.ascii	"CapSense_CSD_DisableRawDataFilters\000"
 5422      656E7365 
 5422      5F435344 
 5422      5F446973 
 5422      61626C65 
 5423              	.LASF42:
 5424 0439 73656E73 		.ascii	"sensor\000"
 5424      6F7200
 5425              	.LASF36:
 5426 0440 73656E73 		.ascii	"sensetivitySeed\000"
 5426      65746976 
 5426      69747953 
 5426      65656400 
 5427              	.LASF133:
 5428 0450 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 5428      656E7365 
 5428      5F435344 
 5428      5F6E756D 
 5428      6265724F 
 5429              	.LASF16:
 5430 046d 63686172 		.ascii	"char\000"
 5430      00
 5431              	.LASF87:
 5432 0472 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 5432      656E7365 
 5432      5F435344 
 5432      5F446973 
 5432      61626C65 
 5433              	.LASF10:
 5434 048d 75696E74 		.ascii	"uint16\000"
 5434      313600
 5435              	.LASF60:
 5436 0494 64617461 		.ascii	"data\000"
 5436      00
 5437              	.LASF18:
 5438 0499 69646163 		.ascii	"idac1LevelsTbl\000"
 5438      314C6576 
 5438      656C7354 
 5438      626C00
 5439              	.LASF68:
 5440 04a8 43617053 		.ascii	"CapSense_CSD_GetNegativeNoiseThreshold\000"
 5440      656E7365 
 5440      5F435344 
 5440      5F476574 
 5440      4E656761 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 150


 5441              	.LASF95:
 5442 04cf 7265736F 		.ascii	"resolution\000"
 5442      6C757469 
 5442      6F6E00
 5443              	.LASF82:
 5444 04da 72617749 		.ascii	"rawIndex\000"
 5444      6E646578 
 5444      00
 5445              	.LASF91:
 5446 04e3 6D617869 		.ascii	"maximum\000"
 5446      6D756D00 
 5447              	.LASF107:
 5448 04eb 43617053 		.ascii	"CapSense_CSD_MedianFilter\000"
 5448      656E7365 
 5448      5F435344 
 5448      5F4D6564 
 5448      69616E46 
 5449              	.LASF128:
 5450 0505 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 5450      656E7365 
 5450      5F435344 
 5450      5F6E6F69 
 5450      73655468 
 5451              	.LASF6:
 5452 0521 6C6F6E67 		.ascii	"long long int\000"
 5452      206C6F6E 
 5452      6720696E 
 5452      7400
 5453              	.LASF65:
 5454 052f 43617053 		.ascii	"CapSense_CSD_GetFingerThreshold\000"
 5454      656E7365 
 5454      5F435344 
 5454      5F476574 
 5454      46696E67 
 5455              	.LASF76:
 5456 054f 6465626F 		.ascii	"debounce\000"
 5456      756E6365 
 5456      00
 5457              	.LASF108:
 5458 0558 43617053 		.ascii	"CapSense_CSD_IIR4Filter\000"
 5458      656E7365 
 5458      5F435344 
 5458      5F494952 
 5458      3446696C 
 5459              	.LASF28:
 5460 0570 70747250 		.ascii	"ptrPreScan\000"
 5460      72655363 
 5460      616E00
 5461              	.LASF67:
 5462 057b 43617053 		.ascii	"CapSense_CSD_GetFingerHysteresis\000"
 5462      656E7365 
 5462      5F435344 
 5462      5F476574 
 5462      46696E67 
 5463              	.LASF27:
 5464 059c 70747247 		.ascii	"ptrGetRaw\000"
 5464      65745261 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 151


 5464      7700
 5465              	.LASF110:
 5466 05a6 43617053 		.ascii	"CapSense_CSD_GetWidgetNumber\000"
 5466      656E7365 
 5466      5F435344 
 5466      5F476574 
 5466      57696467 
 5467              	.LASF54:
 5468 05c3 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 5468      656E7365 
 5468      5F435344 
 5468      5F557064 
 5468      61746545 
 5469              	.LASF124:
 5470 05e7 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 5470      656E7365 
 5470      5F435344 
 5470      5F73656E 
 5470      736F724F 
 5471              	.LASF85:
 5472 0601 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 5472      656E7365 
 5472      5F435344 
 5472      5F436865 
 5472      636B4973 
 5473              	.LASF11:
 5474 0625 75696E74 		.ascii	"uint32\000"
 5474      333200
 5475              	.LASF129:
 5476 062c 43617053 		.ascii	"CapSense_CSD_negativeNoiseThreshold\000"
 5476      656E7365 
 5476      5F435344 
 5476      5F6E6567 
 5476      61746976 
 5477              	.LASF104:
 5478 0650 66697273 		.ascii	"firstTimeIndex\000"
 5478      7454696D 
 5478      65496E64 
 5478      657800
 5479              	.LASF93:
 5480 065f 73746172 		.ascii	"startOfSlider\000"
 5480      744F6653 
 5480      6C696465 
 5480      7200
 5481              	.LASF63:
 5482 066d 43617053 		.ascii	"CapSense_CSD_SetDiffCountData\000"
 5482      656E7365 
 5482      5F435344 
 5482      5F536574 
 5482      44696666 
 5483              	.LASF53:
 5484 068b 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 5484      656E7365 
 5484      5F435344 
 5484      5F557064 
 5484      61746553 
 5485              	.LASF134:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 152


 5486 06ad 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 5486      656E7365 
 5486      5F435344 
 5486      5F726177 
 5486      46696C74 
 5487              	.LASF137:
 5488 06c9 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 5488      4320342E 
 5488      382E3420 
 5488      32303134 
 5488      30353236 
 5489 06fc 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 5489      20726576 
 5489      6973696F 
 5489      6E203231 
 5489      31333538 
 5490 072f 30202D66 		.ascii	"0 -ffunction-sections\000"
 5490      66756E63 
 5490      74696F6E 
 5490      2D736563 
 5490      74696F6E 
 5491              	.LASF74:
 5492 0745 43617053 		.ascii	"CapSense_CSD_SetLowBaselineReset\000"
 5492      656E7365 
 5492      5F435344 
 5492      5F536574 
 5492      4C6F7742 
 5493              	.LASF132:
 5494 0766 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 5494      656E7365 
 5494      5F435344 
 5494      5F726177 
 5494      44617461 
 5495              	.LASF100:
 5496 0780 6E756D65 		.ascii	"numerator\000"
 5496      7261746F 
 5496      7200
 5497              	.LASF58:
 5498 078a 6C617374 		.ascii	"lastSensor\000"
 5498      53656E73 
 5498      6F7200
 5499              	.LASF135:
 5500 0795 43617053 		.ascii	"CapSense_CSD_config\000"
 5500      656E7365 
 5500      5F435344 
 5500      5F636F6E 
 5500      66696700 
 5501              	.LASF37:
 5502 07a9 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5502      6B467265 
 5502      715F4D48 
 5502      7A00
 5503              	.LASF119:
 5504 07b7 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 5504      656E7365 
 5504      5F435344 
 5504      5F73656E 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 153


 5504      736F7245 
 5505              	.LASF19:
 5506 07d5 69646163 		.ascii	"idac2LevelsTbl\000"
 5506      324C6576 
 5506      656C7354 
 5506      626C00
 5507              	.LASF2:
 5508 07e4 73686F72 		.ascii	"short int\000"
 5508      7420696E 
 5508      7400
 5509              	.LASF4:
 5510 07ee 6C6F6E67 		.ascii	"long int\000"
 5510      20696E74 
 5510      00
 5511              	.LASF57:
 5512 07f7 66697273 		.ascii	"firstSensor\000"
 5512      7453656E 
 5512      736F7200 
 5513              	.LASF122:
 5514 0803 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 5514      656E7365 
 5514      5F435344 
 5514      5F73656E 
 5514      736F7242 
 5515              	.LASF92:
 5516 0822 74656D70 		.ascii	"temp\000"
 5516      00
 5517              	.LASF130:
 5518 0827 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 5518      656E7365 
 5518      5F435344 
 5518      5F687973 
 5518      74657265 
 5519              	.LASF62:
 5520 083f 43617053 		.ascii	"CapSense_CSD_GetDiffCountData\000"
 5520      656E7365 
 5520      5F435344 
 5520      5F476574 
 5520      44696666 
 5521              	.LASF23:
 5522 085d 77696467 		.ascii	"widgetNubmersTbl\000"
 5522      65744E75 
 5522      626D6572 
 5522      7354626C 
 5522      00
 5523              	.LASF101:
 5524 086e 64656E6F 		.ascii	"denominator\000"
 5524      6D696E61 
 5524      746F7200 
 5525              	.LASF75:
 5526 087a 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 5526      656E7365 
 5526      5F435344 
 5526      5F436865 
 5526      636B4973 
 5527              	.LASF46:
 5528 089b 43617053 		.ascii	"CapSense_CSD_UpdateBaselineNoThreshold\000"
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 154


 5528      656E7365 
 5528      5F435344 
 5528      5F557064 
 5528      61746542 
 5529              	.LASF61:
 5530 08c2 43617053 		.ascii	"CapSense_CSD_GetBaselineData\000"
 5530      656E7365 
 5530      5F435344 
 5530      5F476574 
 5530      42617365 
 5531              	.LASF17:
 5532 08df 73697A65 		.ascii	"sizetype\000"
 5532      74797065 
 5532      00
 5533              	.LASF5:
 5534 08e8 6C6F6E67 		.ascii	"long unsigned int\000"
 5534      20756E73 
 5534      69676E65 
 5534      6420696E 
 5534      7400
 5535              	.LASF117:
 5536 08fa 43617053 		.ascii	"CapSense_CSD_posFiltersData\000"
 5536      656E7365 
 5536      5F435344 
 5536      5F706F73 
 5536      46696C74 
 5537              	.LASF38:
 5538 0916 706F696E 		.ascii	"pointers\000"
 5538      74657273 
 5538      00
 5539              	.LASF111:
 5540 091f 43617053 		.ascii	"CapSense_CSD_GetLowBaselineReset\000"
 5540      656E7365 
 5540      5F435344 
 5540      5F476574 
 5540      4C6F7742 
 5541              	.LASF139:
 5542 0940 433A5C55 		.ascii	"C:\\Users\\gsgill\\Documents\\PSoC Creator\\CapSens"
 5542      73657273 
 5542      5C677367 
 5542      696C6C5C 
 5542      446F6375 
 5543 096e 655F4353 		.ascii	"e_CSD_P4_Design03\\CapSense_CSD_P4_Design03.cydsn\000"
 5543      445F5034 
 5543      5F446573 
 5543      69676E30 
 5543      335C4361 
 5544              	.LASF131:
 5545 099f 43617053 		.ascii	"CapSense_CSD_debounce\000"
 5545      656E7365 
 5545      5F435344 
 5545      5F646562 
 5545      6F756E63 
 5546              	.LASF52:
 5547 09b5 6E6F6973 		.ascii	"noiseThreshold\000"
 5547      65546872 
 5547      6573686F 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 155


 5547      6C6400
 5548              	.LASF113:
 5549 09c4 43617053 		.ascii	"CapSense_CSD_EnableRawDataFilters\000"
 5549      656E7365 
 5549      5F435344 
 5549      5F456E61 
 5549      626C6552 
 5550              	.LASF71:
 5551 09e6 43617053 		.ascii	"CapSense_CSD_SetFingerHysteresis\000"
 5551      656E7365 
 5551      5F435344 
 5551      5F536574 
 5551      46696E67 
 5552              	.LASF78:
 5553 0a07 66696E67 		.ascii	"fingerThreshold\000"
 5553      65725468 
 5553      72657368 
 5553      6F6C6400 
 5554              	.LASF21:
 5555 0a17 63686172 		.ascii	"chargeDivTbl\000"
 5555      67654469 
 5555      7654626C 
 5555      00
 5556              	.LASF120:
 5557 0a24 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 5557      656E7365 
 5557      5F435344 
 5557      5F776964 
 5557      6765744E 
 5558              	.LASF1:
 5559 0a3e 756E7369 		.ascii	"unsigned char\000"
 5559      676E6564 
 5559      20636861 
 5559      7200
 5560              	.LASF77:
 5561 0a4c 6465626F 		.ascii	"debounceIndex\000"
 5561      756E6365 
 5561      496E6465 
 5561      7800
 5562              	.LASF102:
 5563 0a5a 43617053 		.ascii	"CapSense_CSD_GetCentroidPos\000"
 5563      656E7365 
 5563      5F435344 
 5563      5F476574 
 5563      43656E74 
 5564              	.LASF41:
 5565 0a76 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 5565      656E7365 
 5565      5F435344 
 5565      5F496E69 
 5565      7469616C 
 5566              	.LASF86:
 5567 0a9c 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 5567      656E7365 
 5567      5F435344 
 5567      5F456E61 
 5567      626C6557 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 156


 5568              	.LASF20:
 5569 0ab6 73656E73 		.ascii	"sensetivityTbl\000"
 5569      65746976 
 5569      69747954 
 5569      626C00
 5570              	.LASF84:
 5571 0ac5 73746174 		.ascii	"state\000"
 5571      6500
 5572              	.LASF106:
 5573 0acb 43617053 		.ascii	"CapSense_CSD_GetRadialCentroidPos\000"
 5573      656E7365 
 5573      5F435344 
 5573      5F476574 
 5573      52616469 
 5574              	.LASF22:
 5575 0aed 6D6F6444 		.ascii	"modDivTbl\000"
 5575      69765462 
 5575      6C00
 5576              	.LASF0:
 5577 0af7 7369676E 		.ascii	"signed char\000"
 5577      65642063 
 5577      68617200 
 5578              	.LASF3:
 5579 0b03 73686F72 		.ascii	"short unsigned int\000"
 5579      7420756E 
 5579      7369676E 
 5579      65642069 
 5579      6E7400
 5580              	.LASF123:
 5581 0b16 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 5581      656E7365 
 5581      5F435344 
 5581      5F73656E 
 5581      736F7253 
 5582              	.LASF31:
 5583 0b30 70747253 		.ascii	"ptrSetBitValue\000"
 5583      65744269 
 5583      7456616C 
 5583      756500
 5584              	.LASF116:
 5585 0b3f 43617053 		.ascii	"CapSense_CSD_posFiltersMask\000"
 5585      656E7365 
 5585      5F435344 
 5585      5F706F73 
 5585      46696C74 
 5586              	.LASF43:
 5587 0b5b 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 5587      656E7365 
 5587      5F435344 
 5587      5F496E69 
 5587      7469616C 
 5588              	.LASF49:
 5589 0b7f 74656D70 		.ascii	"tempRaw\000"
 5589      52617700 
 5590              	.LASF9:
 5591 0b87 75696E74 		.ascii	"uint8\000"
 5591      3800
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccO5EnDT.s 			page 157


 5592              	.LASF15:
 5593 0b8d 646F7562 		.ascii	"double\000"
 5593      6C6500
 5594              	.LASF88:
 5595 0b94 43617053 		.ascii	"CapSense_CSD_FindMaximum\000"
 5595      656E7365 
 5595      5F435344 
 5595      5F46696E 
 5595      644D6178 
 5596              	.LASF98:
 5597 0bad 43617053 		.ascii	"CapSense_CSD_centroid\000"
 5597      656E7365 
 5597      5F435344 
 5597      5F63656E 
 5597      74726F69 
 5598              	.LASF99:
 5599 0bc3 706F7369 		.ascii	"position\000"
 5599      74696F6E 
 5599      00
 5600              	.LASF94:
 5601 0bcc 43617053 		.ascii	"CapSense_CSD_CalcCentroid\000"
 5601      656E7365 
 5601      5F435344 
 5601      5F43616C 
 5601      6343656E 
 5602              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
