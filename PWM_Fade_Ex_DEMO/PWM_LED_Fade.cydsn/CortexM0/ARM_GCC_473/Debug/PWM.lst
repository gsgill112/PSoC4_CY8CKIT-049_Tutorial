ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_initVar
  18              		.bss
  19              		.type	PWM_initVar, %object
  20              		.size	PWM_initVar, 1
  21              	PWM_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_Init, %function
  29              	PWM_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/PWM.c **** 
  22:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** 
  25:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 2


  27:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/PWM.c **** *
  29:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  30:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  31:.\Generated_Source\PSoC4/PWM.c **** *
  32:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  33:.\Generated_Source\PSoC4/PWM.c **** *  None
  34:.\Generated_Source\PSoC4/PWM.c **** *
  35:.\Generated_Source\PSoC4/PWM.c **** * Return:
  36:.\Generated_Source\PSoC4/PWM.c **** *  None
  37:.\Generated_Source\PSoC4/PWM.c **** *
  38:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  40:.\Generated_Source\PSoC4/PWM.c **** {
  32              		.loc 1 40 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 00AF     		add	r7, sp, #0
  40              	.LCFI1:
  41              		.cfi_def_cfa_register 7
  41:.\Generated_Source\PSoC4/PWM.c **** 
  42:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  44:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  45:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_ENCODING_MODES     << PWM_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_CONFIG                  << PWM_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  48:.\Generated_Source\PSoC4/PWM.c **** 
  49:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  50:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  42              		.loc 1 50 0
  43 0004 0E4B     		ldr	r3, .L2
  44 0006 8022     		mov	r2, #128
  45 0008 D204     		lsl	r2, r2, #19
  46 000a 1A60     		str	r2, [r3]
  51:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_STOP_EVENT          << PWM_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_INVERT          << PWM_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_N_INVERT        << PWM_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_MODE                << PWM_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/PWM.c **** 
  56:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  57:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_RUN_MODE         << PWM_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/PWM.c **** 
  60:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/PWM.c ****         #else
  62:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  47              		.loc 1 62 0
  48 000c 0C4B     		ldr	r3, .L2
  49 000e 0C4A     		ldr	r2, .L2
  50 0010 1268     		ldr	r2, [r2]
  51 0012 1A60     		str	r2, [r3]
  63:.\Generated_Source\PSoC4/PWM.c ****             (((uint32)(PWM_PWM_ALIGN           << PWM_UPDOWN_SHIFT))          |
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 3


  64:.\Generated_Source\PSoC4/PWM.c ****              ((uint32)(PWM_PWM_KILL_EVENT      << PWM_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
  66:.\Generated_Source\PSoC4/PWM.c **** 
  67:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
  68:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_DEAD_TIME_CYCLE  << PWM_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
  73:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  52              		.loc 1 73 0
  53 0014 0A4B     		ldr	r3, .L2
  54 0016 0A4A     		ldr	r2, .L2
  55 0018 1268     		ldr	r2, [r2]
  56 001a 1A60     		str	r2, [r3]
  74:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)PWM_PWM_PRESCALER         << PWM_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
  76:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  79:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  80:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_PRESCALER            << PWM_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNTER_MODE         << PWM_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RUN_MODE             << PWM_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COMP_CAP_MODE        << PWM_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  85:.\Generated_Source\PSoC4/PWM.c **** 
  86:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  88:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_PHIA_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_INDEX_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_STOP_SIGNAL_MODE   << PWM_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_PHIB_SIGNAL_MODE   << PWM_START_SHIFT)));
  93:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  94:.\Generated_Source\PSoC4/PWM.c **** 
  95:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  96:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  57              		.loc 1 96 0
  58 001c 094B     		ldr	r3, .L2+4
  59 001e 0C22     		mov	r2, #12
  60 0020 1A60     		str	r2, [r3]
  97:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_SWITCH_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_COUNT_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_RELOAD_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_STOP_SIGNAL_MODE    << PWM_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_START_SIGNAL_MODE   << PWM_START_SHIFT)));
 102:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 103:.\Generated_Source\PSoC4/PWM.c **** 
 104:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 105:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_CAPTURE_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNT_SIGNAL_MODE    << PWM_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RELOAD_SIGNAL_MODE   << PWM_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_STOP_SIGNAL_MODE     << PWM_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_START_SIGNAL_MODE    << PWM_START_SHIFT)));
 111:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 4


 112:.\Generated_Source\PSoC4/PWM.c **** 
 113:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 115:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 117:.\Generated_Source\PSoC4/PWM.c **** 
 118:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
  61              		.loc 1 119 0
  62 0022 0120     		mov	r0, #1
  63 0024 FFF7FEFF 		bl	PWM_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 121:.\Generated_Source\PSoC4/PWM.c **** 
 122:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 123:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 125:.\Generated_Source\PSoC4/PWM.c **** 
 126:.\Generated_Source\PSoC4/PWM.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 128:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/PWM.c **** 
 130:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE );
 132:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/PWM.c **** 
 134:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
 136:.\Generated_Source\PSoC4/PWM.c **** 
 137:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 143:.\Generated_Source\PSoC4/PWM.c **** 
 144:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 145:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
  64              		.loc 1 145 0
  65 0028 074B     		ldr	r3, .L2+8
  66 002a 181C     		mov	r0, r3
  67 002c FFF7FEFF 		bl	PWM_WritePeriod
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
  68              		.loc 1 146 0
  69 0030 0020     		mov	r0, #0
  70 0032 FFF7FEFF 		bl	PWM_WriteCompare
 147:.\Generated_Source\PSoC4/PWM.c **** 
 148:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 152:.\Generated_Source\PSoC4/PWM.c **** 
 153:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/PWM.c **** 
 158:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 5


 159:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 160:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/PWM.c ****         #else
 165:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
  71              		.loc 1 166 0
  72 0036 054B     		ldr	r3, .L2+12
  73 0038 3122     		mov	r2, #49
  74 003a 1A60     		str	r2, [r3]
 167:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/PWM.c **** 
 169:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 171:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 172:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/PWM.c **** 
 174:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 177:.\Generated_Source\PSoC4/PWM.c **** 
 178:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 182:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 183:.\Generated_Source\PSoC4/PWM.c **** }
  75              		.loc 1 183 0
  76 003c BD46     		mov	sp, r7
  77              		@ sp needed for prologue
  78 003e 80BD     		pop	{r7, pc}
  79              	.L3:
  80              		.align	2
  81              	.L2:
  82 0040 00010540 		.word	1074069760
  83 0044 24010540 		.word	1074069796
  84 0048 18F60000 		.word	63000
  85 004c 28010540 		.word	1074069800
  86              		.cfi_endproc
  87              	.LFE0:
  88              		.size	PWM_Init, .-PWM_Init
  89              		.section	.text.PWM_Enable,"ax",%progbits
  90              		.align	2
  91              		.global	PWM_Enable
  92              		.code	16
  93              		.thumb_func
  94              		.type	PWM_Enable, %function
  95              	PWM_Enable:
  96              	.LFB1:
 184:.\Generated_Source\PSoC4/PWM.c **** 
 185:.\Generated_Source\PSoC4/PWM.c **** 
 186:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 188:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 6


 190:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 191:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 192:.\Generated_Source\PSoC4/PWM.c **** *
 193:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 194:.\Generated_Source\PSoC4/PWM.c **** *  None
 195:.\Generated_Source\PSoC4/PWM.c **** *
 196:.\Generated_Source\PSoC4/PWM.c **** * Return:
 197:.\Generated_Source\PSoC4/PWM.c **** *  None
 198:.\Generated_Source\PSoC4/PWM.c **** *
 199:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 201:.\Generated_Source\PSoC4/PWM.c **** {
  97              		.loc 1 201 0
  98              		.cfi_startproc
  99 0000 90B5     		push	{r4, r7, lr}
 100              	.LCFI2:
 101              		.cfi_def_cfa_offset 12
 102              		.cfi_offset 4, -12
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
 105 0002 83B0     		sub	sp, sp, #12
 106              	.LCFI3:
 107              		.cfi_def_cfa_offset 24
 108 0004 00AF     		add	r7, sp, #0
 109              	.LCFI4:
 110              		.cfi_def_cfa_register 7
 202:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 203:.\Generated_Source\PSoC4/PWM.c **** 
 204:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 111              		.loc 1 204 0
 112 0006 FC1D     		add	r4, r7, #7
 113 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 114 000c 031C     		mov	r3, r0
 115 000e 2370     		strb	r3, [r4]
 205:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 116              		.loc 1 205 0
 117 0010 084B     		ldr	r3, .L5
 118 0012 084A     		ldr	r2, .L5
 119 0014 1268     		ldr	r2, [r2]
 120 0016 0121     		mov	r1, #1
 121 0018 0A43     		orr	r2, r1
 122 001a 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 123              		.loc 1 206 0
 124 001c FB1D     		add	r3, r7, #7
 125 001e 1B78     		ldrb	r3, [r3]
 126 0020 181C     		mov	r0, r3
 127 0022 FFF7FEFF 		bl	CyExitCriticalSection
 207:.\Generated_Source\PSoC4/PWM.c **** 
 208:.\Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 210:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 128              		.loc 1 211 0
 129 0026 0120     		mov	r0, #1
 130 0028 1821     		mov	r1, #24
 131 002a FFF7FEFF 		bl	PWM_TriggerCommand
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 7


 212:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 214:.\Generated_Source\PSoC4/PWM.c **** 
 215:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 216:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 218:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 220:.\Generated_Source\PSoC4/PWM.c **** }
 132              		.loc 1 220 0
 133 002e BD46     		mov	sp, r7
 134 0030 03B0     		add	sp, sp, #12
 135              		@ sp needed for prologue
 136 0032 90BD     		pop	{r4, r7, pc}
 137              	.L6:
 138              		.align	2
 139              	.L5:
 140 0034 00000540 		.word	1074069504
 141              		.cfi_endproc
 142              	.LFE1:
 143              		.size	PWM_Enable, .-PWM_Enable
 144              		.section	.text.PWM_Start,"ax",%progbits
 145              		.align	2
 146              		.global	PWM_Start
 147              		.code	16
 148              		.thumb_func
 149              		.type	PWM_Start, %function
 150              	PWM_Start:
 151              	.LFB2:
 221:.\Generated_Source\PSoC4/PWM.c **** 
 222:.\Generated_Source\PSoC4/PWM.c **** 
 223:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 225:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/PWM.c **** *
 227:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 228:.\Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 229:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 230:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/PWM.c **** *
 233:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 234:.\Generated_Source\PSoC4/PWM.c **** *  None
 235:.\Generated_Source\PSoC4/PWM.c **** *
 236:.\Generated_Source\PSoC4/PWM.c **** * Return:
 237:.\Generated_Source\PSoC4/PWM.c **** *  None
 238:.\Generated_Source\PSoC4/PWM.c **** *
 239:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 240:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 241:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 242:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 243:.\Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 245:.\Generated_Source\PSoC4/PWM.c **** *
 246:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 248:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 8


 152              		.loc 1 248 0
 153              		.cfi_startproc
 154 0000 80B5     		push	{r7, lr}
 155              	.LCFI5:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 7, -8
 158              		.cfi_offset 14, -4
 159 0002 00AF     		add	r7, sp, #0
 160              	.LCFI6:
 161              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 162              		.loc 1 249 0
 163 0004 064B     		ldr	r3, .L9
 164 0006 1B78     		ldrb	r3, [r3]
 165 0008 002B     		cmp	r3, #0
 166 000a 04D1     		bne	.L8
 250:.\Generated_Source\PSoC4/PWM.c ****     {
 251:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 167              		.loc 1 251 0
 168 000c FFF7FEFF 		bl	PWM_Init
 252:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 169              		.loc 1 252 0
 170 0010 034B     		ldr	r3, .L9
 171 0012 0122     		mov	r2, #1
 172 0014 1A70     		strb	r2, [r3]
 173              	.L8:
 253:.\Generated_Source\PSoC4/PWM.c ****     }
 254:.\Generated_Source\PSoC4/PWM.c **** 
 255:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 174              		.loc 1 255 0
 175 0016 FFF7FEFF 		bl	PWM_Enable
 256:.\Generated_Source\PSoC4/PWM.c **** }
 176              		.loc 1 256 0
 177 001a BD46     		mov	sp, r7
 178              		@ sp needed for prologue
 179 001c 80BD     		pop	{r7, pc}
 180              	.L10:
 181 001e C046     		.align	2
 182              	.L9:
 183 0020 00000000 		.word	PWM_initVar
 184              		.cfi_endproc
 185              	.LFE2:
 186              		.size	PWM_Start, .-PWM_Start
 187              		.section	.text.PWM_Stop,"ax",%progbits
 188              		.align	2
 189              		.global	PWM_Stop
 190              		.code	16
 191              		.thumb_func
 192              		.type	PWM_Stop, %function
 193              	PWM_Stop:
 194              	.LFB3:
 257:.\Generated_Source\PSoC4/PWM.c **** 
 258:.\Generated_Source\PSoC4/PWM.c **** 
 259:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 261:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 9


 263:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 264:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 267:.\Generated_Source\PSoC4/PWM.c **** *  None
 268:.\Generated_Source\PSoC4/PWM.c **** *
 269:.\Generated_Source\PSoC4/PWM.c **** * Return:
 270:.\Generated_Source\PSoC4/PWM.c **** *  None
 271:.\Generated_Source\PSoC4/PWM.c **** *
 272:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 274:.\Generated_Source\PSoC4/PWM.c **** {
 195              		.loc 1 274 0
 196              		.cfi_startproc
 197 0000 90B5     		push	{r4, r7, lr}
 198              	.LCFI7:
 199              		.cfi_def_cfa_offset 12
 200              		.cfi_offset 4, -12
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 83B0     		sub	sp, sp, #12
 204              	.LCFI8:
 205              		.cfi_def_cfa_offset 24
 206 0004 00AF     		add	r7, sp, #0
 207              	.LCFI9:
 208              		.cfi_def_cfa_register 7
 275:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/PWM.c **** 
 277:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 209              		.loc 1 277 0
 210 0006 FC1D     		add	r4, r7, #7
 211 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 212 000c 031C     		mov	r3, r0
 213 000e 2370     		strb	r3, [r4]
 278:.\Generated_Source\PSoC4/PWM.c **** 
 279:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 214              		.loc 1 279 0
 215 0010 064B     		ldr	r3, .L12
 216 0012 064A     		ldr	r2, .L12
 217 0014 1268     		ldr	r2, [r2]
 218 0016 0121     		mov	r1, #1
 219 0018 8A43     		bic	r2, r1
 220 001a 1A60     		str	r2, [r3]
 280:.\Generated_Source\PSoC4/PWM.c **** 
 281:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 221              		.loc 1 281 0
 222 001c FB1D     		add	r3, r7, #7
 223 001e 1B78     		ldrb	r3, [r3]
 224 0020 181C     		mov	r0, r3
 225 0022 FFF7FEFF 		bl	CyExitCriticalSection
 282:.\Generated_Source\PSoC4/PWM.c **** }
 226              		.loc 1 282 0
 227 0026 BD46     		mov	sp, r7
 228 0028 03B0     		add	sp, sp, #12
 229              		@ sp needed for prologue
 230 002a 90BD     		pop	{r4, r7, pc}
 231              	.L13:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 10


 232              		.align	2
 233              	.L12:
 234 002c 00000540 		.word	1074069504
 235              		.cfi_endproc
 236              	.LFE3:
 237              		.size	PWM_Stop, .-PWM_Stop
 238              		.section	.text.PWM_SetMode,"ax",%progbits
 239              		.align	2
 240              		.global	PWM_SetMode
 241              		.code	16
 242              		.thumb_func
 243              		.type	PWM_SetMode, %function
 244              	PWM_SetMode:
 245              	.LFB4:
 283:.\Generated_Source\PSoC4/PWM.c **** 
 284:.\Generated_Source\PSoC4/PWM.c **** 
 285:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 287:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/PWM.c **** *
 289:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 290:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 291:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 292:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/PWM.c **** *
 294:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 295:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 296:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 297:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 298:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 299:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 305:.\Generated_Source\PSoC4/PWM.c **** *
 306:.\Generated_Source\PSoC4/PWM.c **** * Return:
 307:.\Generated_Source\PSoC4/PWM.c **** *  None
 308:.\Generated_Source\PSoC4/PWM.c **** *
 309:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/PWM.c **** {
 246              		.loc 1 311 0
 247              		.cfi_startproc
 248 0000 90B5     		push	{r4, r7, lr}
 249              	.LCFI10:
 250              		.cfi_def_cfa_offset 12
 251              		.cfi_offset 4, -12
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 85B0     		sub	sp, sp, #20
 255              	.LCFI11:
 256              		.cfi_def_cfa_offset 32
 257 0004 00AF     		add	r7, sp, #0
 258              	.LCFI12:
 259              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 11


 260 0006 7860     		str	r0, [r7, #4]
 312:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 313:.\Generated_Source\PSoC4/PWM.c **** 
 314:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 261              		.loc 1 314 0
 262 0008 3C1C     		mov	r4, r7
 263 000a 0F34     		add	r4, r4, #15
 264 000c FFF7FEFF 		bl	CyEnterCriticalSection
 265 0010 031C     		mov	r3, r0
 266 0012 2370     		strb	r3, [r4]
 315:.\Generated_Source\PSoC4/PWM.c **** 
 316:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 267              		.loc 1 316 0
 268 0014 0A4B     		ldr	r3, .L15
 269 0016 0A4A     		ldr	r2, .L15
 270 0018 1168     		ldr	r1, [r2]
 271 001a 0A4A     		ldr	r2, .L15+4
 272 001c 0A40     		and	r2, r1
 273 001e 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 274              		.loc 1 317 0
 275 0020 074B     		ldr	r3, .L15
 276 0022 074A     		ldr	r2, .L15
 277 0024 1168     		ldr	r1, [r2]
 278 0026 7A68     		ldr	r2, [r7, #4]
 279 0028 0A43     		orr	r2, r1
 280 002a 1A60     		str	r2, [r3]
 318:.\Generated_Source\PSoC4/PWM.c **** 
 319:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 281              		.loc 1 319 0
 282 002c 3B1C     		mov	r3, r7
 283 002e 0F33     		add	r3, r3, #15
 284 0030 1B78     		ldrb	r3, [r3]
 285 0032 181C     		mov	r0, r3
 286 0034 FFF7FEFF 		bl	CyExitCriticalSection
 320:.\Generated_Source\PSoC4/PWM.c **** }
 287              		.loc 1 320 0
 288 0038 BD46     		mov	sp, r7
 289 003a 05B0     		add	sp, sp, #20
 290              		@ sp needed for prologue
 291 003c 90BD     		pop	{r4, r7, pc}
 292              	.L16:
 293 003e C046     		.align	2
 294              	.L15:
 295 0040 00010540 		.word	1074069760
 296 0044 FFFFFFF8 		.word	-117440513
 297              		.cfi_endproc
 298              	.LFE4:
 299              		.size	PWM_SetMode, .-PWM_SetMode
 300              		.section	.text.PWM_SetQDMode,"ax",%progbits
 301              		.align	2
 302              		.global	PWM_SetQDMode
 303              		.code	16
 304              		.thumb_func
 305              		.type	PWM_SetQDMode, %function
 306              	PWM_SetQDMode:
 307              	.LFB5:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 12


 321:.\Generated_Source\PSoC4/PWM.c **** 
 322:.\Generated_Source\PSoC4/PWM.c **** 
 323:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 325:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/PWM.c **** *
 327:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 328:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/PWM.c **** *
 331:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 332:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 334:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/PWM.c **** *
 339:.\Generated_Source\PSoC4/PWM.c **** * Return:
 340:.\Generated_Source\PSoC4/PWM.c **** *  None
 341:.\Generated_Source\PSoC4/PWM.c **** *
 342:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/PWM.c **** {
 308              		.loc 1 344 0
 309              		.cfi_startproc
 310 0000 90B5     		push	{r4, r7, lr}
 311              	.LCFI13:
 312              		.cfi_def_cfa_offset 12
 313              		.cfi_offset 4, -12
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 85B0     		sub	sp, sp, #20
 317              	.LCFI14:
 318              		.cfi_def_cfa_offset 32
 319 0004 00AF     		add	r7, sp, #0
 320              	.LCFI15:
 321              		.cfi_def_cfa_register 7
 322 0006 7860     		str	r0, [r7, #4]
 345:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/PWM.c **** 
 347:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 323              		.loc 1 347 0
 324 0008 3C1C     		mov	r4, r7
 325 000a 0F34     		add	r4, r4, #15
 326 000c FFF7FEFF 		bl	CyEnterCriticalSection
 327 0010 031C     		mov	r3, r0
 328 0012 2370     		strb	r3, [r4]
 348:.\Generated_Source\PSoC4/PWM.c **** 
 349:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 329              		.loc 1 349 0
 330 0014 0A4B     		ldr	r3, .L18
 331 0016 0A4A     		ldr	r2, .L18
 332 0018 1168     		ldr	r1, [r2]
 333 001a 0A4A     		ldr	r2, .L18+4
 334 001c 0A40     		and	r2, r1
 335 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 13


 350:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 336              		.loc 1 350 0
 337 0020 074B     		ldr	r3, .L18
 338 0022 074A     		ldr	r2, .L18
 339 0024 1168     		ldr	r1, [r2]
 340 0026 7A68     		ldr	r2, [r7, #4]
 341 0028 0A43     		orr	r2, r1
 342 002a 1A60     		str	r2, [r3]
 351:.\Generated_Source\PSoC4/PWM.c **** 
 352:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 343              		.loc 1 352 0
 344 002c 3B1C     		mov	r3, r7
 345 002e 0F33     		add	r3, r3, #15
 346 0030 1B78     		ldrb	r3, [r3]
 347 0032 181C     		mov	r0, r3
 348 0034 FFF7FEFF 		bl	CyExitCriticalSection
 353:.\Generated_Source\PSoC4/PWM.c **** }
 349              		.loc 1 353 0
 350 0038 BD46     		mov	sp, r7
 351 003a 05B0     		add	sp, sp, #20
 352              		@ sp needed for prologue
 353 003c 90BD     		pop	{r4, r7, pc}
 354              	.L19:
 355 003e C046     		.align	2
 356              	.L18:
 357 0040 00010540 		.word	1074069760
 358 0044 FFFF8FFF 		.word	-7340033
 359              		.cfi_endproc
 360              	.LFE5:
 361              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 362              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 363              		.align	2
 364              		.global	PWM_SetPrescaler
 365              		.code	16
 366              		.thumb_func
 367              		.type	PWM_SetPrescaler, %function
 368              	PWM_SetPrescaler:
 369              	.LFB6:
 354:.\Generated_Source\PSoC4/PWM.c **** 
 355:.\Generated_Source\PSoC4/PWM.c **** 
 356:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 358:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/PWM.c **** *
 360:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 361:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/PWM.c **** *
 364:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 365:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 366:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 367:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 371:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 14


 373:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 375:.\Generated_Source\PSoC4/PWM.c **** *
 376:.\Generated_Source\PSoC4/PWM.c **** * Return:
 377:.\Generated_Source\PSoC4/PWM.c **** *  None
 378:.\Generated_Source\PSoC4/PWM.c **** *
 379:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/PWM.c **** {
 370              		.loc 1 381 0
 371              		.cfi_startproc
 372 0000 90B5     		push	{r4, r7, lr}
 373              	.LCFI16:
 374              		.cfi_def_cfa_offset 12
 375              		.cfi_offset 4, -12
 376              		.cfi_offset 7, -8
 377              		.cfi_offset 14, -4
 378 0002 85B0     		sub	sp, sp, #20
 379              	.LCFI17:
 380              		.cfi_def_cfa_offset 32
 381 0004 00AF     		add	r7, sp, #0
 382              	.LCFI18:
 383              		.cfi_def_cfa_register 7
 384 0006 7860     		str	r0, [r7, #4]
 382:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/PWM.c **** 
 384:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 385              		.loc 1 384 0
 386 0008 3C1C     		mov	r4, r7
 387 000a 0F34     		add	r4, r4, #15
 388 000c FFF7FEFF 		bl	CyEnterCriticalSection
 389 0010 031C     		mov	r3, r0
 390 0012 2370     		strb	r3, [r4]
 385:.\Generated_Source\PSoC4/PWM.c **** 
 386:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 391              		.loc 1 386 0
 392 0014 0A4B     		ldr	r3, .L21
 393 0016 0A4A     		ldr	r2, .L21
 394 0018 1168     		ldr	r1, [r2]
 395 001a 0A4A     		ldr	r2, .L21+4
 396 001c 0A40     		and	r2, r1
 397 001e 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 398              		.loc 1 387 0
 399 0020 074B     		ldr	r3, .L21
 400 0022 074A     		ldr	r2, .L21
 401 0024 1168     		ldr	r1, [r2]
 402 0026 7A68     		ldr	r2, [r7, #4]
 403 0028 0A43     		orr	r2, r1
 404 002a 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/PWM.c **** 
 389:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 405              		.loc 1 389 0
 406 002c 3B1C     		mov	r3, r7
 407 002e 0F33     		add	r3, r3, #15
 408 0030 1B78     		ldrb	r3, [r3]
 409 0032 181C     		mov	r0, r3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 15


 410 0034 FFF7FEFF 		bl	CyExitCriticalSection
 390:.\Generated_Source\PSoC4/PWM.c **** }
 411              		.loc 1 390 0
 412 0038 BD46     		mov	sp, r7
 413 003a 05B0     		add	sp, sp, #20
 414              		@ sp needed for prologue
 415 003c 90BD     		pop	{r4, r7, pc}
 416              	.L22:
 417 003e C046     		.align	2
 418              	.L21:
 419 0040 00010540 		.word	1074069760
 420 0044 FF00FFFF 		.word	-65281
 421              		.cfi_endproc
 422              	.LFE6:
 423              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 424              		.section	.text.PWM_SetOneShot,"ax",%progbits
 425              		.align	2
 426              		.global	PWM_SetOneShot
 427              		.code	16
 428              		.thumb_func
 429              		.type	PWM_SetOneShot, %function
 430              	PWM_SetOneShot:
 431              	.LFB7:
 391:.\Generated_Source\PSoC4/PWM.c **** 
 392:.\Generated_Source\PSoC4/PWM.c **** 
 393:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 395:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/PWM.c **** *
 397:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 398:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 399:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 401:.\Generated_Source\PSoC4/PWM.c **** *
 402:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 403:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 405:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/PWM.c **** *
 408:.\Generated_Source\PSoC4/PWM.c **** * Return:
 409:.\Generated_Source\PSoC4/PWM.c **** *  None
 410:.\Generated_Source\PSoC4/PWM.c **** *
 411:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 413:.\Generated_Source\PSoC4/PWM.c **** {
 432              		.loc 1 413 0
 433              		.cfi_startproc
 434 0000 90B5     		push	{r4, r7, lr}
 435              	.LCFI19:
 436              		.cfi_def_cfa_offset 12
 437              		.cfi_offset 4, -12
 438              		.cfi_offset 7, -8
 439              		.cfi_offset 14, -4
 440 0002 85B0     		sub	sp, sp, #20
 441              	.LCFI20:
 442              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 16


 443 0004 00AF     		add	r7, sp, #0
 444              	.LCFI21:
 445              		.cfi_def_cfa_register 7
 446 0006 7860     		str	r0, [r7, #4]
 414:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/PWM.c **** 
 416:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 447              		.loc 1 416 0
 448 0008 3C1C     		mov	r4, r7
 449 000a 0F34     		add	r4, r4, #15
 450 000c FFF7FEFF 		bl	CyEnterCriticalSection
 451 0010 031C     		mov	r3, r0
 452 0012 2370     		strb	r3, [r4]
 417:.\Generated_Source\PSoC4/PWM.c **** 
 418:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 453              		.loc 1 418 0
 454 0014 0B4B     		ldr	r3, .L24
 455 0016 0B4A     		ldr	r2, .L24
 456 0018 1168     		ldr	r1, [r2]
 457 001a 0B4A     		ldr	r2, .L24+4
 458 001c 0A40     		and	r2, r1
 459 001e 1A60     		str	r2, [r3]
 419:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 460              		.loc 1 419 0
 461 0020 084B     		ldr	r3, .L24
 462 0022 084A     		ldr	r2, .L24
 463 0024 1168     		ldr	r1, [r2]
 464 0026 7868     		ldr	r0, [r7, #4]
 465 0028 0122     		mov	r2, #1
 466 002a 0240     		and	r2, r0
 467 002c 9204     		lsl	r2, r2, #18
 468 002e 0A43     		orr	r2, r1
 469 0030 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 421:.\Generated_Source\PSoC4/PWM.c **** 
 422:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 470              		.loc 1 422 0
 471 0032 3B1C     		mov	r3, r7
 472 0034 0F33     		add	r3, r3, #15
 473 0036 1B78     		ldrb	r3, [r3]
 474 0038 181C     		mov	r0, r3
 475 003a FFF7FEFF 		bl	CyExitCriticalSection
 423:.\Generated_Source\PSoC4/PWM.c **** }
 476              		.loc 1 423 0
 477 003e BD46     		mov	sp, r7
 478 0040 05B0     		add	sp, sp, #20
 479              		@ sp needed for prologue
 480 0042 90BD     		pop	{r4, r7, pc}
 481              	.L25:
 482              		.align	2
 483              	.L24:
 484 0044 00010540 		.word	1074069760
 485 0048 FFFFFBFF 		.word	-262145
 486              		.cfi_endproc
 487              	.LFE7:
 488              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 489              		.section	.text.PWM_SetPWMMode,"ax",%progbits
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 17


 490              		.align	2
 491              		.global	PWM_SetPWMMode
 492              		.code	16
 493              		.thumb_func
 494              		.type	PWM_SetPWMMode, %function
 495              	PWM_SetPWMMode:
 496              	.LFB8:
 424:.\Generated_Source\PSoC4/PWM.c **** 
 425:.\Generated_Source\PSoC4/PWM.c **** 
 426:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 428:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/PWM.c **** *
 430:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 431:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/PWM.c **** *  the mode.
 436:.\Generated_Source\PSoC4/PWM.c **** *
 437:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 438:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 441:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 450:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/PWM.c **** *
 462:.\Generated_Source\PSoC4/PWM.c **** * Return:
 463:.\Generated_Source\PSoC4/PWM.c **** *  None
 464:.\Generated_Source\PSoC4/PWM.c **** *
 465:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 467:.\Generated_Source\PSoC4/PWM.c **** {
 497              		.loc 1 467 0
 498              		.cfi_startproc
 499 0000 80B5     		push	{r7, lr}
 500              	.LCFI22:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 7, -8
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 18


 503              		.cfi_offset 14, -4
 504 0002 82B0     		sub	sp, sp, #8
 505              	.LCFI23:
 506              		.cfi_def_cfa_offset 16
 507 0004 00AF     		add	r7, sp, #0
 508              	.LCFI24:
 509              		.cfi_def_cfa_register 7
 510 0006 7860     		str	r0, [r7, #4]
 468:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 511              		.loc 1 468 0
 512 0008 034B     		ldr	r3, .L27
 513 000a 7968     		ldr	r1, [r7, #4]
 514 000c 3F22     		mov	r2, #63
 515 000e 0A40     		and	r2, r1
 516 0010 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/PWM.c **** }
 517              		.loc 1 469 0
 518 0012 BD46     		mov	sp, r7
 519 0014 02B0     		add	sp, sp, #8
 520              		@ sp needed for prologue
 521 0016 80BD     		pop	{r7, pc}
 522              	.L28:
 523              		.align	2
 524              	.L27:
 525 0018 28010540 		.word	1074069800
 526              		.cfi_endproc
 527              	.LFE8:
 528              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 529              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 530              		.align	2
 531              		.global	PWM_SetPWMSyncKill
 532              		.code	16
 533              		.thumb_func
 534              		.type	PWM_SetPWMSyncKill, %function
 535              	PWM_SetPWMSyncKill:
 536              	.LFB9:
 470:.\Generated_Source\PSoC4/PWM.c **** 
 471:.\Generated_Source\PSoC4/PWM.c **** 
 472:.\Generated_Source\PSoC4/PWM.c **** 
 473:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/PWM.c **** *
 477:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 478:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 479:.\Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/PWM.c **** *
 483:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 484:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 485:.\Generated_Source\PSoC4/PWM.c **** *
 486:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 489:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 19


 491:.\Generated_Source\PSoC4/PWM.c **** *
 492:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 493:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 495:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/PWM.c **** *
 498:.\Generated_Source\PSoC4/PWM.c **** * Return:
 499:.\Generated_Source\PSoC4/PWM.c **** *  None
 500:.\Generated_Source\PSoC4/PWM.c **** *
 501:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/PWM.c **** {
 537              		.loc 1 503 0
 538              		.cfi_startproc
 539 0000 90B5     		push	{r4, r7, lr}
 540              	.LCFI25:
 541              		.cfi_def_cfa_offset 12
 542              		.cfi_offset 4, -12
 543              		.cfi_offset 7, -8
 544              		.cfi_offset 14, -4
 545 0002 85B0     		sub	sp, sp, #20
 546              	.LCFI26:
 547              		.cfi_def_cfa_offset 32
 548 0004 00AF     		add	r7, sp, #0
 549              	.LCFI27:
 550              		.cfi_def_cfa_register 7
 551 0006 7860     		str	r0, [r7, #4]
 504:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/PWM.c **** 
 506:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 552              		.loc 1 506 0
 553 0008 3C1C     		mov	r4, r7
 554 000a 0F34     		add	r4, r4, #15
 555 000c FFF7FEFF 		bl	CyEnterCriticalSection
 556 0010 031C     		mov	r3, r0
 557 0012 2370     		strb	r3, [r4]
 507:.\Generated_Source\PSoC4/PWM.c **** 
 508:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 558              		.loc 1 508 0
 559 0014 0B4B     		ldr	r3, .L30
 560 0016 0B4A     		ldr	r2, .L30
 561 0018 1268     		ldr	r2, [r2]
 562 001a 0421     		mov	r1, #4
 563 001c 8A43     		bic	r2, r1
 564 001e 1A60     		str	r2, [r3]
 509:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 565              		.loc 1 509 0
 566 0020 084B     		ldr	r3, .L30
 567 0022 084A     		ldr	r2, .L30
 568 0024 1168     		ldr	r1, [r2]
 569 0026 7868     		ldr	r0, [r7, #4]
 570 0028 0122     		mov	r2, #1
 571 002a 0240     		and	r2, r0
 572 002c 9200     		lsl	r2, r2, #2
 573 002e 0A43     		orr	r2, r1
 574 0030 1A60     		str	r2, [r3]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 20


 510:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/PWM.c **** 
 512:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 575              		.loc 1 512 0
 576 0032 3B1C     		mov	r3, r7
 577 0034 0F33     		add	r3, r3, #15
 578 0036 1B78     		ldrb	r3, [r3]
 579 0038 181C     		mov	r0, r3
 580 003a FFF7FEFF 		bl	CyExitCriticalSection
 513:.\Generated_Source\PSoC4/PWM.c **** }
 581              		.loc 1 513 0
 582 003e BD46     		mov	sp, r7
 583 0040 05B0     		add	sp, sp, #20
 584              		@ sp needed for prologue
 585 0042 90BD     		pop	{r4, r7, pc}
 586              	.L31:
 587              		.align	2
 588              	.L30:
 589 0044 00010540 		.word	1074069760
 590              		.cfi_endproc
 591              	.LFE9:
 592              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 593              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 594              		.align	2
 595              		.global	PWM_SetPWMStopOnKill
 596              		.code	16
 597              		.thumb_func
 598              		.type	PWM_SetPWMStopOnKill, %function
 599              	PWM_SetPWMStopOnKill:
 600              	.LFB10:
 514:.\Generated_Source\PSoC4/PWM.c **** 
 515:.\Generated_Source\PSoC4/PWM.c **** 
 516:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/PWM.c **** *
 520:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 521:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 523:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/PWM.c **** *
 525:.\Generated_Source\PSoC4/PWM.c **** *
 526:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 527:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 529:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/PWM.c **** *
 532:.\Generated_Source\PSoC4/PWM.c **** * Return:
 533:.\Generated_Source\PSoC4/PWM.c **** *  None
 534:.\Generated_Source\PSoC4/PWM.c **** *
 535:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 536:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/PWM.c **** {
 601              		.loc 1 537 0
 602              		.cfi_startproc
 603 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 21


 604              	.LCFI28:
 605              		.cfi_def_cfa_offset 12
 606              		.cfi_offset 4, -12
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 85B0     		sub	sp, sp, #20
 610              	.LCFI29:
 611              		.cfi_def_cfa_offset 32
 612 0004 00AF     		add	r7, sp, #0
 613              	.LCFI30:
 614              		.cfi_def_cfa_register 7
 615 0006 7860     		str	r0, [r7, #4]
 538:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/PWM.c **** 
 540:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 616              		.loc 1 540 0
 617 0008 3C1C     		mov	r4, r7
 618 000a 0F34     		add	r4, r4, #15
 619 000c FFF7FEFF 		bl	CyEnterCriticalSection
 620 0010 031C     		mov	r3, r0
 621 0012 2370     		strb	r3, [r4]
 541:.\Generated_Source\PSoC4/PWM.c **** 
 542:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 622              		.loc 1 542 0
 623 0014 0B4B     		ldr	r3, .L33
 624 0016 0B4A     		ldr	r2, .L33
 625 0018 1268     		ldr	r2, [r2]
 626 001a 0821     		mov	r1, #8
 627 001c 8A43     		bic	r2, r1
 628 001e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 629              		.loc 1 543 0
 630 0020 084B     		ldr	r3, .L33
 631 0022 084A     		ldr	r2, .L33
 632 0024 1168     		ldr	r1, [r2]
 633 0026 7868     		ldr	r0, [r7, #4]
 634 0028 0122     		mov	r2, #1
 635 002a 0240     		and	r2, r0
 636 002c D200     		lsl	r2, r2, #3
 637 002e 0A43     		orr	r2, r1
 638 0030 1A60     		str	r2, [r3]
 544:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 545:.\Generated_Source\PSoC4/PWM.c **** 
 546:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 639              		.loc 1 546 0
 640 0032 3B1C     		mov	r3, r7
 641 0034 0F33     		add	r3, r3, #15
 642 0036 1B78     		ldrb	r3, [r3]
 643 0038 181C     		mov	r0, r3
 644 003a FFF7FEFF 		bl	CyExitCriticalSection
 547:.\Generated_Source\PSoC4/PWM.c **** }
 645              		.loc 1 547 0
 646 003e BD46     		mov	sp, r7
 647 0040 05B0     		add	sp, sp, #20
 648              		@ sp needed for prologue
 649 0042 90BD     		pop	{r4, r7, pc}
 650              	.L34:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 22


 651              		.align	2
 652              	.L33:
 653 0044 00010540 		.word	1074069760
 654              		.cfi_endproc
 655              	.LFE10:
 656              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 657              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 658              		.align	2
 659              		.global	PWM_SetPWMDeadTime
 660              		.code	16
 661              		.thumb_func
 662              		.type	PWM_SetPWMDeadTime, %function
 663              	PWM_SetPWMDeadTime:
 664              	.LFB11:
 548:.\Generated_Source\PSoC4/PWM.c **** 
 549:.\Generated_Source\PSoC4/PWM.c **** 
 550:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/PWM.c **** *
 554:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 555:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/PWM.c **** 
 560:.\Generated_Source\PSoC4/PWM.c **** *
 561:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 562:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/PWM.c **** *
 565:.\Generated_Source\PSoC4/PWM.c **** * Return:
 566:.\Generated_Source\PSoC4/PWM.c **** *  None
 567:.\Generated_Source\PSoC4/PWM.c **** *
 568:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/PWM.c **** {
 665              		.loc 1 570 0
 666              		.cfi_startproc
 667 0000 90B5     		push	{r4, r7, lr}
 668              	.LCFI31:
 669              		.cfi_def_cfa_offset 12
 670              		.cfi_offset 4, -12
 671              		.cfi_offset 7, -8
 672              		.cfi_offset 14, -4
 673 0002 85B0     		sub	sp, sp, #20
 674              	.LCFI32:
 675              		.cfi_def_cfa_offset 32
 676 0004 00AF     		add	r7, sp, #0
 677              	.LCFI33:
 678              		.cfi_def_cfa_register 7
 679 0006 7860     		str	r0, [r7, #4]
 571:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/PWM.c **** 
 573:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 680              		.loc 1 573 0
 681 0008 3C1C     		mov	r4, r7
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 23


 682 000a 0F34     		add	r4, r4, #15
 683 000c FFF7FEFF 		bl	CyEnterCriticalSection
 684 0010 031C     		mov	r3, r0
 685 0012 2370     		strb	r3, [r4]
 574:.\Generated_Source\PSoC4/PWM.c **** 
 575:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 686              		.loc 1 575 0
 687 0014 0B4B     		ldr	r3, .L36
 688 0016 0B4A     		ldr	r2, .L36
 689 0018 1168     		ldr	r1, [r2]
 690 001a 0B4A     		ldr	r2, .L36+4
 691 001c 0A40     		and	r2, r1
 692 001e 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 693              		.loc 1 576 0
 694 0020 084B     		ldr	r3, .L36
 695 0022 084A     		ldr	r2, .L36
 696 0024 1168     		ldr	r1, [r2]
 697 0026 7A68     		ldr	r2, [r7, #4]
 698 0028 1202     		lsl	r2, r2, #8
 699 002a 1204     		lsl	r2, r2, #16
 700 002c 120C     		lsr	r2, r2, #16
 701 002e 0A43     		orr	r2, r1
 702 0030 1A60     		str	r2, [r3]
 577:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/PWM.c **** 
 579:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 703              		.loc 1 579 0
 704 0032 3B1C     		mov	r3, r7
 705 0034 0F33     		add	r3, r3, #15
 706 0036 1B78     		ldrb	r3, [r3]
 707 0038 181C     		mov	r0, r3
 708 003a FFF7FEFF 		bl	CyExitCriticalSection
 580:.\Generated_Source\PSoC4/PWM.c **** }
 709              		.loc 1 580 0
 710 003e BD46     		mov	sp, r7
 711 0040 05B0     		add	sp, sp, #20
 712              		@ sp needed for prologue
 713 0042 90BD     		pop	{r4, r7, pc}
 714              	.L37:
 715              		.align	2
 716              	.L36:
 717 0044 00010540 		.word	1074069760
 718 0048 FF00FFFF 		.word	-65281
 719              		.cfi_endproc
 720              	.LFE11:
 721              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 722              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 723              		.align	2
 724              		.global	PWM_SetPWMInvert
 725              		.code	16
 726              		.thumb_func
 727              		.type	PWM_SetPWMInvert, %function
 728              	PWM_SetPWMInvert:
 729              	.LFB12:
 581:.\Generated_Source\PSoC4/PWM.c **** 
 582:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 24


 583:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 584:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 585:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 586:.\Generated_Source\PSoC4/PWM.c **** *
 587:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 588:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/PWM.c **** *
 592:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 593:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 595:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/PWM.c **** *
 598:.\Generated_Source\PSoC4/PWM.c **** * Return:
 599:.\Generated_Source\PSoC4/PWM.c **** *  None
 600:.\Generated_Source\PSoC4/PWM.c **** *
 601:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/PWM.c **** {
 730              		.loc 1 603 0
 731              		.cfi_startproc
 732 0000 90B5     		push	{r4, r7, lr}
 733              	.LCFI34:
 734              		.cfi_def_cfa_offset 12
 735              		.cfi_offset 4, -12
 736              		.cfi_offset 7, -8
 737              		.cfi_offset 14, -4
 738 0002 85B0     		sub	sp, sp, #20
 739              	.LCFI35:
 740              		.cfi_def_cfa_offset 32
 741 0004 00AF     		add	r7, sp, #0
 742              	.LCFI36:
 743              		.cfi_def_cfa_register 7
 744 0006 7860     		str	r0, [r7, #4]
 604:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/PWM.c **** 
 606:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 745              		.loc 1 606 0
 746 0008 3C1C     		mov	r4, r7
 747 000a 0F34     		add	r4, r4, #15
 748 000c FFF7FEFF 		bl	CyEnterCriticalSection
 749 0010 031C     		mov	r3, r0
 750 0012 2370     		strb	r3, [r4]
 607:.\Generated_Source\PSoC4/PWM.c **** 
 608:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 751              		.loc 1 608 0
 752 0014 0A4B     		ldr	r3, .L39
 753 0016 0A4A     		ldr	r2, .L39
 754 0018 1168     		ldr	r1, [r2]
 755 001a 0A4A     		ldr	r2, .L39+4
 756 001c 0A40     		and	r2, r1
 757 001e 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 758              		.loc 1 609 0
 759 0020 074B     		ldr	r3, .L39
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 25


 760 0022 074A     		ldr	r2, .L39
 761 0024 1168     		ldr	r1, [r2]
 762 0026 7A68     		ldr	r2, [r7, #4]
 763 0028 0A43     		orr	r2, r1
 764 002a 1A60     		str	r2, [r3]
 610:.\Generated_Source\PSoC4/PWM.c **** 
 611:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 765              		.loc 1 611 0
 766 002c 3B1C     		mov	r3, r7
 767 002e 0F33     		add	r3, r3, #15
 768 0030 1B78     		ldrb	r3, [r3]
 769 0032 181C     		mov	r0, r3
 770 0034 FFF7FEFF 		bl	CyExitCriticalSection
 612:.\Generated_Source\PSoC4/PWM.c **** }
 771              		.loc 1 612 0
 772 0038 BD46     		mov	sp, r7
 773 003a 05B0     		add	sp, sp, #20
 774              		@ sp needed for prologue
 775 003c 90BD     		pop	{r4, r7, pc}
 776              	.L40:
 777 003e C046     		.align	2
 778              	.L39:
 779 0040 00010540 		.word	1074069760
 780 0044 FFFFCFFF 		.word	-3145729
 781              		.cfi_endproc
 782              	.LFE12:
 783              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 784              		.section	.text.PWM_WriteCounter,"ax",%progbits
 785              		.align	2
 786              		.global	PWM_WriteCounter
 787              		.code	16
 788              		.thumb_func
 789              		.type	PWM_WriteCounter, %function
 790              	PWM_WriteCounter:
 791              	.LFB13:
 613:.\Generated_Source\PSoC4/PWM.c **** 
 614:.\Generated_Source\PSoC4/PWM.c **** 
 615:.\Generated_Source\PSoC4/PWM.c **** 
 616:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 618:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/PWM.c **** *
 620:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 621:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 626:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/PWM.c **** *
 628:.\Generated_Source\PSoC4/PWM.c **** * Return:
 629:.\Generated_Source\PSoC4/PWM.c **** *  None
 630:.\Generated_Source\PSoC4/PWM.c **** *
 631:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 633:.\Generated_Source\PSoC4/PWM.c **** {
 792              		.loc 1 633 0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 26


 793              		.cfi_startproc
 794 0000 80B5     		push	{r7, lr}
 795              	.LCFI37:
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 82B0     		sub	sp, sp, #8
 800              	.LCFI38:
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              	.LCFI39:
 804              		.cfi_def_cfa_register 7
 805 0006 7860     		str	r0, [r7, #4]
 634:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 806              		.loc 1 634 0
 807 0008 034B     		ldr	r3, .L42
 808 000a 7A68     		ldr	r2, [r7, #4]
 809 000c 1204     		lsl	r2, r2, #16
 810 000e 120C     		lsr	r2, r2, #16
 811 0010 1A60     		str	r2, [r3]
 635:.\Generated_Source\PSoC4/PWM.c **** }
 812              		.loc 1 635 0
 813 0012 BD46     		mov	sp, r7
 814 0014 02B0     		add	sp, sp, #8
 815              		@ sp needed for prologue
 816 0016 80BD     		pop	{r7, pc}
 817              	.L43:
 818              		.align	2
 819              	.L42:
 820 0018 08010540 		.word	1074069768
 821              		.cfi_endproc
 822              	.LFE13:
 823              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 824              		.section	.text.PWM_ReadCounter,"ax",%progbits
 825              		.align	2
 826              		.global	PWM_ReadCounter
 827              		.code	16
 828              		.thumb_func
 829              		.type	PWM_ReadCounter, %function
 830              	PWM_ReadCounter:
 831              	.LFB14:
 636:.\Generated_Source\PSoC4/PWM.c **** 
 637:.\Generated_Source\PSoC4/PWM.c **** 
 638:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 640:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 641:.\Generated_Source\PSoC4/PWM.c **** *
 642:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 643:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/PWM.c **** *
 645:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 646:.\Generated_Source\PSoC4/PWM.c **** *  None
 647:.\Generated_Source\PSoC4/PWM.c **** *
 648:.\Generated_Source\PSoC4/PWM.c **** * Return:
 649:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 650:.\Generated_Source\PSoC4/PWM.c **** *
 651:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 27


 652:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 653:.\Generated_Source\PSoC4/PWM.c **** {
 832              		.loc 1 653 0
 833              		.cfi_startproc
 834 0000 80B5     		push	{r7, lr}
 835              	.LCFI40:
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 7, -8
 838              		.cfi_offset 14, -4
 839 0002 00AF     		add	r7, sp, #0
 840              	.LCFI41:
 841              		.cfi_def_cfa_register 7
 654:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 842              		.loc 1 654 0
 843 0004 034B     		ldr	r3, .L46
 844 0006 1B68     		ldr	r3, [r3]
 845 0008 1B04     		lsl	r3, r3, #16
 846 000a 1B0C     		lsr	r3, r3, #16
 655:.\Generated_Source\PSoC4/PWM.c **** }
 847              		.loc 1 655 0
 848 000c 181C     		mov	r0, r3
 849 000e BD46     		mov	sp, r7
 850              		@ sp needed for prologue
 851 0010 80BD     		pop	{r7, pc}
 852              	.L47:
 853 0012 C046     		.align	2
 854              	.L46:
 855 0014 08010540 		.word	1074069768
 856              		.cfi_endproc
 857              	.LFE14:
 858              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 859              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 860              		.align	2
 861              		.global	PWM_SetCounterMode
 862              		.code	16
 863              		.thumb_func
 864              		.type	PWM_SetCounterMode, %function
 865              	PWM_SetCounterMode:
 866              	.LFB15:
 656:.\Generated_Source\PSoC4/PWM.c **** 
 657:.\Generated_Source\PSoC4/PWM.c **** 
 658:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 660:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/PWM.c **** *
 662:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 663:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/PWM.c **** *
 666:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 667:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 669:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 670:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 672:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 28


 674:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 676:.\Generated_Source\PSoC4/PWM.c **** *
 677:.\Generated_Source\PSoC4/PWM.c **** * Return:
 678:.\Generated_Source\PSoC4/PWM.c **** *  None
 679:.\Generated_Source\PSoC4/PWM.c **** *
 680:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/PWM.c **** {
 867              		.loc 1 682 0
 868              		.cfi_startproc
 869 0000 90B5     		push	{r4, r7, lr}
 870              	.LCFI42:
 871              		.cfi_def_cfa_offset 12
 872              		.cfi_offset 4, -12
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 85B0     		sub	sp, sp, #20
 876              	.LCFI43:
 877              		.cfi_def_cfa_offset 32
 878 0004 00AF     		add	r7, sp, #0
 879              	.LCFI44:
 880              		.cfi_def_cfa_register 7
 881 0006 7860     		str	r0, [r7, #4]
 683:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/PWM.c **** 
 685:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 882              		.loc 1 685 0
 883 0008 3C1C     		mov	r4, r7
 884 000a 0F34     		add	r4, r4, #15
 885 000c FFF7FEFF 		bl	CyEnterCriticalSection
 886 0010 031C     		mov	r3, r0
 887 0012 2370     		strb	r3, [r4]
 686:.\Generated_Source\PSoC4/PWM.c **** 
 687:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 888              		.loc 1 687 0
 889 0014 0A4B     		ldr	r3, .L49
 890 0016 0A4A     		ldr	r2, .L49
 891 0018 1168     		ldr	r1, [r2]
 892 001a 0A4A     		ldr	r2, .L49+4
 893 001c 0A40     		and	r2, r1
 894 001e 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 895              		.loc 1 688 0
 896 0020 074B     		ldr	r3, .L49
 897 0022 074A     		ldr	r2, .L49
 898 0024 1168     		ldr	r1, [r2]
 899 0026 7A68     		ldr	r2, [r7, #4]
 900 0028 0A43     		orr	r2, r1
 901 002a 1A60     		str	r2, [r3]
 689:.\Generated_Source\PSoC4/PWM.c **** 
 690:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 902              		.loc 1 690 0
 903 002c 3B1C     		mov	r3, r7
 904 002e 0F33     		add	r3, r3, #15
 905 0030 1B78     		ldrb	r3, [r3]
 906 0032 181C     		mov	r0, r3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 29


 907 0034 FFF7FEFF 		bl	CyExitCriticalSection
 691:.\Generated_Source\PSoC4/PWM.c **** }
 908              		.loc 1 691 0
 909 0038 BD46     		mov	sp, r7
 910 003a 05B0     		add	sp, sp, #20
 911              		@ sp needed for prologue
 912 003c 90BD     		pop	{r4, r7, pc}
 913              	.L50:
 914 003e C046     		.align	2
 915              	.L49:
 916 0040 00010540 		.word	1074069760
 917 0044 FFFFFCFF 		.word	-196609
 918              		.cfi_endproc
 919              	.LFE15:
 920              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 921              		.section	.text.PWM_WritePeriod,"ax",%progbits
 922              		.align	2
 923              		.global	PWM_WritePeriod
 924              		.code	16
 925              		.thumb_func
 926              		.type	PWM_WritePeriod, %function
 927              	PWM_WritePeriod:
 928              	.LFB16:
 692:.\Generated_Source\PSoC4/PWM.c **** 
 693:.\Generated_Source\PSoC4/PWM.c **** 
 694:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 696:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/PWM.c **** *
 698:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 699:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 704:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/PWM.c **** *
 706:.\Generated_Source\PSoC4/PWM.c **** * Return:
 707:.\Generated_Source\PSoC4/PWM.c **** *  None
 708:.\Generated_Source\PSoC4/PWM.c **** *
 709:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/PWM.c **** {
 929              		.loc 1 711 0
 930              		.cfi_startproc
 931 0000 80B5     		push	{r7, lr}
 932              	.LCFI45:
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 82B0     		sub	sp, sp, #8
 937              	.LCFI46:
 938              		.cfi_def_cfa_offset 16
 939 0004 00AF     		add	r7, sp, #0
 940              	.LCFI47:
 941              		.cfi_def_cfa_register 7
 942 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 30


 712:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 943              		.loc 1 712 0
 944 0008 034B     		ldr	r3, .L52
 945 000a 7A68     		ldr	r2, [r7, #4]
 946 000c 1204     		lsl	r2, r2, #16
 947 000e 120C     		lsr	r2, r2, #16
 948 0010 1A60     		str	r2, [r3]
 713:.\Generated_Source\PSoC4/PWM.c **** }
 949              		.loc 1 713 0
 950 0012 BD46     		mov	sp, r7
 951 0014 02B0     		add	sp, sp, #8
 952              		@ sp needed for prologue
 953 0016 80BD     		pop	{r7, pc}
 954              	.L53:
 955              		.align	2
 956              	.L52:
 957 0018 14010540 		.word	1074069780
 958              		.cfi_endproc
 959              	.LFE16:
 960              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 961              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 962              		.align	2
 963              		.global	PWM_ReadPeriod
 964              		.code	16
 965              		.thumb_func
 966              		.type	PWM_ReadPeriod, %function
 967              	PWM_ReadPeriod:
 968              	.LFB17:
 714:.\Generated_Source\PSoC4/PWM.c **** 
 715:.\Generated_Source\PSoC4/PWM.c **** 
 716:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 718:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/PWM.c **** *
 720:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 721:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM.c **** *  None
 725:.\Generated_Source\PSoC4/PWM.c **** *
 726:.\Generated_Source\PSoC4/PWM.c **** * Return:
 727:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 728:.\Generated_Source\PSoC4/PWM.c **** *
 729:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/PWM.c **** {
 969              		.loc 1 731 0
 970              		.cfi_startproc
 971 0000 80B5     		push	{r7, lr}
 972              	.LCFI48:
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 7, -8
 975              		.cfi_offset 14, -4
 976 0002 00AF     		add	r7, sp, #0
 977              	.LCFI49:
 978              		.cfi_def_cfa_register 7
 732:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 31


 979              		.loc 1 732 0
 980 0004 034B     		ldr	r3, .L56
 981 0006 1B68     		ldr	r3, [r3]
 982 0008 1B04     		lsl	r3, r3, #16
 983 000a 1B0C     		lsr	r3, r3, #16
 733:.\Generated_Source\PSoC4/PWM.c **** }
 984              		.loc 1 733 0
 985 000c 181C     		mov	r0, r3
 986 000e BD46     		mov	sp, r7
 987              		@ sp needed for prologue
 988 0010 80BD     		pop	{r7, pc}
 989              	.L57:
 990 0012 C046     		.align	2
 991              	.L56:
 992 0014 14010540 		.word	1074069780
 993              		.cfi_endproc
 994              	.LFE17:
 995              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 996              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 997              		.align	2
 998              		.global	PWM_SetCompareSwap
 999              		.code	16
 1000              		.thumb_func
 1001              		.type	PWM_SetCompareSwap, %function
 1002              	PWM_SetCompareSwap:
 1003              	.LFB18:
 734:.\Generated_Source\PSoC4/PWM.c **** 
 735:.\Generated_Source\PSoC4/PWM.c **** 
 736:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 738:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/PWM.c **** *
 740:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 741:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/PWM.c **** *
 746:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 747:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 749:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/PWM.c **** *
 752:.\Generated_Source\PSoC4/PWM.c **** * Return:
 753:.\Generated_Source\PSoC4/PWM.c **** *  None
 754:.\Generated_Source\PSoC4/PWM.c **** *
 755:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/PWM.c **** {
 1004              		.loc 1 757 0
 1005              		.cfi_startproc
 1006 0000 90B5     		push	{r4, r7, lr}
 1007              	.LCFI50:
 1008              		.cfi_def_cfa_offset 12
 1009              		.cfi_offset 4, -12
 1010              		.cfi_offset 7, -8
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 32


 1011              		.cfi_offset 14, -4
 1012 0002 85B0     		sub	sp, sp, #20
 1013              	.LCFI51:
 1014              		.cfi_def_cfa_offset 32
 1015 0004 00AF     		add	r7, sp, #0
 1016              	.LCFI52:
 1017              		.cfi_def_cfa_register 7
 1018 0006 7860     		str	r0, [r7, #4]
 758:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/PWM.c **** 
 760:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1019              		.loc 1 760 0
 1020 0008 3C1C     		mov	r4, r7
 1021 000a 0F34     		add	r4, r4, #15
 1022 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1023 0010 031C     		mov	r3, r0
 1024 0012 2370     		strb	r3, [r4]
 761:.\Generated_Source\PSoC4/PWM.c **** 
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 1025              		.loc 1 762 0
 1026 0014 0B4B     		ldr	r3, .L59
 1027 0016 0B4A     		ldr	r2, .L59
 1028 0018 1268     		ldr	r2, [r2]
 1029 001a 0121     		mov	r1, #1
 1030 001c 8A43     		bic	r2, r1
 1031 001e 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 1032              		.loc 1 763 0
 1033 0020 084B     		ldr	r3, .L59
 1034 0022 084A     		ldr	r2, .L59
 1035 0024 1168     		ldr	r1, [r2]
 1036 0026 7868     		ldr	r0, [r7, #4]
 1037 0028 0122     		mov	r2, #1
 1038 002a 0240     		and	r2, r0
 1039 002c 0A43     		orr	r2, r1
 1040 002e 1A60     		str	r2, [r3]
 764:.\Generated_Source\PSoC4/PWM.c **** 
 765:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1041              		.loc 1 765 0
 1042 0030 3B1C     		mov	r3, r7
 1043 0032 0F33     		add	r3, r3, #15
 1044 0034 1B78     		ldrb	r3, [r3]
 1045 0036 181C     		mov	r0, r3
 1046 0038 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC4/PWM.c **** }
 1047              		.loc 1 766 0
 1048 003c BD46     		mov	sp, r7
 1049 003e 05B0     		add	sp, sp, #20
 1050              		@ sp needed for prologue
 1051 0040 90BD     		pop	{r4, r7, pc}
 1052              	.L60:
 1053 0042 C046     		.align	2
 1054              	.L59:
 1055 0044 00010540 		.word	1074069760
 1056              		.cfi_endproc
 1057              	.LFE18:
 1058              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 33


 1059              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 1060              		.align	2
 1061              		.global	PWM_WritePeriodBuf
 1062              		.code	16
 1063              		.thumb_func
 1064              		.type	PWM_WritePeriodBuf, %function
 1065              	PWM_WritePeriodBuf:
 1066              	.LFB19:
 767:.\Generated_Source\PSoC4/PWM.c **** 
 768:.\Generated_Source\PSoC4/PWM.c **** 
 769:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 771:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 774:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 777:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/PWM.c **** *
 779:.\Generated_Source\PSoC4/PWM.c **** * Return:
 780:.\Generated_Source\PSoC4/PWM.c **** *  None
 781:.\Generated_Source\PSoC4/PWM.c **** *
 782:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/PWM.c **** {
 1067              		.loc 1 784 0
 1068              		.cfi_startproc
 1069 0000 80B5     		push	{r7, lr}
 1070              	.LCFI53:
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 7, -8
 1073              		.cfi_offset 14, -4
 1074 0002 82B0     		sub	sp, sp, #8
 1075              	.LCFI54:
 1076              		.cfi_def_cfa_offset 16
 1077 0004 00AF     		add	r7, sp, #0
 1078              	.LCFI55:
 1079              		.cfi_def_cfa_register 7
 1080 0006 7860     		str	r0, [r7, #4]
 785:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 1081              		.loc 1 785 0
 1082 0008 034B     		ldr	r3, .L62
 1083 000a 7A68     		ldr	r2, [r7, #4]
 1084 000c 1204     		lsl	r2, r2, #16
 1085 000e 120C     		lsr	r2, r2, #16
 1086 0010 1A60     		str	r2, [r3]
 786:.\Generated_Source\PSoC4/PWM.c **** }
 1087              		.loc 1 786 0
 1088 0012 BD46     		mov	sp, r7
 1089 0014 02B0     		add	sp, sp, #8
 1090              		@ sp needed for prologue
 1091 0016 80BD     		pop	{r7, pc}
 1092              	.L63:
 1093              		.align	2
 1094              	.L62:
 1095 0018 18010540 		.word	1074069784
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 34


 1096              		.cfi_endproc
 1097              	.LFE19:
 1098              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 1099              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 1100              		.align	2
 1101              		.global	PWM_ReadPeriodBuf
 1102              		.code	16
 1103              		.thumb_func
 1104              		.type	PWM_ReadPeriodBuf, %function
 1105              	PWM_ReadPeriodBuf:
 1106              	.LFB20:
 787:.\Generated_Source\PSoC4/PWM.c **** 
 788:.\Generated_Source\PSoC4/PWM.c **** 
 789:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/PWM.c **** *
 793:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 794:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM.c **** *  None
 798:.\Generated_Source\PSoC4/PWM.c **** *
 799:.\Generated_Source\PSoC4/PWM.c **** * Return:
 800:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 801:.\Generated_Source\PSoC4/PWM.c **** *
 802:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/PWM.c **** {
 1107              		.loc 1 804 0
 1108              		.cfi_startproc
 1109 0000 80B5     		push	{r7, lr}
 1110              	.LCFI56:
 1111              		.cfi_def_cfa_offset 8
 1112              		.cfi_offset 7, -8
 1113              		.cfi_offset 14, -4
 1114 0002 00AF     		add	r7, sp, #0
 1115              	.LCFI57:
 1116              		.cfi_def_cfa_register 7
 805:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 1117              		.loc 1 805 0
 1118 0004 034B     		ldr	r3, .L66
 1119 0006 1B68     		ldr	r3, [r3]
 1120 0008 1B04     		lsl	r3, r3, #16
 1121 000a 1B0C     		lsr	r3, r3, #16
 806:.\Generated_Source\PSoC4/PWM.c **** }
 1122              		.loc 1 806 0
 1123 000c 181C     		mov	r0, r3
 1124 000e BD46     		mov	sp, r7
 1125              		@ sp needed for prologue
 1126 0010 80BD     		pop	{r7, pc}
 1127              	.L67:
 1128 0012 C046     		.align	2
 1129              	.L66:
 1130 0014 18010540 		.word	1074069784
 1131              		.cfi_endproc
 1132              	.LFE20:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 35


 1133              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 1134              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 1135              		.align	2
 1136              		.global	PWM_SetPeriodSwap
 1137              		.code	16
 1138              		.thumb_func
 1139              		.type	PWM_SetPeriodSwap, %function
 1140              	PWM_SetPeriodSwap:
 1141              	.LFB21:
 807:.\Generated_Source\PSoC4/PWM.c **** 
 808:.\Generated_Source\PSoC4/PWM.c **** 
 809:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 811:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/PWM.c **** *
 813:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 814:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/PWM.c **** *  switch event.
 818:.\Generated_Source\PSoC4/PWM.c **** *
 819:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 820:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 821:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 822:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/PWM.c **** *
 825:.\Generated_Source\PSoC4/PWM.c **** * Return:
 826:.\Generated_Source\PSoC4/PWM.c **** *  None
 827:.\Generated_Source\PSoC4/PWM.c **** *
 828:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/PWM.c **** {
 1142              		.loc 1 830 0
 1143              		.cfi_startproc
 1144 0000 90B5     		push	{r4, r7, lr}
 1145              	.LCFI58:
 1146              		.cfi_def_cfa_offset 12
 1147              		.cfi_offset 4, -12
 1148              		.cfi_offset 7, -8
 1149              		.cfi_offset 14, -4
 1150 0002 85B0     		sub	sp, sp, #20
 1151              	.LCFI59:
 1152              		.cfi_def_cfa_offset 32
 1153 0004 00AF     		add	r7, sp, #0
 1154              	.LCFI60:
 1155              		.cfi_def_cfa_register 7
 1156 0006 7860     		str	r0, [r7, #4]
 831:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/PWM.c **** 
 833:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1157              		.loc 1 833 0
 1158 0008 3C1C     		mov	r4, r7
 1159 000a 0F34     		add	r4, r4, #15
 1160 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1161 0010 031C     		mov	r3, r0
 1162 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 36


 834:.\Generated_Source\PSoC4/PWM.c **** 
 835:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 1163              		.loc 1 835 0
 1164 0014 0B4B     		ldr	r3, .L69
 1165 0016 0B4A     		ldr	r2, .L69
 1166 0018 1268     		ldr	r2, [r2]
 1167 001a 0221     		mov	r1, #2
 1168 001c 8A43     		bic	r2, r1
 1169 001e 1A60     		str	r2, [r3]
 836:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 1170              		.loc 1 836 0
 1171 0020 084B     		ldr	r3, .L69
 1172 0022 084A     		ldr	r2, .L69
 1173 0024 1168     		ldr	r1, [r2]
 1174 0026 7868     		ldr	r0, [r7, #4]
 1175 0028 0122     		mov	r2, #1
 1176 002a 0240     		and	r2, r0
 1177 002c 5200     		lsl	r2, r2, #1
 1178 002e 0A43     		orr	r2, r1
 1179 0030 1A60     		str	r2, [r3]
 837:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/PWM.c **** 
 839:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1180              		.loc 1 839 0
 1181 0032 3B1C     		mov	r3, r7
 1182 0034 0F33     		add	r3, r3, #15
 1183 0036 1B78     		ldrb	r3, [r3]
 1184 0038 181C     		mov	r0, r3
 1185 003a FFF7FEFF 		bl	CyExitCriticalSection
 840:.\Generated_Source\PSoC4/PWM.c **** }
 1186              		.loc 1 840 0
 1187 003e BD46     		mov	sp, r7
 1188 0040 05B0     		add	sp, sp, #20
 1189              		@ sp needed for prologue
 1190 0042 90BD     		pop	{r4, r7, pc}
 1191              	.L70:
 1192              		.align	2
 1193              	.L69:
 1194 0044 00010540 		.word	1074069760
 1195              		.cfi_endproc
 1196              	.LFE21:
 1197              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 1198              		.section	.text.PWM_WriteCompare,"ax",%progbits
 1199              		.align	2
 1200              		.global	PWM_WriteCompare
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	PWM_WriteCompare, %function
 1204              	PWM_WriteCompare:
 1205              	.LFB22:
 841:.\Generated_Source\PSoC4/PWM.c **** 
 842:.\Generated_Source\PSoC4/PWM.c **** 
 843:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 845:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/PWM.c **** *
 847:.\Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 37


 848:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 850:.\Generated_Source\PSoC4/PWM.c **** *
 851:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 852:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/PWM.c **** *
 854:.\Generated_Source\PSoC4/PWM.c **** * Return:
 855:.\Generated_Source\PSoC4/PWM.c **** *  None
 856:.\Generated_Source\PSoC4/PWM.c **** *
 857:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/PWM.c **** {
 1206              		.loc 1 859 0
 1207              		.cfi_startproc
 1208 0000 80B5     		push	{r7, lr}
 1209              	.LCFI61:
 1210              		.cfi_def_cfa_offset 8
 1211              		.cfi_offset 7, -8
 1212              		.cfi_offset 14, -4
 1213 0002 82B0     		sub	sp, sp, #8
 1214              	.LCFI62:
 1215              		.cfi_def_cfa_offset 16
 1216 0004 00AF     		add	r7, sp, #0
 1217              	.LCFI63:
 1218              		.cfi_def_cfa_register 7
 1219 0006 7860     		str	r0, [r7, #4]
 860:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/PWM.c **** 
 864:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 866:.\Generated_Source\PSoC4/PWM.c **** 
 867:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 868:.\Generated_Source\PSoC4/PWM.c ****         {
 869:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_REG = ((compare + 1u) & PWM_16BIT_MASK);
 870:.\Generated_Source\PSoC4/PWM.c ****         }
 871:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/PWM.c ****         {
 873:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_REG = ((compare - 1u) & PWM_16BIT_MASK);
 874:.\Generated_Source\PSoC4/PWM.c ****         }
 875:.\Generated_Source\PSoC4/PWM.c ****         else
 876:.\Generated_Source\PSoC4/PWM.c ****         {
 877:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 878:.\Generated_Source\PSoC4/PWM.c ****         }
 879:.\Generated_Source\PSoC4/PWM.c ****     #else
 880:.\Generated_Source\PSoC4/PWM.c ****         PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 1220              		.loc 1 880 0
 1221 0008 034B     		ldr	r3, .L72
 1222 000a 7A68     		ldr	r2, [r7, #4]
 1223 000c 1204     		lsl	r2, r2, #16
 1224 000e 120C     		lsr	r2, r2, #16
 1225 0010 1A60     		str	r2, [r3]
 881:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/PWM.c **** }
 1226              		.loc 1 882 0
 1227 0012 BD46     		mov	sp, r7
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 38


 1228 0014 02B0     		add	sp, sp, #8
 1229              		@ sp needed for prologue
 1230 0016 80BD     		pop	{r7, pc}
 1231              	.L73:
 1232              		.align	2
 1233              	.L72:
 1234 0018 0C010540 		.word	1074069772
 1235              		.cfi_endproc
 1236              	.LFE22:
 1237              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 1238              		.section	.text.PWM_ReadCompare,"ax",%progbits
 1239              		.align	2
 1240              		.global	PWM_ReadCompare
 1241              		.code	16
 1242              		.thumb_func
 1243              		.type	PWM_ReadCompare, %function
 1244              	PWM_ReadCompare:
 1245              	.LFB23:
 883:.\Generated_Source\PSoC4/PWM.c **** 
 884:.\Generated_Source\PSoC4/PWM.c **** 
 885:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 887:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/PWM.c **** *
 889:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 890:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/PWM.c **** *
 893:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 894:.\Generated_Source\PSoC4/PWM.c **** *  None
 895:.\Generated_Source\PSoC4/PWM.c **** *
 896:.\Generated_Source\PSoC4/PWM.c **** * Return:
 897:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 898:.\Generated_Source\PSoC4/PWM.c **** *
 899:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 901:.\Generated_Source\PSoC4/PWM.c **** {
 1246              		.loc 1 901 0
 1247              		.cfi_startproc
 1248 0000 80B5     		push	{r7, lr}
 1249              	.LCFI64:
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 00AF     		add	r7, sp, #0
 1254              	.LCFI65:
 1255              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/PWM.c **** 
 907:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/PWM.c **** 
 910:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/PWM.c ****         {
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 39


 912:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_REG - 1u) & PWM_16BIT_MASK);
 913:.\Generated_Source\PSoC4/PWM.c ****         }
 914:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/PWM.c ****         {
 916:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_REG + 1u) & PWM_16BIT_MASK);
 917:.\Generated_Source\PSoC4/PWM.c ****         }
 918:.\Generated_Source\PSoC4/PWM.c ****         else
 919:.\Generated_Source\PSoC4/PWM.c ****         {
 920:.\Generated_Source\PSoC4/PWM.c ****             regVal = (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 921:.\Generated_Source\PSoC4/PWM.c ****         }
 922:.\Generated_Source\PSoC4/PWM.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/PWM.c ****     #else
 924:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1256              		.loc 1 924 0
 1257 0004 034B     		ldr	r3, .L76
 1258 0006 1B68     		ldr	r3, [r3]
 1259 0008 1B04     		lsl	r3, r3, #16
 1260 000a 1B0C     		lsr	r3, r3, #16
 925:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 926:.\Generated_Source\PSoC4/PWM.c **** }
 1261              		.loc 1 926 0
 1262 000c 181C     		mov	r0, r3
 1263 000e BD46     		mov	sp, r7
 1264              		@ sp needed for prologue
 1265 0010 80BD     		pop	{r7, pc}
 1266              	.L77:
 1267 0012 C046     		.align	2
 1268              	.L76:
 1269 0014 0C010540 		.word	1074069772
 1270              		.cfi_endproc
 1271              	.LFE23:
 1272              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 1273              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 1274              		.align	2
 1275              		.global	PWM_WriteCompareBuf
 1276              		.code	16
 1277              		.thumb_func
 1278              		.type	PWM_WriteCompareBuf, %function
 1279              	PWM_WriteCompareBuf:
 1280              	.LFB24:
 927:.\Generated_Source\PSoC4/PWM.c **** 
 928:.\Generated_Source\PSoC4/PWM.c **** 
 929:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 931:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/PWM.c **** *
 933:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 934:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 935:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/PWM.c **** *
 937:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 938:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/PWM.c **** *
 940:.\Generated_Source\PSoC4/PWM.c **** * Return:
 941:.\Generated_Source\PSoC4/PWM.c **** *  None
 942:.\Generated_Source\PSoC4/PWM.c **** *
 943:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 40


 944:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/PWM.c **** {
 1281              		.loc 1 945 0
 1282              		.cfi_startproc
 1283 0000 80B5     		push	{r7, lr}
 1284              	.LCFI66:
 1285              		.cfi_def_cfa_offset 8
 1286              		.cfi_offset 7, -8
 1287              		.cfi_offset 14, -4
 1288 0002 82B0     		sub	sp, sp, #8
 1289              	.LCFI67:
 1290              		.cfi_def_cfa_offset 16
 1291 0004 00AF     		add	r7, sp, #0
 1292              	.LCFI68:
 1293              		.cfi_def_cfa_register 7
 1294 0006 7860     		str	r0, [r7, #4]
 946:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/PWM.c **** 
 950:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 952:.\Generated_Source\PSoC4/PWM.c **** 
 953:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/PWM.c ****         {
 955:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_BUF_REG = ((compareBuf + 1u) & PWM_16BIT_MASK);
 956:.\Generated_Source\PSoC4/PWM.c ****         }
 957:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/PWM.c ****         {
 959:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_BUF_REG = ((compareBuf - 1u) & PWM_16BIT_MASK);
 960:.\Generated_Source\PSoC4/PWM.c ****         }
 961:.\Generated_Source\PSoC4/PWM.c ****         else
 962:.\Generated_Source\PSoC4/PWM.c ****         {
 963:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 964:.\Generated_Source\PSoC4/PWM.c ****         }
 965:.\Generated_Source\PSoC4/PWM.c ****     #else
 966:.\Generated_Source\PSoC4/PWM.c ****         PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 1295              		.loc 1 966 0
 1296 0008 034B     		ldr	r3, .L79
 1297 000a 7A68     		ldr	r2, [r7, #4]
 1298 000c 1204     		lsl	r2, r2, #16
 1299 000e 120C     		lsr	r2, r2, #16
 1300 0010 1A60     		str	r2, [r3]
 967:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/PWM.c **** }
 1301              		.loc 1 968 0
 1302 0012 BD46     		mov	sp, r7
 1303 0014 02B0     		add	sp, sp, #8
 1304              		@ sp needed for prologue
 1305 0016 80BD     		pop	{r7, pc}
 1306              	.L80:
 1307              		.align	2
 1308              	.L79:
 1309 0018 10010540 		.word	1074069776
 1310              		.cfi_endproc
 1311              	.LFE24:
 1312              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 41


 1313              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1314              		.align	2
 1315              		.global	PWM_ReadCompareBuf
 1316              		.code	16
 1317              		.thumb_func
 1318              		.type	PWM_ReadCompareBuf, %function
 1319              	PWM_ReadCompareBuf:
 1320              	.LFB25:
 969:.\Generated_Source\PSoC4/PWM.c **** 
 970:.\Generated_Source\PSoC4/PWM.c **** 
 971:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 973:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/PWM.c **** *
 975:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 976:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/PWM.c **** *
 979:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 980:.\Generated_Source\PSoC4/PWM.c **** *  None
 981:.\Generated_Source\PSoC4/PWM.c **** *
 982:.\Generated_Source\PSoC4/PWM.c **** * Return:
 983:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 984:.\Generated_Source\PSoC4/PWM.c **** *
 985:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/PWM.c **** {
 1321              		.loc 1 987 0
 1322              		.cfi_startproc
 1323 0000 80B5     		push	{r7, lr}
 1324              	.LCFI69:
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 7, -8
 1327              		.cfi_offset 14, -4
 1328 0002 00AF     		add	r7, sp, #0
 1329              	.LCFI70:
 1330              		.cfi_def_cfa_register 7
 988:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 991:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 992:.\Generated_Source\PSoC4/PWM.c **** 
 993:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 995:.\Generated_Source\PSoC4/PWM.c **** 
 996:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/PWM.c ****         {
 998:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_BUF_REG - 1u) & PWM_16BIT_MASK);
 999:.\Generated_Source\PSoC4/PWM.c ****         }
1000:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
1001:.\Generated_Source\PSoC4/PWM.c ****         {
1002:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_BUF_REG + 1u) & PWM_16BIT_MASK);
1003:.\Generated_Source\PSoC4/PWM.c ****         }
1004:.\Generated_Source\PSoC4/PWM.c ****         else
1005:.\Generated_Source\PSoC4/PWM.c ****         {
1006:.\Generated_Source\PSoC4/PWM.c ****             regVal = (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
1007:.\Generated_Source\PSoC4/PWM.c ****         }
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 42


1008:.\Generated_Source\PSoC4/PWM.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/PWM.c ****     #else
1010:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1331              		.loc 1 1010 0
 1332 0004 034B     		ldr	r3, .L83
 1333 0006 1B68     		ldr	r3, [r3]
 1334 0008 1B04     		lsl	r3, r3, #16
 1335 000a 1B0C     		lsr	r3, r3, #16
1011:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/PWM.c **** }
 1336              		.loc 1 1012 0
 1337 000c 181C     		mov	r0, r3
 1338 000e BD46     		mov	sp, r7
 1339              		@ sp needed for prologue
 1340 0010 80BD     		pop	{r7, pc}
 1341              	.L84:
 1342 0012 C046     		.align	2
 1343              	.L83:
 1344 0014 10010540 		.word	1074069776
 1345              		.cfi_endproc
 1346              	.LFE25:
 1347              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1348              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1349              		.align	2
 1350              		.global	PWM_ReadCapture
 1351              		.code	16
 1352              		.thumb_func
 1353              		.type	PWM_ReadCapture, %function
 1354              	PWM_ReadCapture:
 1355              	.LFB26:
1013:.\Generated_Source\PSoC4/PWM.c **** 
1014:.\Generated_Source\PSoC4/PWM.c **** 
1015:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
1017:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/PWM.c **** *
1019:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1020:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/PWM.c **** *
1023:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1024:.\Generated_Source\PSoC4/PWM.c **** *  None
1025:.\Generated_Source\PSoC4/PWM.c **** *
1026:.\Generated_Source\PSoC4/PWM.c **** * Return:
1027:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
1028:.\Generated_Source\PSoC4/PWM.c **** *
1029:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1031:.\Generated_Source\PSoC4/PWM.c **** {
 1356              		.loc 1 1031 0
 1357              		.cfi_startproc
 1358 0000 80B5     		push	{r7, lr}
 1359              	.LCFI71:
 1360              		.cfi_def_cfa_offset 8
 1361              		.cfi_offset 7, -8
 1362              		.cfi_offset 14, -4
 1363 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 43


 1364              	.LCFI72:
 1365              		.cfi_def_cfa_register 7
1032:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1366              		.loc 1 1032 0
 1367 0004 034B     		ldr	r3, .L87
 1368 0006 1B68     		ldr	r3, [r3]
 1369 0008 1B04     		lsl	r3, r3, #16
 1370 000a 1B0C     		lsr	r3, r3, #16
1033:.\Generated_Source\PSoC4/PWM.c **** }
 1371              		.loc 1 1033 0
 1372 000c 181C     		mov	r0, r3
 1373 000e BD46     		mov	sp, r7
 1374              		@ sp needed for prologue
 1375 0010 80BD     		pop	{r7, pc}
 1376              	.L88:
 1377 0012 C046     		.align	2
 1378              	.L87:
 1379 0014 0C010540 		.word	1074069772
 1380              		.cfi_endproc
 1381              	.LFE26:
 1382              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1383              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1384              		.align	2
 1385              		.global	PWM_ReadCaptureBuf
 1386              		.code	16
 1387              		.thumb_func
 1388              		.type	PWM_ReadCaptureBuf, %function
 1389              	PWM_ReadCaptureBuf:
 1390              	.LFB27:
1034:.\Generated_Source\PSoC4/PWM.c **** 
1035:.\Generated_Source\PSoC4/PWM.c **** 
1036:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/PWM.c **** *
1040:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1041:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/PWM.c **** *
1044:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1045:.\Generated_Source\PSoC4/PWM.c **** *  None
1046:.\Generated_Source\PSoC4/PWM.c **** *
1047:.\Generated_Source\PSoC4/PWM.c **** * Return:
1048:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1049:.\Generated_Source\PSoC4/PWM.c **** *
1050:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/PWM.c **** {
 1391              		.loc 1 1052 0
 1392              		.cfi_startproc
 1393 0000 80B5     		push	{r7, lr}
 1394              	.LCFI73:
 1395              		.cfi_def_cfa_offset 8
 1396              		.cfi_offset 7, -8
 1397              		.cfi_offset 14, -4
 1398 0002 00AF     		add	r7, sp, #0
 1399              	.LCFI74:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 44


 1400              		.cfi_def_cfa_register 7
1053:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1401              		.loc 1 1053 0
 1402 0004 034B     		ldr	r3, .L91
 1403 0006 1B68     		ldr	r3, [r3]
 1404 0008 1B04     		lsl	r3, r3, #16
 1405 000a 1B0C     		lsr	r3, r3, #16
1054:.\Generated_Source\PSoC4/PWM.c **** }
 1406              		.loc 1 1054 0
 1407 000c 181C     		mov	r0, r3
 1408 000e BD46     		mov	sp, r7
 1409              		@ sp needed for prologue
 1410 0010 80BD     		pop	{r7, pc}
 1411              	.L92:
 1412 0012 C046     		.align	2
 1413              	.L91:
 1414 0014 10010540 		.word	1074069776
 1415              		.cfi_endproc
 1416              	.LFE27:
 1417              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1418              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1419              		.align	2
 1420              		.global	PWM_SetCaptureMode
 1421              		.code	16
 1422              		.thumb_func
 1423              		.type	PWM_SetCaptureMode, %function
 1424              	PWM_SetCaptureMode:
 1425              	.LFB28:
1055:.\Generated_Source\PSoC4/PWM.c **** 
1056:.\Generated_Source\PSoC4/PWM.c **** 
1057:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1059:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/PWM.c **** *
1061:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1062:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/PWM.c **** *
1066:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1067:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1069:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1071:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/PWM.c **** *
1074:.\Generated_Source\PSoC4/PWM.c **** * Return:
1075:.\Generated_Source\PSoC4/PWM.c **** *  None
1076:.\Generated_Source\PSoC4/PWM.c **** *
1077:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/PWM.c **** {
 1426              		.loc 1 1079 0
 1427              		.cfi_startproc
 1428 0000 90B5     		push	{r4, r7, lr}
 1429              	.LCFI75:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 45


 1430              		.cfi_def_cfa_offset 12
 1431              		.cfi_offset 4, -12
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 85B0     		sub	sp, sp, #20
 1435              	.LCFI76:
 1436              		.cfi_def_cfa_offset 32
 1437 0004 00AF     		add	r7, sp, #0
 1438              	.LCFI77:
 1439              		.cfi_def_cfa_register 7
 1440 0006 7860     		str	r0, [r7, #4]
1080:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/PWM.c **** 
1082:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1441              		.loc 1 1082 0
 1442 0008 3C1C     		mov	r4, r7
 1443 000a 0F34     		add	r4, r4, #15
 1444 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1445 0010 031C     		mov	r3, r0
 1446 0012 2370     		strb	r3, [r4]
1083:.\Generated_Source\PSoC4/PWM.c **** 
1084:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1447              		.loc 1 1084 0
 1448 0014 0A4B     		ldr	r3, .L94
 1449 0016 0A4A     		ldr	r2, .L94
 1450 0018 1268     		ldr	r2, [r2]
 1451 001a 0321     		mov	r1, #3
 1452 001c 8A43     		bic	r2, r1
 1453 001e 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1454              		.loc 1 1085 0
 1455 0020 074B     		ldr	r3, .L94
 1456 0022 074A     		ldr	r2, .L94
 1457 0024 1168     		ldr	r1, [r2]
 1458 0026 7A68     		ldr	r2, [r7, #4]
 1459 0028 0A43     		orr	r2, r1
 1460 002a 1A60     		str	r2, [r3]
1086:.\Generated_Source\PSoC4/PWM.c **** 
1087:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1461              		.loc 1 1087 0
 1462 002c 3B1C     		mov	r3, r7
 1463 002e 0F33     		add	r3, r3, #15
 1464 0030 1B78     		ldrb	r3, [r3]
 1465 0032 181C     		mov	r0, r3
 1466 0034 FFF7FEFF 		bl	CyExitCriticalSection
1088:.\Generated_Source\PSoC4/PWM.c **** }
 1467              		.loc 1 1088 0
 1468 0038 BD46     		mov	sp, r7
 1469 003a 05B0     		add	sp, sp, #20
 1470              		@ sp needed for prologue
 1471 003c 90BD     		pop	{r4, r7, pc}
 1472              	.L95:
 1473 003e C046     		.align	2
 1474              	.L94:
 1475 0040 24010540 		.word	1074069796
 1476              		.cfi_endproc
 1477              	.LFE28:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 46


 1478              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1479              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1480              		.align	2
 1481              		.global	PWM_SetReloadMode
 1482              		.code	16
 1483              		.thumb_func
 1484              		.type	PWM_SetReloadMode, %function
 1485              	PWM_SetReloadMode:
 1486              	.LFB29:
1089:.\Generated_Source\PSoC4/PWM.c **** 
1090:.\Generated_Source\PSoC4/PWM.c **** 
1091:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1093:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/PWM.c **** *
1095:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1096:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1097:.\Generated_Source\PSoC4/PWM.c **** *  input.
1098:.\Generated_Source\PSoC4/PWM.c **** *
1099:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1100:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1102:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1105:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1106:.\Generated_Source\PSoC4/PWM.c **** *
1107:.\Generated_Source\PSoC4/PWM.c **** * Return:
1108:.\Generated_Source\PSoC4/PWM.c **** *  None
1109:.\Generated_Source\PSoC4/PWM.c **** *
1110:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1112:.\Generated_Source\PSoC4/PWM.c **** {
 1487              		.loc 1 1112 0
 1488              		.cfi_startproc
 1489 0000 90B5     		push	{r4, r7, lr}
 1490              	.LCFI78:
 1491              		.cfi_def_cfa_offset 12
 1492              		.cfi_offset 4, -12
 1493              		.cfi_offset 7, -8
 1494              		.cfi_offset 14, -4
 1495 0002 85B0     		sub	sp, sp, #20
 1496              	.LCFI79:
 1497              		.cfi_def_cfa_offset 32
 1498 0004 00AF     		add	r7, sp, #0
 1499              	.LCFI80:
 1500              		.cfi_def_cfa_register 7
 1501 0006 7860     		str	r0, [r7, #4]
1113:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/PWM.c **** 
1115:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1502              		.loc 1 1115 0
 1503 0008 3C1C     		mov	r4, r7
 1504 000a 0F34     		add	r4, r4, #15
 1505 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1506 0010 031C     		mov	r3, r0
 1507 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 47


1116:.\Generated_Source\PSoC4/PWM.c **** 
1117:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1508              		.loc 1 1117 0
 1509 0014 0A4B     		ldr	r3, .L97
 1510 0016 0A4A     		ldr	r2, .L97
 1511 0018 1268     		ldr	r2, [r2]
 1512 001a 3021     		mov	r1, #48
 1513 001c 8A43     		bic	r2, r1
 1514 001e 1A60     		str	r2, [r3]
1118:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1515              		.loc 1 1118 0
 1516 0020 074B     		ldr	r3, .L97
 1517 0022 074A     		ldr	r2, .L97
 1518 0024 1168     		ldr	r1, [r2]
 1519 0026 7A68     		ldr	r2, [r7, #4]
 1520 0028 1201     		lsl	r2, r2, #4
 1521 002a 0A43     		orr	r2, r1
 1522 002c 1A60     		str	r2, [r3]
1119:.\Generated_Source\PSoC4/PWM.c **** 
1120:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1523              		.loc 1 1120 0
 1524 002e 3B1C     		mov	r3, r7
 1525 0030 0F33     		add	r3, r3, #15
 1526 0032 1B78     		ldrb	r3, [r3]
 1527 0034 181C     		mov	r0, r3
 1528 0036 FFF7FEFF 		bl	CyExitCriticalSection
1121:.\Generated_Source\PSoC4/PWM.c **** }
 1529              		.loc 1 1121 0
 1530 003a BD46     		mov	sp, r7
 1531 003c 05B0     		add	sp, sp, #20
 1532              		@ sp needed for prologue
 1533 003e 90BD     		pop	{r4, r7, pc}
 1534              	.L98:
 1535              		.align	2
 1536              	.L97:
 1537 0040 24010540 		.word	1074069796
 1538              		.cfi_endproc
 1539              	.LFE29:
 1540              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1541              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1542              		.align	2
 1543              		.global	PWM_SetStartMode
 1544              		.code	16
 1545              		.thumb_func
 1546              		.type	PWM_SetStartMode, %function
 1547              	PWM_SetStartMode:
 1548              	.LFB30:
1122:.\Generated_Source\PSoC4/PWM.c **** 
1123:.\Generated_Source\PSoC4/PWM.c **** 
1124:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1125:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1126:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/PWM.c **** *
1128:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1129:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1130:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 48


1132:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1133:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1134:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1135:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1137:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/PWM.c **** *
1140:.\Generated_Source\PSoC4/PWM.c **** * Return:
1141:.\Generated_Source\PSoC4/PWM.c **** *  None
1142:.\Generated_Source\PSoC4/PWM.c **** *
1143:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/PWM.c **** {
 1549              		.loc 1 1145 0
 1550              		.cfi_startproc
 1551 0000 90B5     		push	{r4, r7, lr}
 1552              	.LCFI81:
 1553              		.cfi_def_cfa_offset 12
 1554              		.cfi_offset 4, -12
 1555              		.cfi_offset 7, -8
 1556              		.cfi_offset 14, -4
 1557 0002 85B0     		sub	sp, sp, #20
 1558              	.LCFI82:
 1559              		.cfi_def_cfa_offset 32
 1560 0004 00AF     		add	r7, sp, #0
 1561              	.LCFI83:
 1562              		.cfi_def_cfa_register 7
 1563 0006 7860     		str	r0, [r7, #4]
1146:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/PWM.c **** 
1148:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1564              		.loc 1 1148 0
 1565 0008 3C1C     		mov	r4, r7
 1566 000a 0F34     		add	r4, r4, #15
 1567 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1568 0010 031C     		mov	r3, r0
 1569 0012 2370     		strb	r3, [r4]
1149:.\Generated_Source\PSoC4/PWM.c **** 
1150:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1570              		.loc 1 1150 0
 1571 0014 0A4B     		ldr	r3, .L100
 1572 0016 0A4A     		ldr	r2, .L100
 1573 0018 1168     		ldr	r1, [r2]
 1574 001a 0A4A     		ldr	r2, .L100+4
 1575 001c 0A40     		and	r2, r1
 1576 001e 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1577              		.loc 1 1151 0
 1578 0020 074B     		ldr	r3, .L100
 1579 0022 074A     		ldr	r2, .L100
 1580 0024 1168     		ldr	r1, [r2]
 1581 0026 7A68     		ldr	r2, [r7, #4]
 1582 0028 1202     		lsl	r2, r2, #8
 1583 002a 0A43     		orr	r2, r1
 1584 002c 1A60     		str	r2, [r3]
1152:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 49


1153:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1585              		.loc 1 1153 0
 1586 002e 3B1C     		mov	r3, r7
 1587 0030 0F33     		add	r3, r3, #15
 1588 0032 1B78     		ldrb	r3, [r3]
 1589 0034 181C     		mov	r0, r3
 1590 0036 FFF7FEFF 		bl	CyExitCriticalSection
1154:.\Generated_Source\PSoC4/PWM.c **** }
 1591              		.loc 1 1154 0
 1592 003a BD46     		mov	sp, r7
 1593 003c 05B0     		add	sp, sp, #20
 1594              		@ sp needed for prologue
 1595 003e 90BD     		pop	{r4, r7, pc}
 1596              	.L101:
 1597              		.align	2
 1598              	.L100:
 1599 0040 24010540 		.word	1074069796
 1600 0044 FFFCFFFF 		.word	-769
 1601              		.cfi_endproc
 1602              	.LFE30:
 1603              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1604              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1605              		.align	2
 1606              		.global	PWM_SetStopMode
 1607              		.code	16
 1608              		.thumb_func
 1609              		.type	PWM_SetStopMode, %function
 1610              	PWM_SetStopMode:
 1611              	.LFB31:
1155:.\Generated_Source\PSoC4/PWM.c **** 
1156:.\Generated_Source\PSoC4/PWM.c **** 
1157:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1159:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/PWM.c **** *
1161:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1162:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1163:.\Generated_Source\PSoC4/PWM.c **** *
1164:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1165:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1167:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/PWM.c **** *
1172:.\Generated_Source\PSoC4/PWM.c **** * Return:
1173:.\Generated_Source\PSoC4/PWM.c **** *  None
1174:.\Generated_Source\PSoC4/PWM.c **** *
1175:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1176:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/PWM.c **** {
 1612              		.loc 1 1177 0
 1613              		.cfi_startproc
 1614 0000 90B5     		push	{r4, r7, lr}
 1615              	.LCFI84:
 1616              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 50


 1617              		.cfi_offset 4, -12
 1618              		.cfi_offset 7, -8
 1619              		.cfi_offset 14, -4
 1620 0002 85B0     		sub	sp, sp, #20
 1621              	.LCFI85:
 1622              		.cfi_def_cfa_offset 32
 1623 0004 00AF     		add	r7, sp, #0
 1624              	.LCFI86:
 1625              		.cfi_def_cfa_register 7
 1626 0006 7860     		str	r0, [r7, #4]
1178:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/PWM.c **** 
1180:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1627              		.loc 1 1180 0
 1628 0008 3C1C     		mov	r4, r7
 1629 000a 0F34     		add	r4, r4, #15
 1630 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1631 0010 031C     		mov	r3, r0
 1632 0012 2370     		strb	r3, [r4]
1181:.\Generated_Source\PSoC4/PWM.c **** 
1182:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1633              		.loc 1 1182 0
 1634 0014 0A4B     		ldr	r3, .L103
 1635 0016 0A4A     		ldr	r2, .L103
 1636 0018 1268     		ldr	r2, [r2]
 1637 001a C021     		mov	r1, #192
 1638 001c 8A43     		bic	r2, r1
 1639 001e 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1640              		.loc 1 1183 0
 1641 0020 074B     		ldr	r3, .L103
 1642 0022 074A     		ldr	r2, .L103
 1643 0024 1168     		ldr	r1, [r2]
 1644 0026 7A68     		ldr	r2, [r7, #4]
 1645 0028 9201     		lsl	r2, r2, #6
 1646 002a 0A43     		orr	r2, r1
 1647 002c 1A60     		str	r2, [r3]
1184:.\Generated_Source\PSoC4/PWM.c **** 
1185:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1648              		.loc 1 1185 0
 1649 002e 3B1C     		mov	r3, r7
 1650 0030 0F33     		add	r3, r3, #15
 1651 0032 1B78     		ldrb	r3, [r3]
 1652 0034 181C     		mov	r0, r3
 1653 0036 FFF7FEFF 		bl	CyExitCriticalSection
1186:.\Generated_Source\PSoC4/PWM.c **** }
 1654              		.loc 1 1186 0
 1655 003a BD46     		mov	sp, r7
 1656 003c 05B0     		add	sp, sp, #20
 1657              		@ sp needed for prologue
 1658 003e 90BD     		pop	{r4, r7, pc}
 1659              	.L104:
 1660              		.align	2
 1661              	.L103:
 1662 0040 24010540 		.word	1074069796
 1663              		.cfi_endproc
 1664              	.LFE31:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 51


 1665              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1666              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1667              		.align	2
 1668              		.global	PWM_SetCountMode
 1669              		.code	16
 1670              		.thumb_func
 1671              		.type	PWM_SetCountMode, %function
 1672              	PWM_SetCountMode:
 1673              	.LFB32:
1187:.\Generated_Source\PSoC4/PWM.c **** 
1188:.\Generated_Source\PSoC4/PWM.c **** 
1189:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1191:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/PWM.c **** *
1193:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1194:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/PWM.c **** *  input.
1196:.\Generated_Source\PSoC4/PWM.c **** *
1197:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1198:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1200:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/PWM.c **** *
1205:.\Generated_Source\PSoC4/PWM.c **** * Return:
1206:.\Generated_Source\PSoC4/PWM.c **** *  None
1207:.\Generated_Source\PSoC4/PWM.c **** *
1208:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/PWM.c **** {
 1674              		.loc 1 1210 0
 1675              		.cfi_startproc
 1676 0000 90B5     		push	{r4, r7, lr}
 1677              	.LCFI87:
 1678              		.cfi_def_cfa_offset 12
 1679              		.cfi_offset 4, -12
 1680              		.cfi_offset 7, -8
 1681              		.cfi_offset 14, -4
 1682 0002 85B0     		sub	sp, sp, #20
 1683              	.LCFI88:
 1684              		.cfi_def_cfa_offset 32
 1685 0004 00AF     		add	r7, sp, #0
 1686              	.LCFI89:
 1687              		.cfi_def_cfa_register 7
 1688 0006 7860     		str	r0, [r7, #4]
1211:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/PWM.c **** 
1213:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1689              		.loc 1 1213 0
 1690 0008 3C1C     		mov	r4, r7
 1691 000a 0F34     		add	r4, r4, #15
 1692 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1693 0010 031C     		mov	r3, r0
 1694 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 52


1214:.\Generated_Source\PSoC4/PWM.c **** 
1215:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1695              		.loc 1 1215 0
 1696 0014 0A4B     		ldr	r3, .L106
 1697 0016 0A4A     		ldr	r2, .L106
 1698 0018 1268     		ldr	r2, [r2]
 1699 001a 0C21     		mov	r1, #12
 1700 001c 8A43     		bic	r2, r1
 1701 001e 1A60     		str	r2, [r3]
1216:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1702              		.loc 1 1216 0
 1703 0020 074B     		ldr	r3, .L106
 1704 0022 074A     		ldr	r2, .L106
 1705 0024 1168     		ldr	r1, [r2]
 1706 0026 7A68     		ldr	r2, [r7, #4]
 1707 0028 9200     		lsl	r2, r2, #2
 1708 002a 0A43     		orr	r2, r1
 1709 002c 1A60     		str	r2, [r3]
1217:.\Generated_Source\PSoC4/PWM.c **** 
1218:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1710              		.loc 1 1218 0
 1711 002e 3B1C     		mov	r3, r7
 1712 0030 0F33     		add	r3, r3, #15
 1713 0032 1B78     		ldrb	r3, [r3]
 1714 0034 181C     		mov	r0, r3
 1715 0036 FFF7FEFF 		bl	CyExitCriticalSection
1219:.\Generated_Source\PSoC4/PWM.c **** }
 1716              		.loc 1 1219 0
 1717 003a BD46     		mov	sp, r7
 1718 003c 05B0     		add	sp, sp, #20
 1719              		@ sp needed for prologue
 1720 003e 90BD     		pop	{r4, r7, pc}
 1721              	.L107:
 1722              		.align	2
 1723              	.L106:
 1724 0040 24010540 		.word	1074069796
 1725              		.cfi_endproc
 1726              	.LFE32:
 1727              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1728              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1729              		.align	2
 1730              		.global	PWM_TriggerCommand
 1731              		.code	16
 1732              		.thumb_func
 1733              		.type	PWM_TriggerCommand, %function
 1734              	PWM_TriggerCommand:
 1735              	.LFB33:
1220:.\Generated_Source\PSoC4/PWM.c **** 
1221:.\Generated_Source\PSoC4/PWM.c **** 
1222:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1224:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/PWM.c **** *
1226:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1227:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1228:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 53


1230:.\Generated_Source\PSoC4/PWM.c **** *
1231:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1232:.\Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/PWM.c **** *        define.
1237:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1240:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/PWM.c **** *
1245:.\Generated_Source\PSoC4/PWM.c **** * Return:
1246:.\Generated_Source\PSoC4/PWM.c **** *  None
1247:.\Generated_Source\PSoC4/PWM.c **** *
1248:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/PWM.c **** {
 1736              		.loc 1 1250 0
 1737              		.cfi_startproc
 1738 0000 90B5     		push	{r4, r7, lr}
 1739              	.LCFI90:
 1740              		.cfi_def_cfa_offset 12
 1741              		.cfi_offset 4, -12
 1742              		.cfi_offset 7, -8
 1743              		.cfi_offset 14, -4
 1744 0002 85B0     		sub	sp, sp, #20
 1745              	.LCFI91:
 1746              		.cfi_def_cfa_offset 32
 1747 0004 00AF     		add	r7, sp, #0
 1748              	.LCFI92:
 1749              		.cfi_def_cfa_register 7
 1750 0006 7860     		str	r0, [r7, #4]
 1751 0008 3960     		str	r1, [r7]
1251:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/PWM.c **** 
1253:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1752              		.loc 1 1253 0
 1753 000a 3C1C     		mov	r4, r7
 1754 000c 0F34     		add	r4, r4, #15
 1755 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1756 0012 031C     		mov	r3, r0
 1757 0014 2370     		strb	r3, [r4]
1254:.\Generated_Source\PSoC4/PWM.c **** 
1255:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1758              		.loc 1 1255 0
 1759 0016 084B     		ldr	r3, .L109
 1760 0018 3A68     		ldr	r2, [r7]
 1761 001a 7968     		ldr	r1, [r7, #4]
 1762 001c 081C     		mov	r0, r1
 1763 001e 9040     		lsl	r0, r0, r2
 1764 0020 021C     		mov	r2, r0
 1765 0022 1A60     		str	r2, [r3]
1256:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 54


1257:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1766              		.loc 1 1257 0
 1767 0024 3B1C     		mov	r3, r7
 1768 0026 0F33     		add	r3, r3, #15
 1769 0028 1B78     		ldrb	r3, [r3]
 1770 002a 181C     		mov	r0, r3
 1771 002c FFF7FEFF 		bl	CyExitCriticalSection
1258:.\Generated_Source\PSoC4/PWM.c **** }
 1772              		.loc 1 1258 0
 1773 0030 BD46     		mov	sp, r7
 1774 0032 05B0     		add	sp, sp, #20
 1775              		@ sp needed for prologue
 1776 0034 90BD     		pop	{r4, r7, pc}
 1777              	.L110:
 1778 0036 C046     		.align	2
 1779              	.L109:
 1780 0038 08000540 		.word	1074069512
 1781              		.cfi_endproc
 1782              	.LFE33:
 1783              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1784              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1785              		.align	2
 1786              		.global	PWM_ReadStatus
 1787              		.code	16
 1788              		.thumb_func
 1789              		.type	PWM_ReadStatus, %function
 1790              	PWM_ReadStatus:
 1791              	.LFB34:
1259:.\Generated_Source\PSoC4/PWM.c **** 
1260:.\Generated_Source\PSoC4/PWM.c **** 
1261:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1263:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/PWM.c **** *
1265:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1266:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1267:.\Generated_Source\PSoC4/PWM.c **** *
1268:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1269:.\Generated_Source\PSoC4/PWM.c **** *  None
1270:.\Generated_Source\PSoC4/PWM.c **** *
1271:.\Generated_Source\PSoC4/PWM.c **** * Return:
1272:.\Generated_Source\PSoC4/PWM.c **** *  Status
1273:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1274:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1276:.\Generated_Source\PSoC4/PWM.c **** *
1277:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1279:.\Generated_Source\PSoC4/PWM.c **** {
 1792              		.loc 1 1279 0
 1793              		.cfi_startproc
 1794 0000 80B5     		push	{r7, lr}
 1795              	.LCFI93:
 1796              		.cfi_def_cfa_offset 8
 1797              		.cfi_offset 7, -8
 1798              		.cfi_offset 14, -4
 1799 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 55


 1800              	.LCFI94:
 1801              		.cfi_def_cfa_register 7
1280:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1802              		.loc 1 1280 0
 1803 0004 054B     		ldr	r3, .L113
 1804 0006 1B68     		ldr	r3, [r3]
 1805 0008 9A0F     		lsr	r2, r3, #30
1281:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1806              		.loc 1 1281 0
 1807 000a 044B     		ldr	r3, .L113
 1808 000c 1968     		ldr	r1, [r3]
 1809 000e 0123     		mov	r3, #1
 1810 0010 0B40     		and	r3, r1
1280:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1811              		.loc 1 1280 0
 1812 0012 1343     		orr	r3, r2
1282:.\Generated_Source\PSoC4/PWM.c **** }
 1813              		.loc 1 1282 0
 1814 0014 181C     		mov	r0, r3
 1815 0016 BD46     		mov	sp, r7
 1816              		@ sp needed for prologue
 1817 0018 80BD     		pop	{r7, pc}
 1818              	.L114:
 1819 001a C046     		.align	2
 1820              	.L113:
 1821 001c 04010540 		.word	1074069764
 1822              		.cfi_endproc
 1823              	.LFE34:
 1824              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1825              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1826              		.align	2
 1827              		.global	PWM_SetInterruptMode
 1828              		.code	16
 1829              		.thumb_func
 1830              		.type	PWM_SetInterruptMode, %function
 1831              	PWM_SetInterruptMode:
 1832              	.LFB35:
1283:.\Generated_Source\PSoC4/PWM.c **** 
1284:.\Generated_Source\PSoC4/PWM.c **** 
1285:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1287:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/PWM.c **** *
1289:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1290:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/PWM.c **** *
1293:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1294:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1295:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1296:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/PWM.c **** *
1299:.\Generated_Source\PSoC4/PWM.c **** * Return:
1300:.\Generated_Source\PSoC4/PWM.c **** *  None
1301:.\Generated_Source\PSoC4/PWM.c **** *
1302:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 56


1303:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/PWM.c **** {
 1833              		.loc 1 1304 0
 1834              		.cfi_startproc
 1835 0000 80B5     		push	{r7, lr}
 1836              	.LCFI95:
 1837              		.cfi_def_cfa_offset 8
 1838              		.cfi_offset 7, -8
 1839              		.cfi_offset 14, -4
 1840 0002 82B0     		sub	sp, sp, #8
 1841              	.LCFI96:
 1842              		.cfi_def_cfa_offset 16
 1843 0004 00AF     		add	r7, sp, #0
 1844              	.LCFI97:
 1845              		.cfi_def_cfa_register 7
 1846 0006 7860     		str	r0, [r7, #4]
1305:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1847              		.loc 1 1305 0
 1848 0008 024B     		ldr	r3, .L116
 1849 000a 7A68     		ldr	r2, [r7, #4]
 1850 000c 1A60     		str	r2, [r3]
1306:.\Generated_Source\PSoC4/PWM.c **** }
 1851              		.loc 1 1306 0
 1852 000e BD46     		mov	sp, r7
 1853 0010 02B0     		add	sp, sp, #8
 1854              		@ sp needed for prologue
 1855 0012 80BD     		pop	{r7, pc}
 1856              	.L117:
 1857              		.align	2
 1858              	.L116:
 1859 0014 38010540 		.word	1074069816
 1860              		.cfi_endproc
 1861              	.LFE35:
 1862              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1863              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1864              		.align	2
 1865              		.global	PWM_GetInterruptSourceMasked
 1866              		.code	16
 1867              		.thumb_func
 1868              		.type	PWM_GetInterruptSourceMasked, %function
 1869              	PWM_GetInterruptSourceMasked:
 1870              	.LFB36:
1307:.\Generated_Source\PSoC4/PWM.c **** 
1308:.\Generated_Source\PSoC4/PWM.c **** 
1309:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1312:.\Generated_Source\PSoC4/PWM.c **** *
1313:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1314:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1315:.\Generated_Source\PSoC4/PWM.c **** *
1316:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1317:.\Generated_Source\PSoC4/PWM.c **** *   None
1318:.\Generated_Source\PSoC4/PWM.c **** *
1319:.\Generated_Source\PSoC4/PWM.c **** * Return:
1320:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 57


1322:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1324:.\Generated_Source\PSoC4/PWM.c **** *
1325:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/PWM.c **** {
 1871              		.loc 1 1327 0
 1872              		.cfi_startproc
 1873 0000 80B5     		push	{r7, lr}
 1874              	.LCFI98:
 1875              		.cfi_def_cfa_offset 8
 1876              		.cfi_offset 7, -8
 1877              		.cfi_offset 14, -4
 1878 0002 00AF     		add	r7, sp, #0
 1879              	.LCFI99:
 1880              		.cfi_def_cfa_register 7
1328:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1881              		.loc 1 1328 0
 1882 0004 024B     		ldr	r3, .L120
 1883 0006 1B68     		ldr	r3, [r3]
1329:.\Generated_Source\PSoC4/PWM.c **** }
 1884              		.loc 1 1329 0
 1885 0008 181C     		mov	r0, r3
 1886 000a BD46     		mov	sp, r7
 1887              		@ sp needed for prologue
 1888 000c 80BD     		pop	{r7, pc}
 1889              	.L121:
 1890 000e C046     		.align	2
 1891              	.L120:
 1892 0010 3C010540 		.word	1074069820
 1893              		.cfi_endproc
 1894              	.LFE36:
 1895              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1896              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1897              		.align	2
 1898              		.global	PWM_GetInterruptSource
 1899              		.code	16
 1900              		.thumb_func
 1901              		.type	PWM_GetInterruptSource, %function
 1902              	PWM_GetInterruptSource:
 1903              	.LFB37:
1330:.\Generated_Source\PSoC4/PWM.c **** 
1331:.\Generated_Source\PSoC4/PWM.c **** 
1332:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1334:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/PWM.c **** *
1336:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1337:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/PWM.c **** *
1339:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1340:.\Generated_Source\PSoC4/PWM.c **** *  None
1341:.\Generated_Source\PSoC4/PWM.c **** *
1342:.\Generated_Source\PSoC4/PWM.c **** * Return:
1343:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1344:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1345:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 58


1346:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/PWM.c **** *
1348:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/PWM.c **** {
 1904              		.loc 1 1350 0
 1905              		.cfi_startproc
 1906 0000 80B5     		push	{r7, lr}
 1907              	.LCFI100:
 1908              		.cfi_def_cfa_offset 8
 1909              		.cfi_offset 7, -8
 1910              		.cfi_offset 14, -4
 1911 0002 00AF     		add	r7, sp, #0
 1912              	.LCFI101:
 1913              		.cfi_def_cfa_register 7
1351:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1914              		.loc 1 1351 0
 1915 0004 024B     		ldr	r3, .L124
 1916 0006 1B68     		ldr	r3, [r3]
1352:.\Generated_Source\PSoC4/PWM.c **** }
 1917              		.loc 1 1352 0
 1918 0008 181C     		mov	r0, r3
 1919 000a BD46     		mov	sp, r7
 1920              		@ sp needed for prologue
 1921 000c 80BD     		pop	{r7, pc}
 1922              	.L125:
 1923 000e C046     		.align	2
 1924              	.L124:
 1925 0010 30010540 		.word	1074069808
 1926              		.cfi_endproc
 1927              	.LFE37:
 1928              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1929              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1930              		.align	2
 1931              		.global	PWM_ClearInterrupt
 1932              		.code	16
 1933              		.thumb_func
 1934              		.type	PWM_ClearInterrupt, %function
 1935              	PWM_ClearInterrupt:
 1936              	.LFB38:
1353:.\Generated_Source\PSoC4/PWM.c **** 
1354:.\Generated_Source\PSoC4/PWM.c **** 
1355:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1357:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/PWM.c **** *
1359:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1360:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/PWM.c **** *
1362:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1363:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1365:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/PWM.c **** *
1368:.\Generated_Source\PSoC4/PWM.c **** * Return:
1369:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 59


1370:.\Generated_Source\PSoC4/PWM.c **** *
1371:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/PWM.c **** {
 1937              		.loc 1 1373 0
 1938              		.cfi_startproc
 1939 0000 80B5     		push	{r7, lr}
 1940              	.LCFI102:
 1941              		.cfi_def_cfa_offset 8
 1942              		.cfi_offset 7, -8
 1943              		.cfi_offset 14, -4
 1944 0002 82B0     		sub	sp, sp, #8
 1945              	.LCFI103:
 1946              		.cfi_def_cfa_offset 16
 1947 0004 00AF     		add	r7, sp, #0
 1948              	.LCFI104:
 1949              		.cfi_def_cfa_register 7
 1950 0006 7860     		str	r0, [r7, #4]
1374:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1951              		.loc 1 1374 0
 1952 0008 024B     		ldr	r3, .L127
 1953 000a 7A68     		ldr	r2, [r7, #4]
 1954 000c 1A60     		str	r2, [r3]
1375:.\Generated_Source\PSoC4/PWM.c **** }
 1955              		.loc 1 1375 0
 1956 000e BD46     		mov	sp, r7
 1957 0010 02B0     		add	sp, sp, #8
 1958              		@ sp needed for prologue
 1959 0012 80BD     		pop	{r7, pc}
 1960              	.L128:
 1961              		.align	2
 1962              	.L127:
 1963 0014 30010540 		.word	1074069808
 1964              		.cfi_endproc
 1965              	.LFE38:
 1966              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1967              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1968              		.align	2
 1969              		.global	PWM_SetInterrupt
 1970              		.code	16
 1971              		.thumb_func
 1972              		.type	PWM_SetInterrupt, %function
 1973              	PWM_SetInterrupt:
 1974              	.LFB39:
1376:.\Generated_Source\PSoC4/PWM.c **** 
1377:.\Generated_Source\PSoC4/PWM.c **** 
1378:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1380:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/PWM.c **** *
1382:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1383:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/PWM.c **** *
1385:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1386:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1387:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1388:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 60


1389:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/PWM.c **** *
1391:.\Generated_Source\PSoC4/PWM.c **** * Return:
1392:.\Generated_Source\PSoC4/PWM.c **** *  None
1393:.\Generated_Source\PSoC4/PWM.c **** *
1394:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/PWM.c **** {
 1975              		.loc 1 1396 0
 1976              		.cfi_startproc
 1977 0000 80B5     		push	{r7, lr}
 1978              	.LCFI105:
 1979              		.cfi_def_cfa_offset 8
 1980              		.cfi_offset 7, -8
 1981              		.cfi_offset 14, -4
 1982 0002 82B0     		sub	sp, sp, #8
 1983              	.LCFI106:
 1984              		.cfi_def_cfa_offset 16
 1985 0004 00AF     		add	r7, sp, #0
 1986              	.LCFI107:
 1987              		.cfi_def_cfa_register 7
 1988 0006 7860     		str	r0, [r7, #4]
1397:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1989              		.loc 1 1397 0
 1990 0008 024B     		ldr	r3, .L130
 1991 000a 7A68     		ldr	r2, [r7, #4]
 1992 000c 1A60     		str	r2, [r3]
1398:.\Generated_Source\PSoC4/PWM.c **** }
 1993              		.loc 1 1398 0
 1994 000e BD46     		mov	sp, r7
 1995 0010 02B0     		add	sp, sp, #8
 1996              		@ sp needed for prologue
 1997 0012 80BD     		pop	{r7, pc}
 1998              	.L131:
 1999              		.align	2
 2000              	.L130:
 2001 0014 34010540 		.word	1074069812
 2002              		.cfi_endproc
 2003              	.LFE39:
 2004              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 2005              		.text
 2006              	.Letext0:
 2007              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2008              		.section	.debug_info,"",%progbits
 2009              	.Ldebug_info0:
 2010 0000 BA070000 		.4byte	0x7ba
 2011 0004 0200     		.2byte	0x2
 2012 0006 00000000 		.4byte	.Ldebug_abbrev0
 2013 000a 04       		.byte	0x4
 2014 000b 01       		.uleb128 0x1
 2015 000c D2020000 		.4byte	.LASF76
 2016 0010 01       		.byte	0x1
 2017 0011 D3000000 		.4byte	.LASF77
 2018 0015 87030000 		.4byte	.LASF78
 2019 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2020 001d 00000000 		.4byte	0
 2021 0021 00000000 		.4byte	0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 61


 2022 0025 00000000 		.4byte	.Ldebug_line0
 2023 0029 02       		.uleb128 0x2
 2024 002a 01       		.byte	0x1
 2025 002b 06       		.byte	0x6
 2026 002c 8B000000 		.4byte	.LASF0
 2027 0030 02       		.uleb128 0x2
 2028 0031 01       		.byte	0x1
 2029 0032 08       		.byte	0x8
 2030 0033 1B030000 		.4byte	.LASF1
 2031 0037 02       		.uleb128 0x2
 2032 0038 02       		.byte	0x2
 2033 0039 05       		.byte	0x5
 2034 003a 52030000 		.4byte	.LASF2
 2035 003e 02       		.uleb128 0x2
 2036 003f 02       		.byte	0x2
 2037 0040 07       		.byte	0x7
 2038 0041 DC010000 		.4byte	.LASF3
 2039 0045 02       		.uleb128 0x2
 2040 0046 04       		.byte	0x4
 2041 0047 05       		.byte	0x5
 2042 0048 F2000000 		.4byte	.LASF4
 2043 004c 02       		.uleb128 0x2
 2044 004d 04       		.byte	0x4
 2045 004e 07       		.byte	0x7
 2046 004f C1010000 		.4byte	.LASF5
 2047 0053 02       		.uleb128 0x2
 2048 0054 08       		.byte	0x8
 2049 0055 05       		.byte	0x5
 2050 0056 7D000000 		.4byte	.LASF6
 2051 005a 02       		.uleb128 0x2
 2052 005b 08       		.byte	0x8
 2053 005c 07       		.byte	0x7
 2054 005d 2B000000 		.4byte	.LASF7
 2055 0061 03       		.uleb128 0x3
 2056 0062 04       		.byte	0x4
 2057 0063 05       		.byte	0x5
 2058 0064 696E7400 		.ascii	"int\000"
 2059 0068 02       		.uleb128 0x2
 2060 0069 04       		.byte	0x4
 2061 006a 07       		.byte	0x7
 2062 006b 99010000 		.4byte	.LASF8
 2063 006f 04       		.uleb128 0x4
 2064 0070 FB000000 		.4byte	.LASF9
 2065 0074 02       		.byte	0x2
 2066 0075 5B       		.byte	0x5b
 2067 0076 30000000 		.4byte	0x30
 2068 007a 04       		.uleb128 0x4
 2069 007b 48010000 		.4byte	.LASF10
 2070 007f 02       		.byte	0x2
 2071 0080 5D       		.byte	0x5d
 2072 0081 4C000000 		.4byte	0x4c
 2073 0085 02       		.uleb128 0x2
 2074 0086 04       		.byte	0x4
 2075 0087 04       		.byte	0x4
 2076 0088 A0020000 		.4byte	.LASF11
 2077 008c 02       		.uleb128 0x2
 2078 008d 08       		.byte	0x8
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 62


 2079 008e 04       		.byte	0x4
 2080 008f 01010000 		.4byte	.LASF12
 2081 0093 02       		.uleb128 0x2
 2082 0094 01       		.byte	0x1
 2083 0095 08       		.byte	0x8
 2084 0096 E7030000 		.4byte	.LASF13
 2085 009a 04       		.uleb128 0x4
 2086 009b 3E020000 		.4byte	.LASF14
 2087 009f 02       		.byte	0x2
 2088 00a0 F2       		.byte	0xf2
 2089 00a1 A5000000 		.4byte	0xa5
 2090 00a5 05       		.uleb128 0x5
 2091 00a6 7A000000 		.4byte	0x7a
 2092 00aa 02       		.uleb128 0x2
 2093 00ab 04       		.byte	0x4
 2094 00ac 07       		.byte	0x7
 2095 00ad 5F020000 		.4byte	.LASF15
 2096 00b1 06       		.uleb128 0x6
 2097 00b2 01       		.byte	0x1
 2098 00b3 29030000 		.4byte	.LASF16
 2099 00b7 01       		.byte	0x1
 2100 00b8 27       		.byte	0x27
 2101 00b9 01       		.byte	0x1
 2102 00ba 00000000 		.4byte	.LFB0
 2103 00be 50000000 		.4byte	.LFE0
 2104 00c2 00000000 		.4byte	.LLST0
 2105 00c6 01       		.byte	0x1
 2106 00c7 07       		.uleb128 0x7
 2107 00c8 01       		.byte	0x1
 2108 00c9 06000000 		.4byte	.LASF18
 2109 00cd 01       		.byte	0x1
 2110 00ce C8       		.byte	0xc8
 2111 00cf 01       		.byte	0x1
 2112 00d0 00000000 		.4byte	.LFB1
 2113 00d4 38000000 		.4byte	.LFE1
 2114 00d8 2C000000 		.4byte	.LLST1
 2115 00dc 01       		.byte	0x1
 2116 00dd F0000000 		.4byte	0xf0
 2117 00e1 08       		.uleb128 0x8
 2118 00e2 48040000 		.4byte	.LASF20
 2119 00e6 01       		.byte	0x1
 2120 00e7 CA       		.byte	0xca
 2121 00e8 6F000000 		.4byte	0x6f
 2122 00ec 02       		.byte	0x2
 2123 00ed 91       		.byte	0x91
 2124 00ee 6F       		.sleb128 -17
 2125 00ef 00       		.byte	0
 2126 00f0 06       		.uleb128 0x6
 2127 00f1 01       		.byte	0x1
 2128 00f2 00020000 		.4byte	.LASF17
 2129 00f6 01       		.byte	0x1
 2130 00f7 F7       		.byte	0xf7
 2131 00f8 01       		.byte	0x1
 2132 00f9 00000000 		.4byte	.LFB2
 2133 00fd 24000000 		.4byte	.LFE2
 2134 0101 64000000 		.4byte	.LLST2
 2135 0105 01       		.byte	0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 63


 2136 0106 09       		.uleb128 0x9
 2137 0107 01       		.byte	0x1
 2138 0108 2E010000 		.4byte	.LASF19
 2139 010c 01       		.byte	0x1
 2140 010d 1101     		.2byte	0x111
 2141 010f 01       		.byte	0x1
 2142 0110 00000000 		.4byte	.LFB3
 2143 0114 30000000 		.4byte	.LFE3
 2144 0118 90000000 		.4byte	.LLST3
 2145 011c 01       		.byte	0x1
 2146 011d 31010000 		.4byte	0x131
 2147 0121 0A       		.uleb128 0xa
 2148 0122 48040000 		.4byte	.LASF20
 2149 0126 01       		.byte	0x1
 2150 0127 1301     		.2byte	0x113
 2151 0129 6F000000 		.4byte	0x6f
 2152 012d 02       		.byte	0x2
 2153 012e 91       		.byte	0x91
 2154 012f 6F       		.sleb128 -17
 2155 0130 00       		.byte	0
 2156 0131 09       		.uleb128 0x9
 2157 0132 01       		.byte	0x1
 2158 0133 78040000 		.4byte	.LASF21
 2159 0137 01       		.byte	0x1
 2160 0138 3601     		.2byte	0x136
 2161 013a 01       		.byte	0x1
 2162 013b 00000000 		.4byte	.LFB4
 2163 013f 48000000 		.4byte	.LFE4
 2164 0143 C8000000 		.4byte	.LLST4
 2165 0147 01       		.byte	0x1
 2166 0148 6B010000 		.4byte	0x16b
 2167 014c 0B       		.uleb128 0xb
 2168 014d EC030000 		.4byte	.LASF23
 2169 0151 01       		.byte	0x1
 2170 0152 3601     		.2byte	0x136
 2171 0154 7A000000 		.4byte	0x7a
 2172 0158 02       		.byte	0x2
 2173 0159 91       		.byte	0x91
 2174 015a 64       		.sleb128 -28
 2175 015b 0A       		.uleb128 0xa
 2176 015c 48040000 		.4byte	.LASF20
 2177 0160 01       		.byte	0x1
 2178 0161 3801     		.2byte	0x138
 2179 0163 6F000000 		.4byte	0x6f
 2180 0167 02       		.byte	0x2
 2181 0168 91       		.byte	0x91
 2182 0169 6F       		.sleb128 -17
 2183 016a 00       		.byte	0
 2184 016b 09       		.uleb128 0x9
 2185 016c 01       		.byte	0x1
 2186 016d D9030000 		.4byte	.LASF22
 2187 0171 01       		.byte	0x1
 2188 0172 5701     		.2byte	0x157
 2189 0174 01       		.byte	0x1
 2190 0175 00000000 		.4byte	.LFB5
 2191 0179 48000000 		.4byte	.LFE5
 2192 017d 00010000 		.4byte	.LLST5
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 64


 2193 0181 01       		.byte	0x1
 2194 0182 A5010000 		.4byte	0x1a5
 2195 0186 0B       		.uleb128 0xb
 2196 0187 55000000 		.4byte	.LASF24
 2197 018b 01       		.byte	0x1
 2198 018c 5701     		.2byte	0x157
 2199 018e 7A000000 		.4byte	0x7a
 2200 0192 02       		.byte	0x2
 2201 0193 91       		.byte	0x91
 2202 0194 64       		.sleb128 -28
 2203 0195 0A       		.uleb128 0xa
 2204 0196 48040000 		.4byte	.LASF20
 2205 019a 01       		.byte	0x1
 2206 019b 5901     		.2byte	0x159
 2207 019d 6F000000 		.4byte	0x6f
 2208 01a1 02       		.byte	0x2
 2209 01a2 91       		.byte	0x91
 2210 01a3 6F       		.sleb128 -17
 2211 01a4 00       		.byte	0
 2212 01a5 09       		.uleb128 0x9
 2213 01a6 01       		.byte	0x1
 2214 01a7 EF010000 		.4byte	.LASF25
 2215 01ab 01       		.byte	0x1
 2216 01ac 7C01     		.2byte	0x17c
 2217 01ae 01       		.byte	0x1
 2218 01af 00000000 		.4byte	.LFB6
 2219 01b3 48000000 		.4byte	.LFE6
 2220 01b7 38010000 		.4byte	.LLST6
 2221 01bb 01       		.byte	0x1
 2222 01bc DF010000 		.4byte	0x1df
 2223 01c0 0B       		.uleb128 0xb
 2224 01c1 A6020000 		.4byte	.LASF26
 2225 01c5 01       		.byte	0x1
 2226 01c6 7C01     		.2byte	0x17c
 2227 01c8 7A000000 		.4byte	0x7a
 2228 01cc 02       		.byte	0x2
 2229 01cd 91       		.byte	0x91
 2230 01ce 64       		.sleb128 -28
 2231 01cf 0A       		.uleb128 0xa
 2232 01d0 48040000 		.4byte	.LASF20
 2233 01d4 01       		.byte	0x1
 2234 01d5 7E01     		.2byte	0x17e
 2235 01d7 6F000000 		.4byte	0x6f
 2236 01db 02       		.byte	0x2
 2237 01dc 91       		.byte	0x91
 2238 01dd 6F       		.sleb128 -17
 2239 01de 00       		.byte	0
 2240 01df 09       		.uleb128 0x9
 2241 01e0 01       		.byte	0x1
 2242 01e1 7F020000 		.4byte	.LASF27
 2243 01e5 01       		.byte	0x1
 2244 01e6 9C01     		.2byte	0x19c
 2245 01e8 01       		.byte	0x1
 2246 01e9 00000000 		.4byte	.LFB7
 2247 01ed 4C000000 		.4byte	.LFE7
 2248 01f1 70010000 		.4byte	.LLST7
 2249 01f5 01       		.byte	0x1
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 65


 2250 01f6 19020000 		.4byte	0x219
 2251 01fa 0B       		.uleb128 0xb
 2252 01fb 6A040000 		.4byte	.LASF28
 2253 01ff 01       		.byte	0x1
 2254 0200 9C01     		.2byte	0x19c
 2255 0202 7A000000 		.4byte	0x7a
 2256 0206 02       		.byte	0x2
 2257 0207 91       		.byte	0x91
 2258 0208 64       		.sleb128 -28
 2259 0209 0A       		.uleb128 0xa
 2260 020a 48040000 		.4byte	.LASF20
 2261 020e 01       		.byte	0x1
 2262 020f 9E01     		.2byte	0x19e
 2263 0211 6F000000 		.4byte	0x6f
 2264 0215 02       		.byte	0x2
 2265 0216 91       		.byte	0x91
 2266 0217 6F       		.sleb128 -17
 2267 0218 00       		.byte	0
 2268 0219 0C       		.uleb128 0xc
 2269 021a 01       		.byte	0x1
 2270 021b 43030000 		.4byte	.LASF29
 2271 021f 01       		.byte	0x1
 2272 0220 D201     		.2byte	0x1d2
 2273 0222 01       		.byte	0x1
 2274 0223 00000000 		.4byte	.LFB8
 2275 0227 1C000000 		.4byte	.LFE8
 2276 022b A8010000 		.4byte	.LLST8
 2277 022f 01       		.byte	0x1
 2278 0230 44020000 		.4byte	0x244
 2279 0234 0B       		.uleb128 0xb
 2280 0235 D3010000 		.4byte	.LASF30
 2281 0239 01       		.byte	0x1
 2282 023a D201     		.2byte	0x1d2
 2283 023c 7A000000 		.4byte	0x7a
 2284 0240 02       		.byte	0x2
 2285 0241 91       		.byte	0x91
 2286 0242 74       		.sleb128 -12
 2287 0243 00       		.byte	0
 2288 0244 09       		.uleb128 0x9
 2289 0245 01       		.byte	0x1
 2290 0246 11000000 		.4byte	.LASF31
 2291 024a 01       		.byte	0x1
 2292 024b F601     		.2byte	0x1f6
 2293 024d 01       		.byte	0x1
 2294 024e 00000000 		.4byte	.LFB9
 2295 0252 48000000 		.4byte	.LFE9
 2296 0256 E0010000 		.4byte	.LLST9
 2297 025a 01       		.byte	0x1
 2298 025b 7E020000 		.4byte	0x27e
 2299 025f 0B       		.uleb128 0xb
 2300 0260 68020000 		.4byte	.LASF32
 2301 0264 01       		.byte	0x1
 2302 0265 F601     		.2byte	0x1f6
 2303 0267 7A000000 		.4byte	0x7a
 2304 026b 02       		.byte	0x2
 2305 026c 91       		.byte	0x91
 2306 026d 64       		.sleb128 -28
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 66


 2307 026e 0A       		.uleb128 0xa
 2308 026f 48040000 		.4byte	.LASF20
 2309 0273 01       		.byte	0x1
 2310 0274 F801     		.2byte	0x1f8
 2311 0276 6F000000 		.4byte	0x6f
 2312 027a 02       		.byte	0x2
 2313 027b 91       		.byte	0x91
 2314 027c 6F       		.sleb128 -17
 2315 027d 00       		.byte	0
 2316 027e 09       		.uleb128 0x9
 2317 027f 01       		.byte	0x1
 2318 0280 84040000 		.4byte	.LASF33
 2319 0284 01       		.byte	0x1
 2320 0285 1802     		.2byte	0x218
 2321 0287 01       		.byte	0x1
 2322 0288 00000000 		.4byte	.LFB10
 2323 028c 48000000 		.4byte	.LFE10
 2324 0290 18020000 		.4byte	.LLST10
 2325 0294 01       		.byte	0x1
 2326 0295 B8020000 		.4byte	0x2b8
 2327 0299 0B       		.uleb128 0xb
 2328 029a 32030000 		.4byte	.LASF34
 2329 029e 01       		.byte	0x1
 2330 029f 1802     		.2byte	0x218
 2331 02a1 7A000000 		.4byte	0x7a
 2332 02a5 02       		.byte	0x2
 2333 02a6 91       		.byte	0x91
 2334 02a7 64       		.sleb128 -28
 2335 02a8 0A       		.uleb128 0xa
 2336 02a9 48040000 		.4byte	.LASF20
 2337 02ad 01       		.byte	0x1
 2338 02ae 1A02     		.2byte	0x21a
 2339 02b0 6F000000 		.4byte	0x6f
 2340 02b4 02       		.byte	0x2
 2341 02b5 91       		.byte	0x91
 2342 02b6 6F       		.sleb128 -17
 2343 02b7 00       		.byte	0
 2344 02b8 09       		.uleb128 0x9
 2345 02b9 01       		.byte	0x1
 2346 02ba A6010000 		.4byte	.LASF35
 2347 02be 01       		.byte	0x1
 2348 02bf 3902     		.2byte	0x239
 2349 02c1 01       		.byte	0x1
 2350 02c2 00000000 		.4byte	.LFB11
 2351 02c6 4C000000 		.4byte	.LFE11
 2352 02ca 50020000 		.4byte	.LLST11
 2353 02ce 01       		.byte	0x1
 2354 02cf F2020000 		.4byte	0x2f2
 2355 02d3 0B       		.uleb128 0xb
 2356 02d4 80010000 		.4byte	.LASF36
 2357 02d8 01       		.byte	0x1
 2358 02d9 3902     		.2byte	0x239
 2359 02db 7A000000 		.4byte	0x7a
 2360 02df 02       		.byte	0x2
 2361 02e0 91       		.byte	0x91
 2362 02e1 64       		.sleb128 -28
 2363 02e2 0A       		.uleb128 0xa
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 67


 2364 02e3 48040000 		.4byte	.LASF20
 2365 02e7 01       		.byte	0x1
 2366 02e8 3B02     		.2byte	0x23b
 2367 02ea 6F000000 		.4byte	0x6f
 2368 02ee 02       		.byte	0x2
 2369 02ef 91       		.byte	0x91
 2370 02f0 6F       		.sleb128 -17
 2371 02f1 00       		.byte	0
 2372 02f2 09       		.uleb128 0x9
 2373 02f3 01       		.byte	0x1
 2374 02f4 37010000 		.4byte	.LASF37
 2375 02f8 01       		.byte	0x1
 2376 02f9 5A02     		.2byte	0x25a
 2377 02fb 01       		.byte	0x1
 2378 02fc 00000000 		.4byte	.LFB12
 2379 0300 48000000 		.4byte	.LFE12
 2380 0304 88020000 		.4byte	.LLST12
 2381 0308 01       		.byte	0x1
 2382 0309 2C030000 		.4byte	0x32c
 2383 030d 0B       		.uleb128 0xb
 2384 030e 6C010000 		.4byte	.LASF38
 2385 0312 01       		.byte	0x1
 2386 0313 5A02     		.2byte	0x25a
 2387 0315 7A000000 		.4byte	0x7a
 2388 0319 02       		.byte	0x2
 2389 031a 91       		.byte	0x91
 2390 031b 64       		.sleb128 -28
 2391 031c 0A       		.uleb128 0xa
 2392 031d 48040000 		.4byte	.LASF20
 2393 0321 01       		.byte	0x1
 2394 0322 5C02     		.2byte	0x25c
 2395 0324 6F000000 		.4byte	0x6f
 2396 0328 02       		.byte	0x2
 2397 0329 91       		.byte	0x91
 2398 032a 6F       		.sleb128 -17
 2399 032b 00       		.byte	0
 2400 032c 0C       		.uleb128 0xc
 2401 032d 01       		.byte	0x1
 2402 032e 5C000000 		.4byte	.LASF39
 2403 0332 01       		.byte	0x1
 2404 0333 7802     		.2byte	0x278
 2405 0335 01       		.byte	0x1
 2406 0336 00000000 		.4byte	.LFB13
 2407 033a 1C000000 		.4byte	.LFE13
 2408 033e C0020000 		.4byte	.LLST13
 2409 0342 01       		.byte	0x1
 2410 0343 57030000 		.4byte	0x357
 2411 0347 0B       		.uleb128 0xb
 2412 0348 00000000 		.4byte	.LASF40
 2413 034c 01       		.byte	0x1
 2414 034d 7802     		.2byte	0x278
 2415 034f 7A000000 		.4byte	0x7a
 2416 0353 02       		.byte	0x2
 2417 0354 91       		.byte	0x91
 2418 0355 74       		.sleb128 -12
 2419 0356 00       		.byte	0
 2420 0357 0D       		.uleb128 0xd
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 68


 2421 0358 01       		.byte	0x1
 2422 0359 6D000000 		.4byte	.LASF45
 2423 035d 01       		.byte	0x1
 2424 035e 8C02     		.2byte	0x28c
 2425 0360 01       		.byte	0x1
 2426 0361 7A000000 		.4byte	0x7a
 2427 0365 00000000 		.4byte	.LFB14
 2428 0369 18000000 		.4byte	.LFE14
 2429 036d F8020000 		.4byte	.LLST14
 2430 0371 01       		.byte	0x1
 2431 0372 09       		.uleb128 0x9
 2432 0373 01       		.byte	0x1
 2433 0374 BB040000 		.4byte	.LASF41
 2434 0378 01       		.byte	0x1
 2435 0379 A902     		.2byte	0x2a9
 2436 037b 01       		.byte	0x1
 2437 037c 00000000 		.4byte	.LFB15
 2438 0380 48000000 		.4byte	.LFE15
 2439 0384 24030000 		.4byte	.LLST15
 2440 0388 01       		.byte	0x1
 2441 0389 AC030000 		.4byte	0x3ac
 2442 038d 0B       		.uleb128 0xb
 2443 038e 14040000 		.4byte	.LASF42
 2444 0392 01       		.byte	0x1
 2445 0393 A902     		.2byte	0x2a9
 2446 0395 7A000000 		.4byte	0x7a
 2447 0399 02       		.byte	0x2
 2448 039a 91       		.byte	0x91
 2449 039b 64       		.sleb128 -28
 2450 039c 0A       		.uleb128 0xa
 2451 039d 48040000 		.4byte	.LASF20
 2452 03a1 01       		.byte	0x1
 2453 03a2 AB02     		.2byte	0x2ab
 2454 03a4 6F000000 		.4byte	0x6f
 2455 03a8 02       		.byte	0x2
 2456 03a9 91       		.byte	0x91
 2457 03aa 6F       		.sleb128 -17
 2458 03ab 00       		.byte	0
 2459 03ac 0C       		.uleb128 0xc
 2460 03ad 01       		.byte	0x1
 2461 03ae 2E020000 		.4byte	.LASF43
 2462 03b2 01       		.byte	0x1
 2463 03b3 C602     		.2byte	0x2c6
 2464 03b5 01       		.byte	0x1
 2465 03b6 00000000 		.4byte	.LFB16
 2466 03ba 1C000000 		.4byte	.LFE16
 2467 03be 5C030000 		.4byte	.LLST16
 2468 03c2 01       		.byte	0x1
 2469 03c3 D7030000 		.4byte	0x3d7
 2470 03c7 0B       		.uleb128 0xb
 2471 03c8 24000000 		.4byte	.LASF44
 2472 03cc 01       		.byte	0x1
 2473 03cd C602     		.2byte	0x2c6
 2474 03cf 7A000000 		.4byte	0x7a
 2475 03d3 02       		.byte	0x2
 2476 03d4 91       		.byte	0x91
 2477 03d5 74       		.sleb128 -12
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 69


 2478 03d6 00       		.byte	0
 2479 03d7 0D       		.uleb128 0xd
 2480 03d8 01       		.byte	0x1
 2481 03d9 50020000 		.4byte	.LASF46
 2482 03dd 01       		.byte	0x1
 2483 03de DA02     		.2byte	0x2da
 2484 03e0 01       		.byte	0x1
 2485 03e1 7A000000 		.4byte	0x7a
 2486 03e5 00000000 		.4byte	.LFB17
 2487 03e9 18000000 		.4byte	.LFE17
 2488 03ed 94030000 		.4byte	.LLST17
 2489 03f1 01       		.byte	0x1
 2490 03f2 09       		.uleb128 0x9
 2491 03f3 01       		.byte	0x1
 2492 03f4 1B010000 		.4byte	.LASF47
 2493 03f8 01       		.byte	0x1
 2494 03f9 F402     		.2byte	0x2f4
 2495 03fb 01       		.byte	0x1
 2496 03fc 00000000 		.4byte	.LFB18
 2497 0400 48000000 		.4byte	.LFE18
 2498 0404 C0030000 		.4byte	.LLST18
 2499 0408 01       		.byte	0x1
 2500 0409 2C040000 		.4byte	0x42c
 2501 040d 0B       		.uleb128 0xb
 2502 040e 99040000 		.4byte	.LASF48
 2503 0412 01       		.byte	0x1
 2504 0413 F402     		.2byte	0x2f4
 2505 0415 7A000000 		.4byte	0x7a
 2506 0419 02       		.byte	0x2
 2507 041a 91       		.byte	0x91
 2508 041b 64       		.sleb128 -28
 2509 041c 0A       		.uleb128 0xa
 2510 041d 48040000 		.4byte	.LASF20
 2511 0421 01       		.byte	0x1
 2512 0422 F602     		.2byte	0x2f6
 2513 0424 6F000000 		.4byte	0x6f
 2514 0428 02       		.byte	0x2
 2515 0429 91       		.byte	0x91
 2516 042a 6F       		.sleb128 -17
 2517 042b 00       		.byte	0
 2518 042c 0C       		.uleb128 0xc
 2519 042d 01       		.byte	0x1
 2520 042e C6030000 		.4byte	.LASF49
 2521 0432 01       		.byte	0x1
 2522 0433 0F03     		.2byte	0x30f
 2523 0435 01       		.byte	0x1
 2524 0436 00000000 		.4byte	.LFB19
 2525 043a 1C000000 		.4byte	.LFE19
 2526 043e F8030000 		.4byte	.LLST19
 2527 0442 01       		.byte	0x1
 2528 0443 57040000 		.4byte	0x457
 2529 0447 0B       		.uleb128 0xb
 2530 0448 2B040000 		.4byte	.LASF50
 2531 044c 01       		.byte	0x1
 2532 044d 0F03     		.2byte	0x30f
 2533 044f 7A000000 		.4byte	0x7a
 2534 0453 02       		.byte	0x2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 70


 2535 0454 91       		.byte	0x91
 2536 0455 74       		.sleb128 -12
 2537 0456 00       		.byte	0
 2538 0457 0D       		.uleb128 0xd
 2539 0458 01       		.byte	0x1
 2540 0459 8E020000 		.4byte	.LASF51
 2541 045d 01       		.byte	0x1
 2542 045e 2303     		.2byte	0x323
 2543 0460 01       		.byte	0x1
 2544 0461 7A000000 		.4byte	0x7a
 2545 0465 00000000 		.4byte	.LFB20
 2546 0469 18000000 		.4byte	.LFE20
 2547 046d 30040000 		.4byte	.LLST20
 2548 0471 01       		.byte	0x1
 2549 0472 09       		.uleb128 0x9
 2550 0473 01       		.byte	0x1
 2551 0474 C0020000 		.4byte	.LASF52
 2552 0478 01       		.byte	0x1
 2553 0479 3D03     		.2byte	0x33d
 2554 047b 01       		.byte	0x1
 2555 047c 00000000 		.4byte	.LFB21
 2556 0480 48000000 		.4byte	.LFE21
 2557 0484 5C040000 		.4byte	.LLST21
 2558 0488 01       		.byte	0x1
 2559 0489 AC040000 		.4byte	0x4ac
 2560 048d 0B       		.uleb128 0xb
 2561 048e 99040000 		.4byte	.LASF48
 2562 0492 01       		.byte	0x1
 2563 0493 3D03     		.2byte	0x33d
 2564 0495 7A000000 		.4byte	0x7a
 2565 0499 02       		.byte	0x2
 2566 049a 91       		.byte	0x91
 2567 049b 64       		.sleb128 -28
 2568 049c 0A       		.uleb128 0xa
 2569 049d 48040000 		.4byte	.LASF20
 2570 04a1 01       		.byte	0x1
 2571 04a2 3F03     		.2byte	0x33f
 2572 04a4 6F000000 		.4byte	0x6f
 2573 04a8 02       		.byte	0x2
 2574 04a9 91       		.byte	0x91
 2575 04aa 6F       		.sleb128 -17
 2576 04ab 00       		.byte	0
 2577 04ac 0C       		.uleb128 0xc
 2578 04ad 01       		.byte	0x1
 2579 04ae 1D020000 		.4byte	.LASF53
 2580 04b2 01       		.byte	0x1
 2581 04b3 5A03     		.2byte	0x35a
 2582 04b5 01       		.byte	0x1
 2583 04b6 00000000 		.4byte	.LFB22
 2584 04ba 1C000000 		.4byte	.LFE22
 2585 04be 94040000 		.4byte	.LLST22
 2586 04c2 01       		.byte	0x1
 2587 04c3 D7040000 		.4byte	0x4d7
 2588 04c7 0B       		.uleb128 0xb
 2589 04c8 77020000 		.4byte	.LASF54
 2590 04cc 01       		.byte	0x1
 2591 04cd 5A03     		.2byte	0x35a
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 71


 2592 04cf 7A000000 		.4byte	0x7a
 2593 04d3 02       		.byte	0x2
 2594 04d4 91       		.byte	0x91
 2595 04d5 74       		.sleb128 -12
 2596 04d6 00       		.byte	0
 2597 04d7 0D       		.uleb128 0xd
 2598 04d8 01       		.byte	0x1
 2599 04d9 CE040000 		.4byte	.LASF55
 2600 04dd 01       		.byte	0x1
 2601 04de 8403     		.2byte	0x384
 2602 04e0 01       		.byte	0x1
 2603 04e1 7A000000 		.4byte	0x7a
 2604 04e5 00000000 		.4byte	.LFB23
 2605 04e9 18000000 		.4byte	.LFE23
 2606 04ed CC040000 		.4byte	.LLST23
 2607 04f1 01       		.byte	0x1
 2608 04f2 0C       		.uleb128 0xc
 2609 04f3 01       		.byte	0x1
 2610 04f4 97000000 		.4byte	.LASF56
 2611 04f8 01       		.byte	0x1
 2612 04f9 B003     		.2byte	0x3b0
 2613 04fb 01       		.byte	0x1
 2614 04fc 00000000 		.4byte	.LFB24
 2615 0500 1C000000 		.4byte	.LFE24
 2616 0504 F8040000 		.4byte	.LLST24
 2617 0508 01       		.byte	0x1
 2618 0509 1D050000 		.4byte	0x51d
 2619 050d 0B       		.uleb128 0xb
 2620 050e 20040000 		.4byte	.LASF57
 2621 0512 01       		.byte	0x1
 2622 0513 B003     		.2byte	0x3b0
 2623 0515 7A000000 		.4byte	0x7a
 2624 0519 02       		.byte	0x2
 2625 051a 91       		.byte	0x91
 2626 051b 74       		.sleb128 -12
 2627 051c 00       		.byte	0
 2628 051d 0D       		.uleb128 0xd
 2629 051e 01       		.byte	0x1
 2630 051f 08010000 		.4byte	.LASF58
 2631 0523 01       		.byte	0x1
 2632 0524 DA03     		.2byte	0x3da
 2633 0526 01       		.byte	0x1
 2634 0527 7A000000 		.4byte	0x7a
 2635 052b 00000000 		.4byte	.LFB25
 2636 052f 18000000 		.4byte	.LFE25
 2637 0533 30050000 		.4byte	.LLST25
 2638 0537 01       		.byte	0x1
 2639 0538 0D       		.uleb128 0xd
 2640 0539 01       		.byte	0x1
 2641 053a B0020000 		.4byte	.LASF59
 2642 053e 01       		.byte	0x1
 2643 053f 0604     		.2byte	0x406
 2644 0541 01       		.byte	0x1
 2645 0542 7A000000 		.4byte	0x7a
 2646 0546 00000000 		.4byte	.LFB26
 2647 054a 18000000 		.4byte	.LFE26
 2648 054e 5C050000 		.4byte	.LLST26
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 72


 2649 0552 01       		.byte	0x1
 2650 0553 0D       		.uleb128 0xd
 2651 0554 01       		.byte	0x1
 2652 0555 35040000 		.4byte	.LASF60
 2653 0559 01       		.byte	0x1
 2654 055a 1B04     		.2byte	0x41b
 2655 055c 01       		.byte	0x1
 2656 055d 7A000000 		.4byte	0x7a
 2657 0561 00000000 		.4byte	.LFB27
 2658 0565 18000000 		.4byte	.LFE27
 2659 0569 88050000 		.4byte	.LLST27
 2660 056d 01       		.byte	0x1
 2661 056e 09       		.uleb128 0x9
 2662 056f 01       		.byte	0x1
 2663 0570 42000000 		.4byte	.LASF61
 2664 0574 01       		.byte	0x1
 2665 0575 3604     		.2byte	0x436
 2666 0577 01       		.byte	0x1
 2667 0578 00000000 		.4byte	.LFB28
 2668 057c 44000000 		.4byte	.LFE28
 2669 0580 B4050000 		.4byte	.LLST28
 2670 0584 01       		.byte	0x1
 2671 0585 A8050000 		.4byte	0x5a8
 2672 0589 0B       		.uleb128 0xb
 2673 058a 60010000 		.4byte	.LASF62
 2674 058e 01       		.byte	0x1
 2675 058f 3604     		.2byte	0x436
 2676 0591 7A000000 		.4byte	0x7a
 2677 0595 02       		.byte	0x2
 2678 0596 91       		.byte	0x91
 2679 0597 64       		.sleb128 -28
 2680 0598 0A       		.uleb128 0xa
 2681 0599 48040000 		.4byte	.LASF20
 2682 059d 01       		.byte	0x1
 2683 059e 3804     		.2byte	0x438
 2684 05a0 6F000000 		.4byte	0x6f
 2685 05a4 02       		.byte	0x2
 2686 05a5 91       		.byte	0x91
 2687 05a6 6F       		.sleb128 -17
 2688 05a7 00       		.byte	0
 2689 05a8 09       		.uleb128 0x9
 2690 05a9 01       		.byte	0x1
 2691 05aa 02040000 		.4byte	.LASF63
 2692 05ae 01       		.byte	0x1
 2693 05af 5704     		.2byte	0x457
 2694 05b1 01       		.byte	0x1
 2695 05b2 00000000 		.4byte	.LFB29
 2696 05b6 44000000 		.4byte	.LFE29
 2697 05ba EC050000 		.4byte	.LLST29
 2698 05be 01       		.byte	0x1
 2699 05bf E2050000 		.4byte	0x5e2
 2700 05c3 0B       		.uleb128 0xb
 2701 05c4 60010000 		.4byte	.LASF62
 2702 05c8 01       		.byte	0x1
 2703 05c9 5704     		.2byte	0x457
 2704 05cb 7A000000 		.4byte	0x7a
 2705 05cf 02       		.byte	0x2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 73


 2706 05d0 91       		.byte	0x91
 2707 05d1 64       		.sleb128 -28
 2708 05d2 0A       		.uleb128 0xa
 2709 05d3 48040000 		.4byte	.LASF20
 2710 05d7 01       		.byte	0x1
 2711 05d8 5904     		.2byte	0x459
 2712 05da 6F000000 		.4byte	0x6f
 2713 05de 02       		.byte	0x2
 2714 05df 91       		.byte	0x91
 2715 05e0 6F       		.sleb128 -17
 2716 05e1 00       		.byte	0
 2717 05e2 09       		.uleb128 0x9
 2718 05e3 01       		.byte	0x1
 2719 05e4 4F010000 		.4byte	.LASF64
 2720 05e8 01       		.byte	0x1
 2721 05e9 7804     		.2byte	0x478
 2722 05eb 01       		.byte	0x1
 2723 05ec 00000000 		.4byte	.LFB30
 2724 05f0 48000000 		.4byte	.LFE30
 2725 05f4 24060000 		.4byte	.LLST30
 2726 05f8 01       		.byte	0x1
 2727 05f9 1C060000 		.4byte	0x61c
 2728 05fd 0B       		.uleb128 0xb
 2729 05fe 60010000 		.4byte	.LASF62
 2730 0602 01       		.byte	0x1
 2731 0603 7804     		.2byte	0x478
 2732 0605 7A000000 		.4byte	0x7a
 2733 0609 02       		.byte	0x2
 2734 060a 91       		.byte	0x91
 2735 060b 64       		.sleb128 -28
 2736 060c 0A       		.uleb128 0xa
 2737 060d 48040000 		.4byte	.LASF20
 2738 0611 01       		.byte	0x1
 2739 0612 7A04     		.2byte	0x47a
 2740 0614 6F000000 		.4byte	0x6f
 2741 0618 02       		.byte	0x2
 2742 0619 91       		.byte	0x91
 2743 061a 6F       		.sleb128 -17
 2744 061b 00       		.byte	0
 2745 061c 09       		.uleb128 0x9
 2746 061d 01       		.byte	0x1
 2747 061e 89010000 		.4byte	.LASF65
 2748 0622 01       		.byte	0x1
 2749 0623 9804     		.2byte	0x498
 2750 0625 01       		.byte	0x1
 2751 0626 00000000 		.4byte	.LFB31
 2752 062a 44000000 		.4byte	.LFE31
 2753 062e 5C060000 		.4byte	.LLST31
 2754 0632 01       		.byte	0x1
 2755 0633 56060000 		.4byte	0x656
 2756 0637 0B       		.uleb128 0xb
 2757 0638 60010000 		.4byte	.LASF62
 2758 063c 01       		.byte	0x1
 2759 063d 9804     		.2byte	0x498
 2760 063f 7A000000 		.4byte	0x7a
 2761 0643 02       		.byte	0x2
 2762 0644 91       		.byte	0x91
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 74


 2763 0645 64       		.sleb128 -28
 2764 0646 0A       		.uleb128 0xa
 2765 0647 48040000 		.4byte	.LASF20
 2766 064b 01       		.byte	0x1
 2767 064c 9A04     		.2byte	0x49a
 2768 064e 6F000000 		.4byte	0x6f
 2769 0652 02       		.byte	0x2
 2770 0653 91       		.byte	0x91
 2771 0654 6F       		.sleb128 -17
 2772 0655 00       		.byte	0
 2773 0656 09       		.uleb128 0x9
 2774 0657 01       		.byte	0x1
 2775 0658 59040000 		.4byte	.LASF66
 2776 065c 01       		.byte	0x1
 2777 065d B904     		.2byte	0x4b9
 2778 065f 01       		.byte	0x1
 2779 0660 00000000 		.4byte	.LFB32
 2780 0664 44000000 		.4byte	.LFE32
 2781 0668 94060000 		.4byte	.LLST32
 2782 066c 01       		.byte	0x1
 2783 066d 90060000 		.4byte	0x690
 2784 0671 0B       		.uleb128 0xb
 2785 0672 60010000 		.4byte	.LASF62
 2786 0676 01       		.byte	0x1
 2787 0677 B904     		.2byte	0x4b9
 2788 0679 7A000000 		.4byte	0x7a
 2789 067d 02       		.byte	0x2
 2790 067e 91       		.byte	0x91
 2791 067f 64       		.sleb128 -28
 2792 0680 0A       		.uleb128 0xa
 2793 0681 48040000 		.4byte	.LASF20
 2794 0685 01       		.byte	0x1
 2795 0686 BB04     		.2byte	0x4bb
 2796 0688 6F000000 		.4byte	0x6f
 2797 068c 02       		.byte	0x2
 2798 068d 91       		.byte	0x91
 2799 068e 6F       		.sleb128 -17
 2800 068f 00       		.byte	0
 2801 0690 09       		.uleb128 0x9
 2802 0691 01       		.byte	0x1
 2803 0692 0A020000 		.4byte	.LASF67
 2804 0696 01       		.byte	0x1
 2805 0697 E104     		.2byte	0x4e1
 2806 0699 01       		.byte	0x1
 2807 069a 00000000 		.4byte	.LFB33
 2808 069e 3C000000 		.4byte	.LFE33
 2809 06a2 CC060000 		.4byte	.LLST33
 2810 06a6 01       		.byte	0x1
 2811 06a7 D9060000 		.4byte	0x6d9
 2812 06ab 0B       		.uleb128 0xb
 2813 06ac 6C010000 		.4byte	.LASF38
 2814 06b0 01       		.byte	0x1
 2815 06b1 E104     		.2byte	0x4e1
 2816 06b3 7A000000 		.4byte	0x7a
 2817 06b7 02       		.byte	0x2
 2818 06b8 91       		.byte	0x91
 2819 06b9 64       		.sleb128 -28
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 75


 2820 06ba 0B       		.uleb128 0xb
 2821 06bb B9010000 		.4byte	.LASF68
 2822 06bf 01       		.byte	0x1
 2823 06c0 E104     		.2byte	0x4e1
 2824 06c2 7A000000 		.4byte	0x7a
 2825 06c6 02       		.byte	0x2
 2826 06c7 91       		.byte	0x91
 2827 06c8 60       		.sleb128 -32
 2828 06c9 0A       		.uleb128 0xa
 2829 06ca 48040000 		.4byte	.LASF20
 2830 06ce 01       		.byte	0x1
 2831 06cf E304     		.2byte	0x4e3
 2832 06d1 6F000000 		.4byte	0x6f
 2833 06d5 02       		.byte	0x2
 2834 06d6 91       		.byte	0x91
 2835 06d7 6F       		.sleb128 -17
 2836 06d8 00       		.byte	0
 2837 06d9 0D       		.uleb128 0xd
 2838 06da 01       		.byte	0x1
 2839 06db 71010000 		.4byte	.LASF69
 2840 06df 01       		.byte	0x1
 2841 06e0 FE04     		.2byte	0x4fe
 2842 06e2 01       		.byte	0x1
 2843 06e3 7A000000 		.4byte	0x7a
 2844 06e7 00000000 		.4byte	.LFB34
 2845 06eb 20000000 		.4byte	.LFE34
 2846 06ef 04070000 		.4byte	.LLST34
 2847 06f3 01       		.byte	0x1
 2848 06f4 0C       		.uleb128 0xc
 2849 06f5 01       		.byte	0x1
 2850 06f6 AB000000 		.4byte	.LASF70
 2851 06fa 01       		.byte	0x1
 2852 06fb 1705     		.2byte	0x517
 2853 06fd 01       		.byte	0x1
 2854 06fe 00000000 		.4byte	.LFB35
 2855 0702 18000000 		.4byte	.LFE35
 2856 0706 30070000 		.4byte	.LLST35
 2857 070a 01       		.byte	0x1
 2858 070b 1F070000 		.4byte	0x71f
 2859 070f 0B       		.uleb128 0xb
 2860 0710 79030000 		.4byte	.LASF71
 2861 0714 01       		.byte	0x1
 2862 0715 1705     		.2byte	0x517
 2863 0717 7A000000 		.4byte	0x7a
 2864 071b 02       		.byte	0x2
 2865 071c 91       		.byte	0x91
 2866 071d 74       		.sleb128 -12
 2867 071e 00       		.byte	0
 2868 071f 0D       		.uleb128 0xd
 2869 0720 01       		.byte	0x1
 2870 0721 5C030000 		.4byte	.LASF72
 2871 0725 01       		.byte	0x1
 2872 0726 2E05     		.2byte	0x52e
 2873 0728 01       		.byte	0x1
 2874 0729 7A000000 		.4byte	0x7a
 2875 072d 00000000 		.4byte	.LFB36
 2876 0731 14000000 		.4byte	.LFE36
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 76


 2877 0735 68070000 		.4byte	.LLST36
 2878 0739 01       		.byte	0x1
 2879 073a 0D       		.uleb128 0xd
 2880 073b 01       		.byte	0x1
 2881 073c A4040000 		.4byte	.LASF73
 2882 0740 01       		.byte	0x1
 2883 0741 4505     		.2byte	0x545
 2884 0743 01       		.byte	0x1
 2885 0744 7A000000 		.4byte	0x7a
 2886 0748 00000000 		.4byte	.LFB37
 2887 074c 14000000 		.4byte	.LFE37
 2888 0750 94070000 		.4byte	.LLST37
 2889 0754 01       		.byte	0x1
 2890 0755 0C       		.uleb128 0xc
 2891 0756 01       		.byte	0x1
 2892 0757 C0000000 		.4byte	.LASF74
 2893 075b 01       		.byte	0x1
 2894 075c 5C05     		.2byte	0x55c
 2895 075e 01       		.byte	0x1
 2896 075f 00000000 		.4byte	.LFB38
 2897 0763 18000000 		.4byte	.LFE38
 2898 0767 C0070000 		.4byte	.LLST38
 2899 076b 01       		.byte	0x1
 2900 076c 80070000 		.4byte	0x780
 2901 0770 0B       		.uleb128 0xb
 2902 0771 79030000 		.4byte	.LASF71
 2903 0775 01       		.byte	0x1
 2904 0776 5C05     		.2byte	0x55c
 2905 0778 7A000000 		.4byte	0x7a
 2906 077c 02       		.byte	0x2
 2907 077d 91       		.byte	0x91
 2908 077e 74       		.sleb128 -12
 2909 077f 00       		.byte	0
 2910 0780 0C       		.uleb128 0xc
 2911 0781 01       		.byte	0x1
 2912 0782 F1030000 		.4byte	.LASF75
 2913 0786 01       		.byte	0x1
 2914 0787 7305     		.2byte	0x573
 2915 0789 01       		.byte	0x1
 2916 078a 00000000 		.4byte	.LFB39
 2917 078e 18000000 		.4byte	.LFE39
 2918 0792 F8070000 		.4byte	.LLST39
 2919 0796 01       		.byte	0x1
 2920 0797 AB070000 		.4byte	0x7ab
 2921 079b 0B       		.uleb128 0xb
 2922 079c 79030000 		.4byte	.LASF71
 2923 07a0 01       		.byte	0x1
 2924 07a1 7305     		.2byte	0x573
 2925 07a3 7A000000 		.4byte	0x7a
 2926 07a7 02       		.byte	0x2
 2927 07a8 91       		.byte	0x91
 2928 07a9 74       		.sleb128 -12
 2929 07aa 00       		.byte	0
 2930 07ab 0E       		.uleb128 0xe
 2931 07ac 44020000 		.4byte	.LASF79
 2932 07b0 01       		.byte	0x1
 2933 07b1 16       		.byte	0x16
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 77


 2934 07b2 6F000000 		.4byte	0x6f
 2935 07b6 01       		.byte	0x1
 2936 07b7 05       		.byte	0x5
 2937 07b8 03       		.byte	0x3
 2938 07b9 00000000 		.4byte	PWM_initVar
 2939 07bd 00       		.byte	0
 2940              		.section	.debug_abbrev,"",%progbits
 2941              	.Ldebug_abbrev0:
 2942 0000 01       		.uleb128 0x1
 2943 0001 11       		.uleb128 0x11
 2944 0002 01       		.byte	0x1
 2945 0003 25       		.uleb128 0x25
 2946 0004 0E       		.uleb128 0xe
 2947 0005 13       		.uleb128 0x13
 2948 0006 0B       		.uleb128 0xb
 2949 0007 03       		.uleb128 0x3
 2950 0008 0E       		.uleb128 0xe
 2951 0009 1B       		.uleb128 0x1b
 2952 000a 0E       		.uleb128 0xe
 2953 000b 55       		.uleb128 0x55
 2954 000c 06       		.uleb128 0x6
 2955 000d 11       		.uleb128 0x11
 2956 000e 01       		.uleb128 0x1
 2957 000f 52       		.uleb128 0x52
 2958 0010 01       		.uleb128 0x1
 2959 0011 10       		.uleb128 0x10
 2960 0012 06       		.uleb128 0x6
 2961 0013 00       		.byte	0
 2962 0014 00       		.byte	0
 2963 0015 02       		.uleb128 0x2
 2964 0016 24       		.uleb128 0x24
 2965 0017 00       		.byte	0
 2966 0018 0B       		.uleb128 0xb
 2967 0019 0B       		.uleb128 0xb
 2968 001a 3E       		.uleb128 0x3e
 2969 001b 0B       		.uleb128 0xb
 2970 001c 03       		.uleb128 0x3
 2971 001d 0E       		.uleb128 0xe
 2972 001e 00       		.byte	0
 2973 001f 00       		.byte	0
 2974 0020 03       		.uleb128 0x3
 2975 0021 24       		.uleb128 0x24
 2976 0022 00       		.byte	0
 2977 0023 0B       		.uleb128 0xb
 2978 0024 0B       		.uleb128 0xb
 2979 0025 3E       		.uleb128 0x3e
 2980 0026 0B       		.uleb128 0xb
 2981 0027 03       		.uleb128 0x3
 2982 0028 08       		.uleb128 0x8
 2983 0029 00       		.byte	0
 2984 002a 00       		.byte	0
 2985 002b 04       		.uleb128 0x4
 2986 002c 16       		.uleb128 0x16
 2987 002d 00       		.byte	0
 2988 002e 03       		.uleb128 0x3
 2989 002f 0E       		.uleb128 0xe
 2990 0030 3A       		.uleb128 0x3a
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 78


 2991 0031 0B       		.uleb128 0xb
 2992 0032 3B       		.uleb128 0x3b
 2993 0033 0B       		.uleb128 0xb
 2994 0034 49       		.uleb128 0x49
 2995 0035 13       		.uleb128 0x13
 2996 0036 00       		.byte	0
 2997 0037 00       		.byte	0
 2998 0038 05       		.uleb128 0x5
 2999 0039 35       		.uleb128 0x35
 3000 003a 00       		.byte	0
 3001 003b 49       		.uleb128 0x49
 3002 003c 13       		.uleb128 0x13
 3003 003d 00       		.byte	0
 3004 003e 00       		.byte	0
 3005 003f 06       		.uleb128 0x6
 3006 0040 2E       		.uleb128 0x2e
 3007 0041 00       		.byte	0
 3008 0042 3F       		.uleb128 0x3f
 3009 0043 0C       		.uleb128 0xc
 3010 0044 03       		.uleb128 0x3
 3011 0045 0E       		.uleb128 0xe
 3012 0046 3A       		.uleb128 0x3a
 3013 0047 0B       		.uleb128 0xb
 3014 0048 3B       		.uleb128 0x3b
 3015 0049 0B       		.uleb128 0xb
 3016 004a 27       		.uleb128 0x27
 3017 004b 0C       		.uleb128 0xc
 3018 004c 11       		.uleb128 0x11
 3019 004d 01       		.uleb128 0x1
 3020 004e 12       		.uleb128 0x12
 3021 004f 01       		.uleb128 0x1
 3022 0050 40       		.uleb128 0x40
 3023 0051 06       		.uleb128 0x6
 3024 0052 9642     		.uleb128 0x2116
 3025 0054 0C       		.uleb128 0xc
 3026 0055 00       		.byte	0
 3027 0056 00       		.byte	0
 3028 0057 07       		.uleb128 0x7
 3029 0058 2E       		.uleb128 0x2e
 3030 0059 01       		.byte	0x1
 3031 005a 3F       		.uleb128 0x3f
 3032 005b 0C       		.uleb128 0xc
 3033 005c 03       		.uleb128 0x3
 3034 005d 0E       		.uleb128 0xe
 3035 005e 3A       		.uleb128 0x3a
 3036 005f 0B       		.uleb128 0xb
 3037 0060 3B       		.uleb128 0x3b
 3038 0061 0B       		.uleb128 0xb
 3039 0062 27       		.uleb128 0x27
 3040 0063 0C       		.uleb128 0xc
 3041 0064 11       		.uleb128 0x11
 3042 0065 01       		.uleb128 0x1
 3043 0066 12       		.uleb128 0x12
 3044 0067 01       		.uleb128 0x1
 3045 0068 40       		.uleb128 0x40
 3046 0069 06       		.uleb128 0x6
 3047 006a 9642     		.uleb128 0x2116
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 79


 3048 006c 0C       		.uleb128 0xc
 3049 006d 01       		.uleb128 0x1
 3050 006e 13       		.uleb128 0x13
 3051 006f 00       		.byte	0
 3052 0070 00       		.byte	0
 3053 0071 08       		.uleb128 0x8
 3054 0072 34       		.uleb128 0x34
 3055 0073 00       		.byte	0
 3056 0074 03       		.uleb128 0x3
 3057 0075 0E       		.uleb128 0xe
 3058 0076 3A       		.uleb128 0x3a
 3059 0077 0B       		.uleb128 0xb
 3060 0078 3B       		.uleb128 0x3b
 3061 0079 0B       		.uleb128 0xb
 3062 007a 49       		.uleb128 0x49
 3063 007b 13       		.uleb128 0x13
 3064 007c 02       		.uleb128 0x2
 3065 007d 0A       		.uleb128 0xa
 3066 007e 00       		.byte	0
 3067 007f 00       		.byte	0
 3068 0080 09       		.uleb128 0x9
 3069 0081 2E       		.uleb128 0x2e
 3070 0082 01       		.byte	0x1
 3071 0083 3F       		.uleb128 0x3f
 3072 0084 0C       		.uleb128 0xc
 3073 0085 03       		.uleb128 0x3
 3074 0086 0E       		.uleb128 0xe
 3075 0087 3A       		.uleb128 0x3a
 3076 0088 0B       		.uleb128 0xb
 3077 0089 3B       		.uleb128 0x3b
 3078 008a 05       		.uleb128 0x5
 3079 008b 27       		.uleb128 0x27
 3080 008c 0C       		.uleb128 0xc
 3081 008d 11       		.uleb128 0x11
 3082 008e 01       		.uleb128 0x1
 3083 008f 12       		.uleb128 0x12
 3084 0090 01       		.uleb128 0x1
 3085 0091 40       		.uleb128 0x40
 3086 0092 06       		.uleb128 0x6
 3087 0093 9642     		.uleb128 0x2116
 3088 0095 0C       		.uleb128 0xc
 3089 0096 01       		.uleb128 0x1
 3090 0097 13       		.uleb128 0x13
 3091 0098 00       		.byte	0
 3092 0099 00       		.byte	0
 3093 009a 0A       		.uleb128 0xa
 3094 009b 34       		.uleb128 0x34
 3095 009c 00       		.byte	0
 3096 009d 03       		.uleb128 0x3
 3097 009e 0E       		.uleb128 0xe
 3098 009f 3A       		.uleb128 0x3a
 3099 00a0 0B       		.uleb128 0xb
 3100 00a1 3B       		.uleb128 0x3b
 3101 00a2 05       		.uleb128 0x5
 3102 00a3 49       		.uleb128 0x49
 3103 00a4 13       		.uleb128 0x13
 3104 00a5 02       		.uleb128 0x2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 80


 3105 00a6 0A       		.uleb128 0xa
 3106 00a7 00       		.byte	0
 3107 00a8 00       		.byte	0
 3108 00a9 0B       		.uleb128 0xb
 3109 00aa 05       		.uleb128 0x5
 3110 00ab 00       		.byte	0
 3111 00ac 03       		.uleb128 0x3
 3112 00ad 0E       		.uleb128 0xe
 3113 00ae 3A       		.uleb128 0x3a
 3114 00af 0B       		.uleb128 0xb
 3115 00b0 3B       		.uleb128 0x3b
 3116 00b1 05       		.uleb128 0x5
 3117 00b2 49       		.uleb128 0x49
 3118 00b3 13       		.uleb128 0x13
 3119 00b4 02       		.uleb128 0x2
 3120 00b5 0A       		.uleb128 0xa
 3121 00b6 00       		.byte	0
 3122 00b7 00       		.byte	0
 3123 00b8 0C       		.uleb128 0xc
 3124 00b9 2E       		.uleb128 0x2e
 3125 00ba 01       		.byte	0x1
 3126 00bb 3F       		.uleb128 0x3f
 3127 00bc 0C       		.uleb128 0xc
 3128 00bd 03       		.uleb128 0x3
 3129 00be 0E       		.uleb128 0xe
 3130 00bf 3A       		.uleb128 0x3a
 3131 00c0 0B       		.uleb128 0xb
 3132 00c1 3B       		.uleb128 0x3b
 3133 00c2 05       		.uleb128 0x5
 3134 00c3 27       		.uleb128 0x27
 3135 00c4 0C       		.uleb128 0xc
 3136 00c5 11       		.uleb128 0x11
 3137 00c6 01       		.uleb128 0x1
 3138 00c7 12       		.uleb128 0x12
 3139 00c8 01       		.uleb128 0x1
 3140 00c9 40       		.uleb128 0x40
 3141 00ca 06       		.uleb128 0x6
 3142 00cb 9742     		.uleb128 0x2117
 3143 00cd 0C       		.uleb128 0xc
 3144 00ce 01       		.uleb128 0x1
 3145 00cf 13       		.uleb128 0x13
 3146 00d0 00       		.byte	0
 3147 00d1 00       		.byte	0
 3148 00d2 0D       		.uleb128 0xd
 3149 00d3 2E       		.uleb128 0x2e
 3150 00d4 00       		.byte	0
 3151 00d5 3F       		.uleb128 0x3f
 3152 00d6 0C       		.uleb128 0xc
 3153 00d7 03       		.uleb128 0x3
 3154 00d8 0E       		.uleb128 0xe
 3155 00d9 3A       		.uleb128 0x3a
 3156 00da 0B       		.uleb128 0xb
 3157 00db 3B       		.uleb128 0x3b
 3158 00dc 05       		.uleb128 0x5
 3159 00dd 27       		.uleb128 0x27
 3160 00de 0C       		.uleb128 0xc
 3161 00df 49       		.uleb128 0x49
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 81


 3162 00e0 13       		.uleb128 0x13
 3163 00e1 11       		.uleb128 0x11
 3164 00e2 01       		.uleb128 0x1
 3165 00e3 12       		.uleb128 0x12
 3166 00e4 01       		.uleb128 0x1
 3167 00e5 40       		.uleb128 0x40
 3168 00e6 06       		.uleb128 0x6
 3169 00e7 9742     		.uleb128 0x2117
 3170 00e9 0C       		.uleb128 0xc
 3171 00ea 00       		.byte	0
 3172 00eb 00       		.byte	0
 3173 00ec 0E       		.uleb128 0xe
 3174 00ed 34       		.uleb128 0x34
 3175 00ee 00       		.byte	0
 3176 00ef 03       		.uleb128 0x3
 3177 00f0 0E       		.uleb128 0xe
 3178 00f1 3A       		.uleb128 0x3a
 3179 00f2 0B       		.uleb128 0xb
 3180 00f3 3B       		.uleb128 0x3b
 3181 00f4 0B       		.uleb128 0xb
 3182 00f5 49       		.uleb128 0x49
 3183 00f6 13       		.uleb128 0x13
 3184 00f7 3F       		.uleb128 0x3f
 3185 00f8 0C       		.uleb128 0xc
 3186 00f9 02       		.uleb128 0x2
 3187 00fa 0A       		.uleb128 0xa
 3188 00fb 00       		.byte	0
 3189 00fc 00       		.byte	0
 3190 00fd 00       		.byte	0
 3191              		.section	.debug_loc,"",%progbits
 3192              	.Ldebug_loc0:
 3193              	.LLST0:
 3194 0000 00000000 		.4byte	.LFB0
 3195 0004 02000000 		.4byte	.LCFI0
 3196 0008 0200     		.2byte	0x2
 3197 000a 7D       		.byte	0x7d
 3198 000b 00       		.sleb128 0
 3199 000c 02000000 		.4byte	.LCFI0
 3200 0010 04000000 		.4byte	.LCFI1
 3201 0014 0200     		.2byte	0x2
 3202 0016 7D       		.byte	0x7d
 3203 0017 08       		.sleb128 8
 3204 0018 04000000 		.4byte	.LCFI1
 3205 001c 50000000 		.4byte	.LFE0
 3206 0020 0200     		.2byte	0x2
 3207 0022 77       		.byte	0x77
 3208 0023 08       		.sleb128 8
 3209 0024 00000000 		.4byte	0
 3210 0028 00000000 		.4byte	0
 3211              	.LLST1:
 3212 002c 00000000 		.4byte	.LFB1
 3213 0030 02000000 		.4byte	.LCFI2
 3214 0034 0200     		.2byte	0x2
 3215 0036 7D       		.byte	0x7d
 3216 0037 00       		.sleb128 0
 3217 0038 02000000 		.4byte	.LCFI2
 3218 003c 04000000 		.4byte	.LCFI3
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 82


 3219 0040 0200     		.2byte	0x2
 3220 0042 7D       		.byte	0x7d
 3221 0043 0C       		.sleb128 12
 3222 0044 04000000 		.4byte	.LCFI3
 3223 0048 06000000 		.4byte	.LCFI4
 3224 004c 0200     		.2byte	0x2
 3225 004e 7D       		.byte	0x7d
 3226 004f 18       		.sleb128 24
 3227 0050 06000000 		.4byte	.LCFI4
 3228 0054 38000000 		.4byte	.LFE1
 3229 0058 0200     		.2byte	0x2
 3230 005a 77       		.byte	0x77
 3231 005b 18       		.sleb128 24
 3232 005c 00000000 		.4byte	0
 3233 0060 00000000 		.4byte	0
 3234              	.LLST2:
 3235 0064 00000000 		.4byte	.LFB2
 3236 0068 02000000 		.4byte	.LCFI5
 3237 006c 0200     		.2byte	0x2
 3238 006e 7D       		.byte	0x7d
 3239 006f 00       		.sleb128 0
 3240 0070 02000000 		.4byte	.LCFI5
 3241 0074 04000000 		.4byte	.LCFI6
 3242 0078 0200     		.2byte	0x2
 3243 007a 7D       		.byte	0x7d
 3244 007b 08       		.sleb128 8
 3245 007c 04000000 		.4byte	.LCFI6
 3246 0080 24000000 		.4byte	.LFE2
 3247 0084 0200     		.2byte	0x2
 3248 0086 77       		.byte	0x77
 3249 0087 08       		.sleb128 8
 3250 0088 00000000 		.4byte	0
 3251 008c 00000000 		.4byte	0
 3252              	.LLST3:
 3253 0090 00000000 		.4byte	.LFB3
 3254 0094 02000000 		.4byte	.LCFI7
 3255 0098 0200     		.2byte	0x2
 3256 009a 7D       		.byte	0x7d
 3257 009b 00       		.sleb128 0
 3258 009c 02000000 		.4byte	.LCFI7
 3259 00a0 04000000 		.4byte	.LCFI8
 3260 00a4 0200     		.2byte	0x2
 3261 00a6 7D       		.byte	0x7d
 3262 00a7 0C       		.sleb128 12
 3263 00a8 04000000 		.4byte	.LCFI8
 3264 00ac 06000000 		.4byte	.LCFI9
 3265 00b0 0200     		.2byte	0x2
 3266 00b2 7D       		.byte	0x7d
 3267 00b3 18       		.sleb128 24
 3268 00b4 06000000 		.4byte	.LCFI9
 3269 00b8 30000000 		.4byte	.LFE3
 3270 00bc 0200     		.2byte	0x2
 3271 00be 77       		.byte	0x77
 3272 00bf 18       		.sleb128 24
 3273 00c0 00000000 		.4byte	0
 3274 00c4 00000000 		.4byte	0
 3275              	.LLST4:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 83


 3276 00c8 00000000 		.4byte	.LFB4
 3277 00cc 02000000 		.4byte	.LCFI10
 3278 00d0 0200     		.2byte	0x2
 3279 00d2 7D       		.byte	0x7d
 3280 00d3 00       		.sleb128 0
 3281 00d4 02000000 		.4byte	.LCFI10
 3282 00d8 04000000 		.4byte	.LCFI11
 3283 00dc 0200     		.2byte	0x2
 3284 00de 7D       		.byte	0x7d
 3285 00df 0C       		.sleb128 12
 3286 00e0 04000000 		.4byte	.LCFI11
 3287 00e4 06000000 		.4byte	.LCFI12
 3288 00e8 0200     		.2byte	0x2
 3289 00ea 7D       		.byte	0x7d
 3290 00eb 20       		.sleb128 32
 3291 00ec 06000000 		.4byte	.LCFI12
 3292 00f0 48000000 		.4byte	.LFE4
 3293 00f4 0200     		.2byte	0x2
 3294 00f6 77       		.byte	0x77
 3295 00f7 20       		.sleb128 32
 3296 00f8 00000000 		.4byte	0
 3297 00fc 00000000 		.4byte	0
 3298              	.LLST5:
 3299 0100 00000000 		.4byte	.LFB5
 3300 0104 02000000 		.4byte	.LCFI13
 3301 0108 0200     		.2byte	0x2
 3302 010a 7D       		.byte	0x7d
 3303 010b 00       		.sleb128 0
 3304 010c 02000000 		.4byte	.LCFI13
 3305 0110 04000000 		.4byte	.LCFI14
 3306 0114 0200     		.2byte	0x2
 3307 0116 7D       		.byte	0x7d
 3308 0117 0C       		.sleb128 12
 3309 0118 04000000 		.4byte	.LCFI14
 3310 011c 06000000 		.4byte	.LCFI15
 3311 0120 0200     		.2byte	0x2
 3312 0122 7D       		.byte	0x7d
 3313 0123 20       		.sleb128 32
 3314 0124 06000000 		.4byte	.LCFI15
 3315 0128 48000000 		.4byte	.LFE5
 3316 012c 0200     		.2byte	0x2
 3317 012e 77       		.byte	0x77
 3318 012f 20       		.sleb128 32
 3319 0130 00000000 		.4byte	0
 3320 0134 00000000 		.4byte	0
 3321              	.LLST6:
 3322 0138 00000000 		.4byte	.LFB6
 3323 013c 02000000 		.4byte	.LCFI16
 3324 0140 0200     		.2byte	0x2
 3325 0142 7D       		.byte	0x7d
 3326 0143 00       		.sleb128 0
 3327 0144 02000000 		.4byte	.LCFI16
 3328 0148 04000000 		.4byte	.LCFI17
 3329 014c 0200     		.2byte	0x2
 3330 014e 7D       		.byte	0x7d
 3331 014f 0C       		.sleb128 12
 3332 0150 04000000 		.4byte	.LCFI17
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 84


 3333 0154 06000000 		.4byte	.LCFI18
 3334 0158 0200     		.2byte	0x2
 3335 015a 7D       		.byte	0x7d
 3336 015b 20       		.sleb128 32
 3337 015c 06000000 		.4byte	.LCFI18
 3338 0160 48000000 		.4byte	.LFE6
 3339 0164 0200     		.2byte	0x2
 3340 0166 77       		.byte	0x77
 3341 0167 20       		.sleb128 32
 3342 0168 00000000 		.4byte	0
 3343 016c 00000000 		.4byte	0
 3344              	.LLST7:
 3345 0170 00000000 		.4byte	.LFB7
 3346 0174 02000000 		.4byte	.LCFI19
 3347 0178 0200     		.2byte	0x2
 3348 017a 7D       		.byte	0x7d
 3349 017b 00       		.sleb128 0
 3350 017c 02000000 		.4byte	.LCFI19
 3351 0180 04000000 		.4byte	.LCFI20
 3352 0184 0200     		.2byte	0x2
 3353 0186 7D       		.byte	0x7d
 3354 0187 0C       		.sleb128 12
 3355 0188 04000000 		.4byte	.LCFI20
 3356 018c 06000000 		.4byte	.LCFI21
 3357 0190 0200     		.2byte	0x2
 3358 0192 7D       		.byte	0x7d
 3359 0193 20       		.sleb128 32
 3360 0194 06000000 		.4byte	.LCFI21
 3361 0198 4C000000 		.4byte	.LFE7
 3362 019c 0200     		.2byte	0x2
 3363 019e 77       		.byte	0x77
 3364 019f 20       		.sleb128 32
 3365 01a0 00000000 		.4byte	0
 3366 01a4 00000000 		.4byte	0
 3367              	.LLST8:
 3368 01a8 00000000 		.4byte	.LFB8
 3369 01ac 02000000 		.4byte	.LCFI22
 3370 01b0 0200     		.2byte	0x2
 3371 01b2 7D       		.byte	0x7d
 3372 01b3 00       		.sleb128 0
 3373 01b4 02000000 		.4byte	.LCFI22
 3374 01b8 04000000 		.4byte	.LCFI23
 3375 01bc 0200     		.2byte	0x2
 3376 01be 7D       		.byte	0x7d
 3377 01bf 08       		.sleb128 8
 3378 01c0 04000000 		.4byte	.LCFI23
 3379 01c4 06000000 		.4byte	.LCFI24
 3380 01c8 0200     		.2byte	0x2
 3381 01ca 7D       		.byte	0x7d
 3382 01cb 10       		.sleb128 16
 3383 01cc 06000000 		.4byte	.LCFI24
 3384 01d0 1C000000 		.4byte	.LFE8
 3385 01d4 0200     		.2byte	0x2
 3386 01d6 77       		.byte	0x77
 3387 01d7 10       		.sleb128 16
 3388 01d8 00000000 		.4byte	0
 3389 01dc 00000000 		.4byte	0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 85


 3390              	.LLST9:
 3391 01e0 00000000 		.4byte	.LFB9
 3392 01e4 02000000 		.4byte	.LCFI25
 3393 01e8 0200     		.2byte	0x2
 3394 01ea 7D       		.byte	0x7d
 3395 01eb 00       		.sleb128 0
 3396 01ec 02000000 		.4byte	.LCFI25
 3397 01f0 04000000 		.4byte	.LCFI26
 3398 01f4 0200     		.2byte	0x2
 3399 01f6 7D       		.byte	0x7d
 3400 01f7 0C       		.sleb128 12
 3401 01f8 04000000 		.4byte	.LCFI26
 3402 01fc 06000000 		.4byte	.LCFI27
 3403 0200 0200     		.2byte	0x2
 3404 0202 7D       		.byte	0x7d
 3405 0203 20       		.sleb128 32
 3406 0204 06000000 		.4byte	.LCFI27
 3407 0208 48000000 		.4byte	.LFE9
 3408 020c 0200     		.2byte	0x2
 3409 020e 77       		.byte	0x77
 3410 020f 20       		.sleb128 32
 3411 0210 00000000 		.4byte	0
 3412 0214 00000000 		.4byte	0
 3413              	.LLST10:
 3414 0218 00000000 		.4byte	.LFB10
 3415 021c 02000000 		.4byte	.LCFI28
 3416 0220 0200     		.2byte	0x2
 3417 0222 7D       		.byte	0x7d
 3418 0223 00       		.sleb128 0
 3419 0224 02000000 		.4byte	.LCFI28
 3420 0228 04000000 		.4byte	.LCFI29
 3421 022c 0200     		.2byte	0x2
 3422 022e 7D       		.byte	0x7d
 3423 022f 0C       		.sleb128 12
 3424 0230 04000000 		.4byte	.LCFI29
 3425 0234 06000000 		.4byte	.LCFI30
 3426 0238 0200     		.2byte	0x2
 3427 023a 7D       		.byte	0x7d
 3428 023b 20       		.sleb128 32
 3429 023c 06000000 		.4byte	.LCFI30
 3430 0240 48000000 		.4byte	.LFE10
 3431 0244 0200     		.2byte	0x2
 3432 0246 77       		.byte	0x77
 3433 0247 20       		.sleb128 32
 3434 0248 00000000 		.4byte	0
 3435 024c 00000000 		.4byte	0
 3436              	.LLST11:
 3437 0250 00000000 		.4byte	.LFB11
 3438 0254 02000000 		.4byte	.LCFI31
 3439 0258 0200     		.2byte	0x2
 3440 025a 7D       		.byte	0x7d
 3441 025b 00       		.sleb128 0
 3442 025c 02000000 		.4byte	.LCFI31
 3443 0260 04000000 		.4byte	.LCFI32
 3444 0264 0200     		.2byte	0x2
 3445 0266 7D       		.byte	0x7d
 3446 0267 0C       		.sleb128 12
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 86


 3447 0268 04000000 		.4byte	.LCFI32
 3448 026c 06000000 		.4byte	.LCFI33
 3449 0270 0200     		.2byte	0x2
 3450 0272 7D       		.byte	0x7d
 3451 0273 20       		.sleb128 32
 3452 0274 06000000 		.4byte	.LCFI33
 3453 0278 4C000000 		.4byte	.LFE11
 3454 027c 0200     		.2byte	0x2
 3455 027e 77       		.byte	0x77
 3456 027f 20       		.sleb128 32
 3457 0280 00000000 		.4byte	0
 3458 0284 00000000 		.4byte	0
 3459              	.LLST12:
 3460 0288 00000000 		.4byte	.LFB12
 3461 028c 02000000 		.4byte	.LCFI34
 3462 0290 0200     		.2byte	0x2
 3463 0292 7D       		.byte	0x7d
 3464 0293 00       		.sleb128 0
 3465 0294 02000000 		.4byte	.LCFI34
 3466 0298 04000000 		.4byte	.LCFI35
 3467 029c 0200     		.2byte	0x2
 3468 029e 7D       		.byte	0x7d
 3469 029f 0C       		.sleb128 12
 3470 02a0 04000000 		.4byte	.LCFI35
 3471 02a4 06000000 		.4byte	.LCFI36
 3472 02a8 0200     		.2byte	0x2
 3473 02aa 7D       		.byte	0x7d
 3474 02ab 20       		.sleb128 32
 3475 02ac 06000000 		.4byte	.LCFI36
 3476 02b0 48000000 		.4byte	.LFE12
 3477 02b4 0200     		.2byte	0x2
 3478 02b6 77       		.byte	0x77
 3479 02b7 20       		.sleb128 32
 3480 02b8 00000000 		.4byte	0
 3481 02bc 00000000 		.4byte	0
 3482              	.LLST13:
 3483 02c0 00000000 		.4byte	.LFB13
 3484 02c4 02000000 		.4byte	.LCFI37
 3485 02c8 0200     		.2byte	0x2
 3486 02ca 7D       		.byte	0x7d
 3487 02cb 00       		.sleb128 0
 3488 02cc 02000000 		.4byte	.LCFI37
 3489 02d0 04000000 		.4byte	.LCFI38
 3490 02d4 0200     		.2byte	0x2
 3491 02d6 7D       		.byte	0x7d
 3492 02d7 08       		.sleb128 8
 3493 02d8 04000000 		.4byte	.LCFI38
 3494 02dc 06000000 		.4byte	.LCFI39
 3495 02e0 0200     		.2byte	0x2
 3496 02e2 7D       		.byte	0x7d
 3497 02e3 10       		.sleb128 16
 3498 02e4 06000000 		.4byte	.LCFI39
 3499 02e8 1C000000 		.4byte	.LFE13
 3500 02ec 0200     		.2byte	0x2
 3501 02ee 77       		.byte	0x77
 3502 02ef 10       		.sleb128 16
 3503 02f0 00000000 		.4byte	0
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 87


 3504 02f4 00000000 		.4byte	0
 3505              	.LLST14:
 3506 02f8 00000000 		.4byte	.LFB14
 3507 02fc 02000000 		.4byte	.LCFI40
 3508 0300 0200     		.2byte	0x2
 3509 0302 7D       		.byte	0x7d
 3510 0303 00       		.sleb128 0
 3511 0304 02000000 		.4byte	.LCFI40
 3512 0308 04000000 		.4byte	.LCFI41
 3513 030c 0200     		.2byte	0x2
 3514 030e 7D       		.byte	0x7d
 3515 030f 08       		.sleb128 8
 3516 0310 04000000 		.4byte	.LCFI41
 3517 0314 18000000 		.4byte	.LFE14
 3518 0318 0200     		.2byte	0x2
 3519 031a 77       		.byte	0x77
 3520 031b 08       		.sleb128 8
 3521 031c 00000000 		.4byte	0
 3522 0320 00000000 		.4byte	0
 3523              	.LLST15:
 3524 0324 00000000 		.4byte	.LFB15
 3525 0328 02000000 		.4byte	.LCFI42
 3526 032c 0200     		.2byte	0x2
 3527 032e 7D       		.byte	0x7d
 3528 032f 00       		.sleb128 0
 3529 0330 02000000 		.4byte	.LCFI42
 3530 0334 04000000 		.4byte	.LCFI43
 3531 0338 0200     		.2byte	0x2
 3532 033a 7D       		.byte	0x7d
 3533 033b 0C       		.sleb128 12
 3534 033c 04000000 		.4byte	.LCFI43
 3535 0340 06000000 		.4byte	.LCFI44
 3536 0344 0200     		.2byte	0x2
 3537 0346 7D       		.byte	0x7d
 3538 0347 20       		.sleb128 32
 3539 0348 06000000 		.4byte	.LCFI44
 3540 034c 48000000 		.4byte	.LFE15
 3541 0350 0200     		.2byte	0x2
 3542 0352 77       		.byte	0x77
 3543 0353 20       		.sleb128 32
 3544 0354 00000000 		.4byte	0
 3545 0358 00000000 		.4byte	0
 3546              	.LLST16:
 3547 035c 00000000 		.4byte	.LFB16
 3548 0360 02000000 		.4byte	.LCFI45
 3549 0364 0200     		.2byte	0x2
 3550 0366 7D       		.byte	0x7d
 3551 0367 00       		.sleb128 0
 3552 0368 02000000 		.4byte	.LCFI45
 3553 036c 04000000 		.4byte	.LCFI46
 3554 0370 0200     		.2byte	0x2
 3555 0372 7D       		.byte	0x7d
 3556 0373 08       		.sleb128 8
 3557 0374 04000000 		.4byte	.LCFI46
 3558 0378 06000000 		.4byte	.LCFI47
 3559 037c 0200     		.2byte	0x2
 3560 037e 7D       		.byte	0x7d
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 88


 3561 037f 10       		.sleb128 16
 3562 0380 06000000 		.4byte	.LCFI47
 3563 0384 1C000000 		.4byte	.LFE16
 3564 0388 0200     		.2byte	0x2
 3565 038a 77       		.byte	0x77
 3566 038b 10       		.sleb128 16
 3567 038c 00000000 		.4byte	0
 3568 0390 00000000 		.4byte	0
 3569              	.LLST17:
 3570 0394 00000000 		.4byte	.LFB17
 3571 0398 02000000 		.4byte	.LCFI48
 3572 039c 0200     		.2byte	0x2
 3573 039e 7D       		.byte	0x7d
 3574 039f 00       		.sleb128 0
 3575 03a0 02000000 		.4byte	.LCFI48
 3576 03a4 04000000 		.4byte	.LCFI49
 3577 03a8 0200     		.2byte	0x2
 3578 03aa 7D       		.byte	0x7d
 3579 03ab 08       		.sleb128 8
 3580 03ac 04000000 		.4byte	.LCFI49
 3581 03b0 18000000 		.4byte	.LFE17
 3582 03b4 0200     		.2byte	0x2
 3583 03b6 77       		.byte	0x77
 3584 03b7 08       		.sleb128 8
 3585 03b8 00000000 		.4byte	0
 3586 03bc 00000000 		.4byte	0
 3587              	.LLST18:
 3588 03c0 00000000 		.4byte	.LFB18
 3589 03c4 02000000 		.4byte	.LCFI50
 3590 03c8 0200     		.2byte	0x2
 3591 03ca 7D       		.byte	0x7d
 3592 03cb 00       		.sleb128 0
 3593 03cc 02000000 		.4byte	.LCFI50
 3594 03d0 04000000 		.4byte	.LCFI51
 3595 03d4 0200     		.2byte	0x2
 3596 03d6 7D       		.byte	0x7d
 3597 03d7 0C       		.sleb128 12
 3598 03d8 04000000 		.4byte	.LCFI51
 3599 03dc 06000000 		.4byte	.LCFI52
 3600 03e0 0200     		.2byte	0x2
 3601 03e2 7D       		.byte	0x7d
 3602 03e3 20       		.sleb128 32
 3603 03e4 06000000 		.4byte	.LCFI52
 3604 03e8 48000000 		.4byte	.LFE18
 3605 03ec 0200     		.2byte	0x2
 3606 03ee 77       		.byte	0x77
 3607 03ef 20       		.sleb128 32
 3608 03f0 00000000 		.4byte	0
 3609 03f4 00000000 		.4byte	0
 3610              	.LLST19:
 3611 03f8 00000000 		.4byte	.LFB19
 3612 03fc 02000000 		.4byte	.LCFI53
 3613 0400 0200     		.2byte	0x2
 3614 0402 7D       		.byte	0x7d
 3615 0403 00       		.sleb128 0
 3616 0404 02000000 		.4byte	.LCFI53
 3617 0408 04000000 		.4byte	.LCFI54
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 89


 3618 040c 0200     		.2byte	0x2
 3619 040e 7D       		.byte	0x7d
 3620 040f 08       		.sleb128 8
 3621 0410 04000000 		.4byte	.LCFI54
 3622 0414 06000000 		.4byte	.LCFI55
 3623 0418 0200     		.2byte	0x2
 3624 041a 7D       		.byte	0x7d
 3625 041b 10       		.sleb128 16
 3626 041c 06000000 		.4byte	.LCFI55
 3627 0420 1C000000 		.4byte	.LFE19
 3628 0424 0200     		.2byte	0x2
 3629 0426 77       		.byte	0x77
 3630 0427 10       		.sleb128 16
 3631 0428 00000000 		.4byte	0
 3632 042c 00000000 		.4byte	0
 3633              	.LLST20:
 3634 0430 00000000 		.4byte	.LFB20
 3635 0434 02000000 		.4byte	.LCFI56
 3636 0438 0200     		.2byte	0x2
 3637 043a 7D       		.byte	0x7d
 3638 043b 00       		.sleb128 0
 3639 043c 02000000 		.4byte	.LCFI56
 3640 0440 04000000 		.4byte	.LCFI57
 3641 0444 0200     		.2byte	0x2
 3642 0446 7D       		.byte	0x7d
 3643 0447 08       		.sleb128 8
 3644 0448 04000000 		.4byte	.LCFI57
 3645 044c 18000000 		.4byte	.LFE20
 3646 0450 0200     		.2byte	0x2
 3647 0452 77       		.byte	0x77
 3648 0453 08       		.sleb128 8
 3649 0454 00000000 		.4byte	0
 3650 0458 00000000 		.4byte	0
 3651              	.LLST21:
 3652 045c 00000000 		.4byte	.LFB21
 3653 0460 02000000 		.4byte	.LCFI58
 3654 0464 0200     		.2byte	0x2
 3655 0466 7D       		.byte	0x7d
 3656 0467 00       		.sleb128 0
 3657 0468 02000000 		.4byte	.LCFI58
 3658 046c 04000000 		.4byte	.LCFI59
 3659 0470 0200     		.2byte	0x2
 3660 0472 7D       		.byte	0x7d
 3661 0473 0C       		.sleb128 12
 3662 0474 04000000 		.4byte	.LCFI59
 3663 0478 06000000 		.4byte	.LCFI60
 3664 047c 0200     		.2byte	0x2
 3665 047e 7D       		.byte	0x7d
 3666 047f 20       		.sleb128 32
 3667 0480 06000000 		.4byte	.LCFI60
 3668 0484 48000000 		.4byte	.LFE21
 3669 0488 0200     		.2byte	0x2
 3670 048a 77       		.byte	0x77
 3671 048b 20       		.sleb128 32
 3672 048c 00000000 		.4byte	0
 3673 0490 00000000 		.4byte	0
 3674              	.LLST22:
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 90


 3675 0494 00000000 		.4byte	.LFB22
 3676 0498 02000000 		.4byte	.LCFI61
 3677 049c 0200     		.2byte	0x2
 3678 049e 7D       		.byte	0x7d
 3679 049f 00       		.sleb128 0
 3680 04a0 02000000 		.4byte	.LCFI61
 3681 04a4 04000000 		.4byte	.LCFI62
 3682 04a8 0200     		.2byte	0x2
 3683 04aa 7D       		.byte	0x7d
 3684 04ab 08       		.sleb128 8
 3685 04ac 04000000 		.4byte	.LCFI62
 3686 04b0 06000000 		.4byte	.LCFI63
 3687 04b4 0200     		.2byte	0x2
 3688 04b6 7D       		.byte	0x7d
 3689 04b7 10       		.sleb128 16
 3690 04b8 06000000 		.4byte	.LCFI63
 3691 04bc 1C000000 		.4byte	.LFE22
 3692 04c0 0200     		.2byte	0x2
 3693 04c2 77       		.byte	0x77
 3694 04c3 10       		.sleb128 16
 3695 04c4 00000000 		.4byte	0
 3696 04c8 00000000 		.4byte	0
 3697              	.LLST23:
 3698 04cc 00000000 		.4byte	.LFB23
 3699 04d0 02000000 		.4byte	.LCFI64
 3700 04d4 0200     		.2byte	0x2
 3701 04d6 7D       		.byte	0x7d
 3702 04d7 00       		.sleb128 0
 3703 04d8 02000000 		.4byte	.LCFI64
 3704 04dc 04000000 		.4byte	.LCFI65
 3705 04e0 0200     		.2byte	0x2
 3706 04e2 7D       		.byte	0x7d
 3707 04e3 08       		.sleb128 8
 3708 04e4 04000000 		.4byte	.LCFI65
 3709 04e8 18000000 		.4byte	.LFE23
 3710 04ec 0200     		.2byte	0x2
 3711 04ee 77       		.byte	0x77
 3712 04ef 08       		.sleb128 8
 3713 04f0 00000000 		.4byte	0
 3714 04f4 00000000 		.4byte	0
 3715              	.LLST24:
 3716 04f8 00000000 		.4byte	.LFB24
 3717 04fc 02000000 		.4byte	.LCFI66
 3718 0500 0200     		.2byte	0x2
 3719 0502 7D       		.byte	0x7d
 3720 0503 00       		.sleb128 0
 3721 0504 02000000 		.4byte	.LCFI66
 3722 0508 04000000 		.4byte	.LCFI67
 3723 050c 0200     		.2byte	0x2
 3724 050e 7D       		.byte	0x7d
 3725 050f 08       		.sleb128 8
 3726 0510 04000000 		.4byte	.LCFI67
 3727 0514 06000000 		.4byte	.LCFI68
 3728 0518 0200     		.2byte	0x2
 3729 051a 7D       		.byte	0x7d
 3730 051b 10       		.sleb128 16
 3731 051c 06000000 		.4byte	.LCFI68
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 91


 3732 0520 1C000000 		.4byte	.LFE24
 3733 0524 0200     		.2byte	0x2
 3734 0526 77       		.byte	0x77
 3735 0527 10       		.sleb128 16
 3736 0528 00000000 		.4byte	0
 3737 052c 00000000 		.4byte	0
 3738              	.LLST25:
 3739 0530 00000000 		.4byte	.LFB25
 3740 0534 02000000 		.4byte	.LCFI69
 3741 0538 0200     		.2byte	0x2
 3742 053a 7D       		.byte	0x7d
 3743 053b 00       		.sleb128 0
 3744 053c 02000000 		.4byte	.LCFI69
 3745 0540 04000000 		.4byte	.LCFI70
 3746 0544 0200     		.2byte	0x2
 3747 0546 7D       		.byte	0x7d
 3748 0547 08       		.sleb128 8
 3749 0548 04000000 		.4byte	.LCFI70
 3750 054c 18000000 		.4byte	.LFE25
 3751 0550 0200     		.2byte	0x2
 3752 0552 77       		.byte	0x77
 3753 0553 08       		.sleb128 8
 3754 0554 00000000 		.4byte	0
 3755 0558 00000000 		.4byte	0
 3756              	.LLST26:
 3757 055c 00000000 		.4byte	.LFB26
 3758 0560 02000000 		.4byte	.LCFI71
 3759 0564 0200     		.2byte	0x2
 3760 0566 7D       		.byte	0x7d
 3761 0567 00       		.sleb128 0
 3762 0568 02000000 		.4byte	.LCFI71
 3763 056c 04000000 		.4byte	.LCFI72
 3764 0570 0200     		.2byte	0x2
 3765 0572 7D       		.byte	0x7d
 3766 0573 08       		.sleb128 8
 3767 0574 04000000 		.4byte	.LCFI72
 3768 0578 18000000 		.4byte	.LFE26
 3769 057c 0200     		.2byte	0x2
 3770 057e 77       		.byte	0x77
 3771 057f 08       		.sleb128 8
 3772 0580 00000000 		.4byte	0
 3773 0584 00000000 		.4byte	0
 3774              	.LLST27:
 3775 0588 00000000 		.4byte	.LFB27
 3776 058c 02000000 		.4byte	.LCFI73
 3777 0590 0200     		.2byte	0x2
 3778 0592 7D       		.byte	0x7d
 3779 0593 00       		.sleb128 0
 3780 0594 02000000 		.4byte	.LCFI73
 3781 0598 04000000 		.4byte	.LCFI74
 3782 059c 0200     		.2byte	0x2
 3783 059e 7D       		.byte	0x7d
 3784 059f 08       		.sleb128 8
 3785 05a0 04000000 		.4byte	.LCFI74
 3786 05a4 18000000 		.4byte	.LFE27
 3787 05a8 0200     		.2byte	0x2
 3788 05aa 77       		.byte	0x77
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 92


 3789 05ab 08       		.sleb128 8
 3790 05ac 00000000 		.4byte	0
 3791 05b0 00000000 		.4byte	0
 3792              	.LLST28:
 3793 05b4 00000000 		.4byte	.LFB28
 3794 05b8 02000000 		.4byte	.LCFI75
 3795 05bc 0200     		.2byte	0x2
 3796 05be 7D       		.byte	0x7d
 3797 05bf 00       		.sleb128 0
 3798 05c0 02000000 		.4byte	.LCFI75
 3799 05c4 04000000 		.4byte	.LCFI76
 3800 05c8 0200     		.2byte	0x2
 3801 05ca 7D       		.byte	0x7d
 3802 05cb 0C       		.sleb128 12
 3803 05cc 04000000 		.4byte	.LCFI76
 3804 05d0 06000000 		.4byte	.LCFI77
 3805 05d4 0200     		.2byte	0x2
 3806 05d6 7D       		.byte	0x7d
 3807 05d7 20       		.sleb128 32
 3808 05d8 06000000 		.4byte	.LCFI77
 3809 05dc 44000000 		.4byte	.LFE28
 3810 05e0 0200     		.2byte	0x2
 3811 05e2 77       		.byte	0x77
 3812 05e3 20       		.sleb128 32
 3813 05e4 00000000 		.4byte	0
 3814 05e8 00000000 		.4byte	0
 3815              	.LLST29:
 3816 05ec 00000000 		.4byte	.LFB29
 3817 05f0 02000000 		.4byte	.LCFI78
 3818 05f4 0200     		.2byte	0x2
 3819 05f6 7D       		.byte	0x7d
 3820 05f7 00       		.sleb128 0
 3821 05f8 02000000 		.4byte	.LCFI78
 3822 05fc 04000000 		.4byte	.LCFI79
 3823 0600 0200     		.2byte	0x2
 3824 0602 7D       		.byte	0x7d
 3825 0603 0C       		.sleb128 12
 3826 0604 04000000 		.4byte	.LCFI79
 3827 0608 06000000 		.4byte	.LCFI80
 3828 060c 0200     		.2byte	0x2
 3829 060e 7D       		.byte	0x7d
 3830 060f 20       		.sleb128 32
 3831 0610 06000000 		.4byte	.LCFI80
 3832 0614 44000000 		.4byte	.LFE29
 3833 0618 0200     		.2byte	0x2
 3834 061a 77       		.byte	0x77
 3835 061b 20       		.sleb128 32
 3836 061c 00000000 		.4byte	0
 3837 0620 00000000 		.4byte	0
 3838              	.LLST30:
 3839 0624 00000000 		.4byte	.LFB30
 3840 0628 02000000 		.4byte	.LCFI81
 3841 062c 0200     		.2byte	0x2
 3842 062e 7D       		.byte	0x7d
 3843 062f 00       		.sleb128 0
 3844 0630 02000000 		.4byte	.LCFI81
 3845 0634 04000000 		.4byte	.LCFI82
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 93


 3846 0638 0200     		.2byte	0x2
 3847 063a 7D       		.byte	0x7d
 3848 063b 0C       		.sleb128 12
 3849 063c 04000000 		.4byte	.LCFI82
 3850 0640 06000000 		.4byte	.LCFI83
 3851 0644 0200     		.2byte	0x2
 3852 0646 7D       		.byte	0x7d
 3853 0647 20       		.sleb128 32
 3854 0648 06000000 		.4byte	.LCFI83
 3855 064c 48000000 		.4byte	.LFE30
 3856 0650 0200     		.2byte	0x2
 3857 0652 77       		.byte	0x77
 3858 0653 20       		.sleb128 32
 3859 0654 00000000 		.4byte	0
 3860 0658 00000000 		.4byte	0
 3861              	.LLST31:
 3862 065c 00000000 		.4byte	.LFB31
 3863 0660 02000000 		.4byte	.LCFI84
 3864 0664 0200     		.2byte	0x2
 3865 0666 7D       		.byte	0x7d
 3866 0667 00       		.sleb128 0
 3867 0668 02000000 		.4byte	.LCFI84
 3868 066c 04000000 		.4byte	.LCFI85
 3869 0670 0200     		.2byte	0x2
 3870 0672 7D       		.byte	0x7d
 3871 0673 0C       		.sleb128 12
 3872 0674 04000000 		.4byte	.LCFI85
 3873 0678 06000000 		.4byte	.LCFI86
 3874 067c 0200     		.2byte	0x2
 3875 067e 7D       		.byte	0x7d
 3876 067f 20       		.sleb128 32
 3877 0680 06000000 		.4byte	.LCFI86
 3878 0684 44000000 		.4byte	.LFE31
 3879 0688 0200     		.2byte	0x2
 3880 068a 77       		.byte	0x77
 3881 068b 20       		.sleb128 32
 3882 068c 00000000 		.4byte	0
 3883 0690 00000000 		.4byte	0
 3884              	.LLST32:
 3885 0694 00000000 		.4byte	.LFB32
 3886 0698 02000000 		.4byte	.LCFI87
 3887 069c 0200     		.2byte	0x2
 3888 069e 7D       		.byte	0x7d
 3889 069f 00       		.sleb128 0
 3890 06a0 02000000 		.4byte	.LCFI87
 3891 06a4 04000000 		.4byte	.LCFI88
 3892 06a8 0200     		.2byte	0x2
 3893 06aa 7D       		.byte	0x7d
 3894 06ab 0C       		.sleb128 12
 3895 06ac 04000000 		.4byte	.LCFI88
 3896 06b0 06000000 		.4byte	.LCFI89
 3897 06b4 0200     		.2byte	0x2
 3898 06b6 7D       		.byte	0x7d
 3899 06b7 20       		.sleb128 32
 3900 06b8 06000000 		.4byte	.LCFI89
 3901 06bc 44000000 		.4byte	.LFE32
 3902 06c0 0200     		.2byte	0x2
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 94


 3903 06c2 77       		.byte	0x77
 3904 06c3 20       		.sleb128 32
 3905 06c4 00000000 		.4byte	0
 3906 06c8 00000000 		.4byte	0
 3907              	.LLST33:
 3908 06cc 00000000 		.4byte	.LFB33
 3909 06d0 02000000 		.4byte	.LCFI90
 3910 06d4 0200     		.2byte	0x2
 3911 06d6 7D       		.byte	0x7d
 3912 06d7 00       		.sleb128 0
 3913 06d8 02000000 		.4byte	.LCFI90
 3914 06dc 04000000 		.4byte	.LCFI91
 3915 06e0 0200     		.2byte	0x2
 3916 06e2 7D       		.byte	0x7d
 3917 06e3 0C       		.sleb128 12
 3918 06e4 04000000 		.4byte	.LCFI91
 3919 06e8 06000000 		.4byte	.LCFI92
 3920 06ec 0200     		.2byte	0x2
 3921 06ee 7D       		.byte	0x7d
 3922 06ef 20       		.sleb128 32
 3923 06f0 06000000 		.4byte	.LCFI92
 3924 06f4 3C000000 		.4byte	.LFE33
 3925 06f8 0200     		.2byte	0x2
 3926 06fa 77       		.byte	0x77
 3927 06fb 20       		.sleb128 32
 3928 06fc 00000000 		.4byte	0
 3929 0700 00000000 		.4byte	0
 3930              	.LLST34:
 3931 0704 00000000 		.4byte	.LFB34
 3932 0708 02000000 		.4byte	.LCFI93
 3933 070c 0200     		.2byte	0x2
 3934 070e 7D       		.byte	0x7d
 3935 070f 00       		.sleb128 0
 3936 0710 02000000 		.4byte	.LCFI93
 3937 0714 04000000 		.4byte	.LCFI94
 3938 0718 0200     		.2byte	0x2
 3939 071a 7D       		.byte	0x7d
 3940 071b 08       		.sleb128 8
 3941 071c 04000000 		.4byte	.LCFI94
 3942 0720 20000000 		.4byte	.LFE34
 3943 0724 0200     		.2byte	0x2
 3944 0726 77       		.byte	0x77
 3945 0727 08       		.sleb128 8
 3946 0728 00000000 		.4byte	0
 3947 072c 00000000 		.4byte	0
 3948              	.LLST35:
 3949 0730 00000000 		.4byte	.LFB35
 3950 0734 02000000 		.4byte	.LCFI95
 3951 0738 0200     		.2byte	0x2
 3952 073a 7D       		.byte	0x7d
 3953 073b 00       		.sleb128 0
 3954 073c 02000000 		.4byte	.LCFI95
 3955 0740 04000000 		.4byte	.LCFI96
 3956 0744 0200     		.2byte	0x2
 3957 0746 7D       		.byte	0x7d
 3958 0747 08       		.sleb128 8
 3959 0748 04000000 		.4byte	.LCFI96
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 95


 3960 074c 06000000 		.4byte	.LCFI97
 3961 0750 0200     		.2byte	0x2
 3962 0752 7D       		.byte	0x7d
 3963 0753 10       		.sleb128 16
 3964 0754 06000000 		.4byte	.LCFI97
 3965 0758 18000000 		.4byte	.LFE35
 3966 075c 0200     		.2byte	0x2
 3967 075e 77       		.byte	0x77
 3968 075f 10       		.sleb128 16
 3969 0760 00000000 		.4byte	0
 3970 0764 00000000 		.4byte	0
 3971              	.LLST36:
 3972 0768 00000000 		.4byte	.LFB36
 3973 076c 02000000 		.4byte	.LCFI98
 3974 0770 0200     		.2byte	0x2
 3975 0772 7D       		.byte	0x7d
 3976 0773 00       		.sleb128 0
 3977 0774 02000000 		.4byte	.LCFI98
 3978 0778 04000000 		.4byte	.LCFI99
 3979 077c 0200     		.2byte	0x2
 3980 077e 7D       		.byte	0x7d
 3981 077f 08       		.sleb128 8
 3982 0780 04000000 		.4byte	.LCFI99
 3983 0784 14000000 		.4byte	.LFE36
 3984 0788 0200     		.2byte	0x2
 3985 078a 77       		.byte	0x77
 3986 078b 08       		.sleb128 8
 3987 078c 00000000 		.4byte	0
 3988 0790 00000000 		.4byte	0
 3989              	.LLST37:
 3990 0794 00000000 		.4byte	.LFB37
 3991 0798 02000000 		.4byte	.LCFI100
 3992 079c 0200     		.2byte	0x2
 3993 079e 7D       		.byte	0x7d
 3994 079f 00       		.sleb128 0
 3995 07a0 02000000 		.4byte	.LCFI100
 3996 07a4 04000000 		.4byte	.LCFI101
 3997 07a8 0200     		.2byte	0x2
 3998 07aa 7D       		.byte	0x7d
 3999 07ab 08       		.sleb128 8
 4000 07ac 04000000 		.4byte	.LCFI101
 4001 07b0 14000000 		.4byte	.LFE37
 4002 07b4 0200     		.2byte	0x2
 4003 07b6 77       		.byte	0x77
 4004 07b7 08       		.sleb128 8
 4005 07b8 00000000 		.4byte	0
 4006 07bc 00000000 		.4byte	0
 4007              	.LLST38:
 4008 07c0 00000000 		.4byte	.LFB38
 4009 07c4 02000000 		.4byte	.LCFI102
 4010 07c8 0200     		.2byte	0x2
 4011 07ca 7D       		.byte	0x7d
 4012 07cb 00       		.sleb128 0
 4013 07cc 02000000 		.4byte	.LCFI102
 4014 07d0 04000000 		.4byte	.LCFI103
 4015 07d4 0200     		.2byte	0x2
 4016 07d6 7D       		.byte	0x7d
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 96


 4017 07d7 08       		.sleb128 8
 4018 07d8 04000000 		.4byte	.LCFI103
 4019 07dc 06000000 		.4byte	.LCFI104
 4020 07e0 0200     		.2byte	0x2
 4021 07e2 7D       		.byte	0x7d
 4022 07e3 10       		.sleb128 16
 4023 07e4 06000000 		.4byte	.LCFI104
 4024 07e8 18000000 		.4byte	.LFE38
 4025 07ec 0200     		.2byte	0x2
 4026 07ee 77       		.byte	0x77
 4027 07ef 10       		.sleb128 16
 4028 07f0 00000000 		.4byte	0
 4029 07f4 00000000 		.4byte	0
 4030              	.LLST39:
 4031 07f8 00000000 		.4byte	.LFB39
 4032 07fc 02000000 		.4byte	.LCFI105
 4033 0800 0200     		.2byte	0x2
 4034 0802 7D       		.byte	0x7d
 4035 0803 00       		.sleb128 0
 4036 0804 02000000 		.4byte	.LCFI105
 4037 0808 04000000 		.4byte	.LCFI106
 4038 080c 0200     		.2byte	0x2
 4039 080e 7D       		.byte	0x7d
 4040 080f 08       		.sleb128 8
 4041 0810 04000000 		.4byte	.LCFI106
 4042 0814 06000000 		.4byte	.LCFI107
 4043 0818 0200     		.2byte	0x2
 4044 081a 7D       		.byte	0x7d
 4045 081b 10       		.sleb128 16
 4046 081c 06000000 		.4byte	.LCFI107
 4047 0820 18000000 		.4byte	.LFE39
 4048 0824 0200     		.2byte	0x2
 4049 0826 77       		.byte	0x77
 4050 0827 10       		.sleb128 16
 4051 0828 00000000 		.4byte	0
 4052 082c 00000000 		.4byte	0
 4053              		.section	.debug_aranges,"",%progbits
 4054 0000 54010000 		.4byte	0x154
 4055 0004 0200     		.2byte	0x2
 4056 0006 00000000 		.4byte	.Ldebug_info0
 4057 000a 04       		.byte	0x4
 4058 000b 00       		.byte	0
 4059 000c 0000     		.2byte	0
 4060 000e 0000     		.2byte	0
 4061 0010 00000000 		.4byte	.LFB0
 4062 0014 50000000 		.4byte	.LFE0-.LFB0
 4063 0018 00000000 		.4byte	.LFB1
 4064 001c 38000000 		.4byte	.LFE1-.LFB1
 4065 0020 00000000 		.4byte	.LFB2
 4066 0024 24000000 		.4byte	.LFE2-.LFB2
 4067 0028 00000000 		.4byte	.LFB3
 4068 002c 30000000 		.4byte	.LFE3-.LFB3
 4069 0030 00000000 		.4byte	.LFB4
 4070 0034 48000000 		.4byte	.LFE4-.LFB4
 4071 0038 00000000 		.4byte	.LFB5
 4072 003c 48000000 		.4byte	.LFE5-.LFB5
 4073 0040 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 97


 4074 0044 48000000 		.4byte	.LFE6-.LFB6
 4075 0048 00000000 		.4byte	.LFB7
 4076 004c 4C000000 		.4byte	.LFE7-.LFB7
 4077 0050 00000000 		.4byte	.LFB8
 4078 0054 1C000000 		.4byte	.LFE8-.LFB8
 4079 0058 00000000 		.4byte	.LFB9
 4080 005c 48000000 		.4byte	.LFE9-.LFB9
 4081 0060 00000000 		.4byte	.LFB10
 4082 0064 48000000 		.4byte	.LFE10-.LFB10
 4083 0068 00000000 		.4byte	.LFB11
 4084 006c 4C000000 		.4byte	.LFE11-.LFB11
 4085 0070 00000000 		.4byte	.LFB12
 4086 0074 48000000 		.4byte	.LFE12-.LFB12
 4087 0078 00000000 		.4byte	.LFB13
 4088 007c 1C000000 		.4byte	.LFE13-.LFB13
 4089 0080 00000000 		.4byte	.LFB14
 4090 0084 18000000 		.4byte	.LFE14-.LFB14
 4091 0088 00000000 		.4byte	.LFB15
 4092 008c 48000000 		.4byte	.LFE15-.LFB15
 4093 0090 00000000 		.4byte	.LFB16
 4094 0094 1C000000 		.4byte	.LFE16-.LFB16
 4095 0098 00000000 		.4byte	.LFB17
 4096 009c 18000000 		.4byte	.LFE17-.LFB17
 4097 00a0 00000000 		.4byte	.LFB18
 4098 00a4 48000000 		.4byte	.LFE18-.LFB18
 4099 00a8 00000000 		.4byte	.LFB19
 4100 00ac 1C000000 		.4byte	.LFE19-.LFB19
 4101 00b0 00000000 		.4byte	.LFB20
 4102 00b4 18000000 		.4byte	.LFE20-.LFB20
 4103 00b8 00000000 		.4byte	.LFB21
 4104 00bc 48000000 		.4byte	.LFE21-.LFB21
 4105 00c0 00000000 		.4byte	.LFB22
 4106 00c4 1C000000 		.4byte	.LFE22-.LFB22
 4107 00c8 00000000 		.4byte	.LFB23
 4108 00cc 18000000 		.4byte	.LFE23-.LFB23
 4109 00d0 00000000 		.4byte	.LFB24
 4110 00d4 1C000000 		.4byte	.LFE24-.LFB24
 4111 00d8 00000000 		.4byte	.LFB25
 4112 00dc 18000000 		.4byte	.LFE25-.LFB25
 4113 00e0 00000000 		.4byte	.LFB26
 4114 00e4 18000000 		.4byte	.LFE26-.LFB26
 4115 00e8 00000000 		.4byte	.LFB27
 4116 00ec 18000000 		.4byte	.LFE27-.LFB27
 4117 00f0 00000000 		.4byte	.LFB28
 4118 00f4 44000000 		.4byte	.LFE28-.LFB28
 4119 00f8 00000000 		.4byte	.LFB29
 4120 00fc 44000000 		.4byte	.LFE29-.LFB29
 4121 0100 00000000 		.4byte	.LFB30
 4122 0104 48000000 		.4byte	.LFE30-.LFB30
 4123 0108 00000000 		.4byte	.LFB31
 4124 010c 44000000 		.4byte	.LFE31-.LFB31
 4125 0110 00000000 		.4byte	.LFB32
 4126 0114 44000000 		.4byte	.LFE32-.LFB32
 4127 0118 00000000 		.4byte	.LFB33
 4128 011c 3C000000 		.4byte	.LFE33-.LFB33
 4129 0120 00000000 		.4byte	.LFB34
 4130 0124 20000000 		.4byte	.LFE34-.LFB34
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 98


 4131 0128 00000000 		.4byte	.LFB35
 4132 012c 18000000 		.4byte	.LFE35-.LFB35
 4133 0130 00000000 		.4byte	.LFB36
 4134 0134 14000000 		.4byte	.LFE36-.LFB36
 4135 0138 00000000 		.4byte	.LFB37
 4136 013c 14000000 		.4byte	.LFE37-.LFB37
 4137 0140 00000000 		.4byte	.LFB38
 4138 0144 18000000 		.4byte	.LFE38-.LFB38
 4139 0148 00000000 		.4byte	.LFB39
 4140 014c 18000000 		.4byte	.LFE39-.LFB39
 4141 0150 00000000 		.4byte	0
 4142 0154 00000000 		.4byte	0
 4143              		.section	.debug_ranges,"",%progbits
 4144              	.Ldebug_ranges0:
 4145 0000 00000000 		.4byte	.LFB0
 4146 0004 50000000 		.4byte	.LFE0
 4147 0008 00000000 		.4byte	.LFB1
 4148 000c 38000000 		.4byte	.LFE1
 4149 0010 00000000 		.4byte	.LFB2
 4150 0014 24000000 		.4byte	.LFE2
 4151 0018 00000000 		.4byte	.LFB3
 4152 001c 30000000 		.4byte	.LFE3
 4153 0020 00000000 		.4byte	.LFB4
 4154 0024 48000000 		.4byte	.LFE4
 4155 0028 00000000 		.4byte	.LFB5
 4156 002c 48000000 		.4byte	.LFE5
 4157 0030 00000000 		.4byte	.LFB6
 4158 0034 48000000 		.4byte	.LFE6
 4159 0038 00000000 		.4byte	.LFB7
 4160 003c 4C000000 		.4byte	.LFE7
 4161 0040 00000000 		.4byte	.LFB8
 4162 0044 1C000000 		.4byte	.LFE8
 4163 0048 00000000 		.4byte	.LFB9
 4164 004c 48000000 		.4byte	.LFE9
 4165 0050 00000000 		.4byte	.LFB10
 4166 0054 48000000 		.4byte	.LFE10
 4167 0058 00000000 		.4byte	.LFB11
 4168 005c 4C000000 		.4byte	.LFE11
 4169 0060 00000000 		.4byte	.LFB12
 4170 0064 48000000 		.4byte	.LFE12
 4171 0068 00000000 		.4byte	.LFB13
 4172 006c 1C000000 		.4byte	.LFE13
 4173 0070 00000000 		.4byte	.LFB14
 4174 0074 18000000 		.4byte	.LFE14
 4175 0078 00000000 		.4byte	.LFB15
 4176 007c 48000000 		.4byte	.LFE15
 4177 0080 00000000 		.4byte	.LFB16
 4178 0084 1C000000 		.4byte	.LFE16
 4179 0088 00000000 		.4byte	.LFB17
 4180 008c 18000000 		.4byte	.LFE17
 4181 0090 00000000 		.4byte	.LFB18
 4182 0094 48000000 		.4byte	.LFE18
 4183 0098 00000000 		.4byte	.LFB19
 4184 009c 1C000000 		.4byte	.LFE19
 4185 00a0 00000000 		.4byte	.LFB20
 4186 00a4 18000000 		.4byte	.LFE20
 4187 00a8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 99


 4188 00ac 48000000 		.4byte	.LFE21
 4189 00b0 00000000 		.4byte	.LFB22
 4190 00b4 1C000000 		.4byte	.LFE22
 4191 00b8 00000000 		.4byte	.LFB23
 4192 00bc 18000000 		.4byte	.LFE23
 4193 00c0 00000000 		.4byte	.LFB24
 4194 00c4 1C000000 		.4byte	.LFE24
 4195 00c8 00000000 		.4byte	.LFB25
 4196 00cc 18000000 		.4byte	.LFE25
 4197 00d0 00000000 		.4byte	.LFB26
 4198 00d4 18000000 		.4byte	.LFE26
 4199 00d8 00000000 		.4byte	.LFB27
 4200 00dc 18000000 		.4byte	.LFE27
 4201 00e0 00000000 		.4byte	.LFB28
 4202 00e4 44000000 		.4byte	.LFE28
 4203 00e8 00000000 		.4byte	.LFB29
 4204 00ec 44000000 		.4byte	.LFE29
 4205 00f0 00000000 		.4byte	.LFB30
 4206 00f4 48000000 		.4byte	.LFE30
 4207 00f8 00000000 		.4byte	.LFB31
 4208 00fc 44000000 		.4byte	.LFE31
 4209 0100 00000000 		.4byte	.LFB32
 4210 0104 44000000 		.4byte	.LFE32
 4211 0108 00000000 		.4byte	.LFB33
 4212 010c 3C000000 		.4byte	.LFE33
 4213 0110 00000000 		.4byte	.LFB34
 4214 0114 20000000 		.4byte	.LFE34
 4215 0118 00000000 		.4byte	.LFB35
 4216 011c 18000000 		.4byte	.LFE35
 4217 0120 00000000 		.4byte	.LFB36
 4218 0124 14000000 		.4byte	.LFE36
 4219 0128 00000000 		.4byte	.LFB37
 4220 012c 14000000 		.4byte	.LFE37
 4221 0130 00000000 		.4byte	.LFB38
 4222 0134 18000000 		.4byte	.LFE38
 4223 0138 00000000 		.4byte	.LFB39
 4224 013c 18000000 		.4byte	.LFE39
 4225 0140 00000000 		.4byte	0
 4226 0144 00000000 		.4byte	0
 4227              		.section	.debug_line,"",%progbits
 4228              	.Ldebug_line0:
 4229 0000 74030000 		.section	.debug_str,"MS",%progbits,1
 4229      02004200 
 4229      00000201 
 4229      FB0E0D00 
 4229      01010101 
 4230              	.LASF40:
 4231 0000 636F756E 		.ascii	"count\000"
 4231      7400
 4232              	.LASF18:
 4233 0006 50574D5F 		.ascii	"PWM_Enable\000"
 4233      456E6162 
 4233      6C6500
 4234              	.LASF31:
 4235 0011 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 4235      53657450 
 4235      574D5379 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 100


 4235      6E634B69 
 4235      6C6C00
 4236              	.LASF44:
 4237 0024 70657269 		.ascii	"period\000"
 4237      6F6400
 4238              	.LASF7:
 4239 002b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4239      206C6F6E 
 4239      6720756E 
 4239      7369676E 
 4239      65642069 
 4240              	.LASF61:
 4241 0042 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 4241      53657443 
 4241      61707475 
 4241      72654D6F 
 4241      646500
 4242              	.LASF24:
 4243 0055 71644D6F 		.ascii	"qdMode\000"
 4243      646500
 4244              	.LASF39:
 4245 005c 50574D5F 		.ascii	"PWM_WriteCounter\000"
 4245      57726974 
 4245      65436F75 
 4245      6E746572 
 4245      00
 4246              	.LASF45:
 4247 006d 50574D5F 		.ascii	"PWM_ReadCounter\000"
 4247      52656164 
 4247      436F756E 
 4247      74657200 
 4248              	.LASF6:
 4249 007d 6C6F6E67 		.ascii	"long long int\000"
 4249      206C6F6E 
 4249      6720696E 
 4249      7400
 4250              	.LASF0:
 4251 008b 7369676E 		.ascii	"signed char\000"
 4251      65642063 
 4251      68617200 
 4252              	.LASF56:
 4253 0097 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 4253      57726974 
 4253      65436F6D 
 4253      70617265 
 4253      42756600 
 4254              	.LASF70:
 4255 00ab 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 4255      53657449 
 4255      6E746572 
 4255      72757074 
 4255      4D6F6465 
 4256              	.LASF74:
 4257 00c0 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 4257      436C6561 
 4257      72496E74 
 4257      65727275 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 101


 4257      707400
 4258              	.LASF77:
 4259 00d3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 4259      6E657261 
 4259      7465645F 
 4259      536F7572 
 4259      63655C50 
 4260              	.LASF4:
 4261 00f2 6C6F6E67 		.ascii	"long int\000"
 4261      20696E74 
 4261      00
 4262              	.LASF9:
 4263 00fb 75696E74 		.ascii	"uint8\000"
 4263      3800
 4264              	.LASF12:
 4265 0101 646F7562 		.ascii	"double\000"
 4265      6C6500
 4266              	.LASF58:
 4267 0108 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 4267      52656164 
 4267      436F6D70 
 4267      61726542 
 4267      756600
 4268              	.LASF47:
 4269 011b 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 4269      53657443 
 4269      6F6D7061 
 4269      72655377 
 4269      617000
 4270              	.LASF19:
 4271 012e 50574D5F 		.ascii	"PWM_Stop\000"
 4271      53746F70 
 4271      00
 4272              	.LASF37:
 4273 0137 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 4273      53657450 
 4273      574D496E 
 4273      76657274 
 4273      00
 4274              	.LASF10:
 4275 0148 75696E74 		.ascii	"uint32\000"
 4275      333200
 4276              	.LASF64:
 4277 014f 50574D5F 		.ascii	"PWM_SetStartMode\000"
 4277      53657453 
 4277      74617274 
 4277      4D6F6465 
 4277      00
 4278              	.LASF62:
 4279 0160 74726967 		.ascii	"triggerMode\000"
 4279      6765724D 
 4279      6F646500 
 4280              	.LASF38:
 4281 016c 6D61736B 		.ascii	"mask\000"
 4281      00
 4282              	.LASF69:
 4283 0171 50574D5F 		.ascii	"PWM_ReadStatus\000"
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 102


 4283      52656164 
 4283      53746174 
 4283      757300
 4284              	.LASF36:
 4285 0180 64656164 		.ascii	"deadTime\000"
 4285      54696D65 
 4285      00
 4286              	.LASF65:
 4287 0189 50574D5F 		.ascii	"PWM_SetStopMode\000"
 4287      53657453 
 4287      746F704D 
 4287      6F646500 
 4288              	.LASF8:
 4289 0199 756E7369 		.ascii	"unsigned int\000"
 4289      676E6564 
 4289      20696E74 
 4289      00
 4290              	.LASF35:
 4291 01a6 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 4291      53657450 
 4291      574D4465 
 4291      61645469 
 4291      6D6500
 4292              	.LASF68:
 4293 01b9 636F6D6D 		.ascii	"command\000"
 4293      616E6400 
 4294              	.LASF5:
 4295 01c1 6C6F6E67 		.ascii	"long unsigned int\000"
 4295      20756E73 
 4295      69676E65 
 4295      6420696E 
 4295      7400
 4296              	.LASF30:
 4297 01d3 6D6F6465 		.ascii	"modeMask\000"
 4297      4D61736B 
 4297      00
 4298              	.LASF3:
 4299 01dc 73686F72 		.ascii	"short unsigned int\000"
 4299      7420756E 
 4299      7369676E 
 4299      65642069 
 4299      6E7400
 4300              	.LASF25:
 4301 01ef 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 4301      53657450 
 4301      72657363 
 4301      616C6572 
 4301      00
 4302              	.LASF17:
 4303 0200 50574D5F 		.ascii	"PWM_Start\000"
 4303      53746172 
 4303      7400
 4304              	.LASF67:
 4305 020a 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 4305      54726967 
 4305      67657243 
 4305      6F6D6D61 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 103


 4305      6E6400
 4306              	.LASF53:
 4307 021d 50574D5F 		.ascii	"PWM_WriteCompare\000"
 4307      57726974 
 4307      65436F6D 
 4307      70617265 
 4307      00
 4308              	.LASF43:
 4309 022e 50574D5F 		.ascii	"PWM_WritePeriod\000"
 4309      57726974 
 4309      65506572 
 4309      696F6400 
 4310              	.LASF14:
 4311 023e 72656733 		.ascii	"reg32\000"
 4311      3200
 4312              	.LASF79:
 4313 0244 50574D5F 		.ascii	"PWM_initVar\000"
 4313      696E6974 
 4313      56617200 
 4314              	.LASF46:
 4315 0250 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 4315      52656164 
 4315      50657269 
 4315      6F6400
 4316              	.LASF15:
 4317 025f 73697A65 		.ascii	"sizetype\000"
 4317      74797065 
 4317      00
 4318              	.LASF32:
 4319 0268 73796E63 		.ascii	"syncKillEnable\000"
 4319      4B696C6C 
 4319      456E6162 
 4319      6C6500
 4320              	.LASF54:
 4321 0277 636F6D70 		.ascii	"compare\000"
 4321      61726500 
 4322              	.LASF27:
 4323 027f 50574D5F 		.ascii	"PWM_SetOneShot\000"
 4323      5365744F 
 4323      6E655368 
 4323      6F7400
 4324              	.LASF51:
 4325 028e 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 4325      52656164 
 4325      50657269 
 4325      6F644275 
 4325      6600
 4326              	.LASF11:
 4327 02a0 666C6F61 		.ascii	"float\000"
 4327      7400
 4328              	.LASF26:
 4329 02a6 70726573 		.ascii	"prescaler\000"
 4329      63616C65 
 4329      7200
 4330              	.LASF59:
 4331 02b0 50574D5F 		.ascii	"PWM_ReadCapture\000"
 4331      52656164 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 104


 4331      43617074 
 4331      75726500 
 4332              	.LASF52:
 4333 02c0 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 4333      53657450 
 4333      6572696F 
 4333      64537761 
 4333      7000
 4334              	.LASF76:
 4335 02d2 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 4335      4320342E 
 4335      372E3320 
 4335      32303133 
 4335      30333132 
 4336 0305 616E6368 		.ascii	"anch revision 196615]\000"
 4336      20726576 
 4336      6973696F 
 4336      6E203139 
 4336      36363135 
 4337              	.LASF1:
 4338 031b 756E7369 		.ascii	"unsigned char\000"
 4338      676E6564 
 4338      20636861 
 4338      7200
 4339              	.LASF16:
 4340 0329 50574D5F 		.ascii	"PWM_Init\000"
 4340      496E6974 
 4340      00
 4341              	.LASF34:
 4342 0332 73746F70 		.ascii	"stopOnKillEnable\000"
 4342      4F6E4B69 
 4342      6C6C456E 
 4342      61626C65 
 4342      00
 4343              	.LASF29:
 4344 0343 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 4344      53657450 
 4344      574D4D6F 
 4344      646500
 4345              	.LASF2:
 4346 0352 73686F72 		.ascii	"short int\000"
 4346      7420696E 
 4346      7400
 4347              	.LASF72:
 4348 035c 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 4348      47657449 
 4348      6E746572 
 4348      72757074 
 4348      536F7572 
 4349              	.LASF71:
 4350 0379 696E7465 		.ascii	"interruptMask\000"
 4350      72727570 
 4350      744D6173 
 4350      6B00
 4351              	.LASF78:
 4352 0387 443A5C57 		.ascii	"D:\\Workspace\\psoc4\\PWM_Fade_Ex\\PWMExample01\\PW"
 4352      6F726B73 
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 105


 4352      70616365 
 4352      5C70736F 
 4352      63345C50 
 4353 03b5 4D5F4C45 		.ascii	"M_LED_Fade.cydsn\000"
 4353      445F4661 
 4353      64652E63 
 4353      7964736E 
 4353      00
 4354              	.LASF49:
 4355 03c6 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 4355      57726974 
 4355      65506572 
 4355      696F6442 
 4355      756600
 4356              	.LASF22:
 4357 03d9 50574D5F 		.ascii	"PWM_SetQDMode\000"
 4357      53657451 
 4357      444D6F64 
 4357      6500
 4358              	.LASF13:
 4359 03e7 63686172 		.ascii	"char\000"
 4359      00
 4360              	.LASF23:
 4361 03ec 6D6F6465 		.ascii	"mode\000"
 4361      00
 4362              	.LASF75:
 4363 03f1 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 4363      53657449 
 4363      6E746572 
 4363      72757074 
 4363      00
 4364              	.LASF63:
 4365 0402 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 4365      53657452 
 4365      656C6F61 
 4365      644D6F64 
 4365      6500
 4366              	.LASF42:
 4367 0414 636F756E 		.ascii	"counterMode\000"
 4367      7465724D 
 4367      6F646500 
 4368              	.LASF57:
 4369 0420 636F6D70 		.ascii	"compareBuf\000"
 4369      61726542 
 4369      756600
 4370              	.LASF50:
 4371 042b 70657269 		.ascii	"periodBuf\000"
 4371      6F644275 
 4371      6600
 4372              	.LASF60:
 4373 0435 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 4373      52656164 
 4373      43617074 
 4373      75726542 
 4373      756600
 4374              	.LASF20:
 4375 0448 656E6162 		.ascii	"enableInterrupts\000"
ARM GAS  C:\Users\gsgill\AppData\Local\Temp\ccOyH9RQ.s 			page 106


 4375      6C65496E 
 4375      74657272 
 4375      75707473 
 4375      00
 4376              	.LASF66:
 4377 0459 50574D5F 		.ascii	"PWM_SetCountMode\000"
 4377      53657443 
 4377      6F756E74 
 4377      4D6F6465 
 4377      00
 4378              	.LASF28:
 4379 046a 6F6E6553 		.ascii	"oneShotEnable\000"
 4379      686F7445 
 4379      6E61626C 
 4379      6500
 4380              	.LASF21:
 4381 0478 50574D5F 		.ascii	"PWM_SetMode\000"
 4381      5365744D 
 4381      6F646500 
 4382              	.LASF33:
 4383 0484 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 4383      53657450 
 4383      574D5374 
 4383      6F704F6E 
 4383      4B696C6C 
 4384              	.LASF48:
 4385 0499 73776170 		.ascii	"swapEnable\000"
 4385      456E6162 
 4385      6C6500
 4386              	.LASF73:
 4387 04a4 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 4387      47657449 
 4387      6E746572 
 4387      72757074 
 4387      536F7572 
 4388              	.LASF41:
 4389 04bb 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 4389      53657443 
 4389      6F756E74 
 4389      65724D6F 
 4389      646500
 4390              	.LASF55:
 4391 04ce 50574D5F 		.ascii	"PWM_ReadCompare\000"
 4391      52656164 
 4391      436F6D70 
 4391      61726500 
 4392              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
